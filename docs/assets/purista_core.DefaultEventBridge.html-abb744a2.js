import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as l,c,b as e,e as n,w as o,d as t,a as i}from"./app-84f9f5da.js";const h={},u=e("h1",{id:"class-defaulteventbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-defaulteventbridge","aria-hidden":"true"},"#"),t(" Class: DefaultEventBridge")],-1),_=i(`<p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>`,4),p=e("code",null,"EventBridgeBaseClass",-1),g=e("code",null,"DefaultEventBridgeConfig",-1),f=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"DefaultEventBridge")])],-1),m=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),t(" Implements")],-1),v=e("code",null,"EventBridge",-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),B=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),y=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),E=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),x=i('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new DefaultEventBridge</strong>(<code>config?</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',4),D=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),k=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.defaultCommandTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Overwrite the hardcoded default timeout of command invocations")],-1),I=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.emitMessagesAsEventBridgeEvents?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Emit messages which have an event name set as javascript events on the event bridge instance")],-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.instanceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.")],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"config.logLevel?")],-1),P={style:{"text-align":"left"}},L=e("code",null,"LogLevelName",-1),N=e("td",{style:{"text-align":"left"}},"If no logger instance is given, use this log level",-1),S=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.logWarnOnMessagesWithoutReceiver?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Log warnings on messages which are emitted, but could not delivered to at least one receiver")],-1),R=e("td",{style:{"text-align":"left"}},[e("code",null,"config.logger?")],-1),M={style:{"text-align":"left"}},A=e("code",null,"Logger",-1),V=e("td",{style:{"text-align":"left"}},"A logger instance",-1),K=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"A OpenTelemetry span processor")],-1),F=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),O=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),G={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L83",target:"_blank",rel:"noopener noreferrer"},H=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),q=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),W=e("strong",null,"config",-1),j=e("code",null,"Complete",-1),U=e("code",null,"defaultCommandTimeout?",-1),z=e("code",null,"number",-1),J=e("code",null,"emitMessagesAsEventBridgeEvents?",-1),Q=e("code",null,"boolean",-1),X=e("code",null,"instanceId?",-1),Y=e("code",null,"string",-1),Z=e("code",null,"logLevel?",-1),$=e("code",null,"LogLevelName",-1),ee=e("code",null,"logWarnOnMessagesWithoutReceiver?",-1),te=e("code",null,"boolean",-1),ne=e("code",null,"logger?",-1),se=e("code",null,"Logger",-1),oe=e("code",null,"spanProcessor?",-1),de=e("code",null,"SpanProcessor",-1),ie=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ae=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),re={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},le=e("hr",null,null,-1),ce=e("h3",{id:"defaultcommandtimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defaultcommandtimeout","aria-hidden":"true"},"#"),t(" defaultCommandTimeout")],-1),he=e("p",null,[t("• "),e("strong",null,"defaultCommandTimeout"),t(": "),e("code",null,"number")],-1),ue=e("p",null,"The default time until when a command invocation automatically returns a time out error",-1),_e=e("h4",{id:"implementation-of",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of","aria-hidden":"true"},"#"),t(" Implementation of")],-1),pe=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ge=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),fe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27",target:"_blank",rel:"noopener noreferrer"},me=i('<hr><h3 id="hasstarted" tabindex="-1"><a class="header-anchor" href="#hasstarted" aria-hidden="true">#</a> hasStarted</h3><p>• <code>Protected</code> <strong>hasStarted</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',4),ve={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},be=i('<hr><h3 id="healthy" tabindex="-1"><a class="header-anchor" href="#healthy" aria-hidden="true">#</a> healthy</h3><p>• <code>Protected</code> <strong>healthy</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),Be={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L81",target:"_blank",rel:"noopener noreferrer"},ye=e("hr",null,null,-1),Ee=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),xe=e("p",null,[t("• "),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),De=e("h4",{id:"implementation-of-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-1","aria-hidden":"true"},"#"),t(" Implementation of")],-1),ke=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Ce=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},we=e("hr",null,null,-1),Te=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),Pe=e("strong",null,"logger",-1),Le=e("code",null,"Logger",-1),Ne=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Se=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Re={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},Me=e("hr",null,null,-1),Ae=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),Ve=e("p",null,[t("• "),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),Ke=e("h4",{id:"implementation-of-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-2","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Fe=e("h4",{id:"inherited-from-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-4","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Oe=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ge={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23",target:"_blank",rel:"noopener noreferrer"},He=e("hr",null,null,-1),qe=e("h3",{id:"pendinginvocations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendinginvocations","aria-hidden":"true"},"#"),t(" pendingInvocations")],-1),We=e("code",null,"Protected",-1),je=e("strong",null,"pendingInvocations",-1),Ue=e("code",null,"Map",-1),ze=e("code",null,"string",-1),Je=e("code",null,"PendigInvocation",-1),Qe=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L75",target:"_blank",rel:"noopener noreferrer"},Ye=e("hr",null,null,-1),Ze=e("h3",{id:"readstream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#readstream","aria-hidden":"true"},"#"),t(" readStream")],-1),$e=e("p",null,[t("• "),e("code",null,"Protected"),t(),e("strong",null,"readStream"),t(": "),e("code",null,"Readable")],-1),et=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),tt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L63",target:"_blank",rel:"noopener noreferrer"},nt=i('<hr><h3 id="runningsubscriptioncount" tabindex="-1"><a class="header-anchor" href="#runningsubscriptioncount" aria-hidden="true">#</a> runningSubscriptionCount</h3><p>• <code>Protected</code> <strong>runningSubscriptionCount</strong>: <code>number</code> = <code>0</code></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',4),st={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L76",target:"_blank",rel:"noopener noreferrer"},ot=e("hr",null,null,-1),dt=e("h3",{id:"servicefunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#servicefunctions","aria-hidden":"true"},"#"),t(" serviceFunctions")],-1),it=e("code",null,"Protected",-1),at=e("strong",null,"serviceFunctions",-1),rt=e("code",null,"Map",-1),lt=e("code",null,"string",-1),ct=e("code",null,"message",-1),ht=e("code",null,"contentEncoding",-1),ut=e("code",null,"string",-1),_t=e("code",null,"contentType",-1),pt=e("code",null,"string",-1),gt=e("code",null,"correlationId",-1),ft=e("code",null,"string",-1),mt=e("code",null,"eventName?",-1),vt=e("code",null,"string",-1),bt=e("code",null,"id",-1),Bt=e("code",null,"string",-1),yt=e("code",null,"messageType",-1),Et=e("code",null,"Command",-1),xt=e("code",null,"otp?",-1),Dt=e("code",null,"string",-1),kt=e("code",null,"payload",-1),Ct=e("code",null,"parameter",-1),It=e("code",null,"unknown",-1),wt=e("code",null,"payload",-1),Tt=e("code",null,"unknown",-1),Pt=e("code",null,"principalId?",-1),Lt=e("code",null,"string",-1),Nt=e("code",null,"receiver",-1),St=e("code",null,"EBMessageAddress",-1),Rt=e("code",null,"sender",-1),Mt=e("code",null,"tenantId?",-1),At=e("code",null,"string",-1),Vt=e("code",null,"timestamp",-1),Kt=e("code",null,"number",-1),Ft=e("code",null,"traceId?",-1),Ot=e("code",null,"string",-1),Gt=e("code",null,"Promise",-1),Ht=e("code",null,"contentEncoding",-1),qt=e("code",null,'"utf-8"',-1),Wt=e("code",null,"contentType",-1),jt=e("code",null,'"application/json"',-1),Ut=e("code",null,"correlationId",-1),zt=e("code",null,"string",-1),Jt=e("code",null,"eventName?",-1),Qt=e("code",null,"string",-1),Xt=e("code",null,"id",-1),Yt=e("code",null,"string",-1),Zt=e("code",null,"isHandledError",-1),$t=e("code",null,"boolean",-1),en=e("code",null,"messageType",-1),tn=e("code",null,"CommandErrorResponse",-1),nn=e("code",null,"otp?",-1),sn=e("code",null,"string",-1),on=e("code",null,"payload",-1),dn=e("code",null,"data?",-1),an=e("code",null,"unknown",-1),rn=e("code",null,"message",-1),ln=e("code",null,"string",-1),cn=e("code",null,"status",-1),hn=e("code",null,"StatusCode",-1),un=e("code",null,"principalId?",-1),_n=e("code",null,"string",-1),pn=e("code",null,"receiver",-1),gn=e("code",null,"sender",-1),fn=e("code",null,"tenantId?",-1),mn=e("code",null,"string",-1),vn=e("code",null,"timestamp",-1),bn=e("code",null,"number",-1),Bn=e("code",null,"traceId?",-1),yn=e("code",null,"string",-1),En=e("code",null,"contentEncoding",-1),xn=e("code",null,"string",-1),Dn=e("code",null,"contentType",-1),kn=e("code",null,"string",-1),Cn=e("code",null,"correlationId",-1),In=e("code",null,"string",-1),wn=e("code",null,"eventName?",-1),Tn=e("code",null,"string",-1),Pn=e("code",null,"id",-1),Ln=e("code",null,"string",-1),Nn=e("code",null,"messageType",-1),Sn=e("code",null,"CommandSuccessResponse",-1),Rn=e("code",null,"otp?",-1),Mn=e("code",null,"string",-1),An=e("code",null,"payload",-1),Vn=e("code",null,"unknown",-1),Kn=e("code",null,"principalId?",-1),Fn=e("code",null,"string",-1),On=e("code",null,"receiver",-1),Gn=e("code",null,"sender",-1),Hn=e("code",null,"tenantId?",-1),qn=e("code",null,"string",-1),Wn=e("code",null,"timestamp",-1),jn=e("code",null,"number",-1),Un=e("code",null,"traceId?",-1),zn=e("code",null,"string",-1),Jn=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L70",target:"_blank",rel:"noopener noreferrer"},Xn=e("hr",null,null,-1),Yn=e("h3",{id:"subscriptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptions","aria-hidden":"true"},"#"),t(" subscriptions")],-1),Zn=e("code",null,"Protected",-1),$n=e("strong",null,"subscriptions",-1),es=e("code",null,"Map",-1),ts=e("code",null,"string",-1),ns=e("code",null,"SubscriptionStorageEntry",-1),ss=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),os={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L78",target:"_blank",rel:"noopener noreferrer"},ds=e("hr",null,null,-1),is=e("h3",{id:"traceprovider",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceprovider","aria-hidden":"true"},"#"),t(" traceProvider")],-1),as=e("p",null,[t("• "),e("strong",null,"traceProvider"),t(": "),e("code",null,"NodeTracerProvider")],-1),rs=e("h4",{id:"inherited-from-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-5","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ls=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),cs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19",target:"_blank",rel:"noopener noreferrer"},hs=e("hr",null,null,-1),us=e("h3",{id:"writestream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#writestream","aria-hidden":"true"},"#"),t(" writeStream")],-1),_s=e("p",null,[t("• "),e("code",null,"Protected"),t(),e("strong",null,"writeStream"),t(": "),e("code",null,"Writable")],-1),ps=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),gs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L62",target:"_blank",rel:"noopener noreferrer"},fs=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Shut down event bridge as gracefully as possible</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-3" tabindex="-1"><a class="header-anchor" href="#implementation-of-3" aria-hidden="true">#</a> Implementation of</h4>',7),ms=e("h4",{id:"overrides-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-1","aria-hidden":"true"},"#"),t(" Overrides")],-1),vs=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),bs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L382",target:"_blank",rel:"noopener noreferrer"},Bs=i('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',4),ys=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Es=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),xs={style:{"text-align":"left"}},Ds=e("code",null,"EventKey",-1),ks=e("code",null,"eventbridge-connected",-1),Cs=e("code",null,"never",-1),Is=e("code",null,"eventbridge-connection-error",-1),ws=e("code",null,"unknown",-1),Ts=e("code",null,"eventbridge-disconnected",-1),Ps=e("code",null,"never",-1),Ls=e("code",null,"eventbridge-error",-1),Ns=e("code",null,"unknown",-1),Ss=e("code",null,"eventbridge-reconnecting",-1),Rs=e("code",null,"never",-1),Ms=i('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>parameter?</code></td><td style="text-align:left;">{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-6" tabindex="-1"><a class="header-anchor" href="#inherited-from-6" aria-hidden="true">#</a> Inherited from</h4>',5),As=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),Vs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L24",target:"_blank",rel:"noopener noreferrer"},Ks=e("hr",null,null,-1),Fs=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),Os=e("strong",null,"emitMessage",-1),Gs=e("code",null,"message",-1),Hs=e("code",null,"Promise",-1),qs=e("code",null,"Readonly",-1),Ws=e("code",null,"EBMessage",-1),js=e("p",null,"Emit a new message to event bridge to be delivered to receiver",-1),Us=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),zs=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Js=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Qs={style:{"text-align":"left"}},Xs=e("code",null,"Omit",-1),Ys=e("code",null,"EBMessage",-1),Zs=e("code",null,'"correlationId"',-1),$s=e("code",null,'"id"',-1),eo=e("code",null,'"timestamp"',-1),to=e("td",{style:{"text-align":"left"}},"EBMessage",-1),no=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),so=e("code",null,"Promise",-1),oo=e("code",null,"Readonly",-1),io=e("code",null,"EBMessage",-1),ao=e("h4",{id:"implementation-of-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-4","aria-hidden":"true"},"#"),t(" Implementation of")],-1),ro=e("h4",{id:"defined-in-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-17","aria-hidden":"true"},"#"),t(" Defined in")],-1),lo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L285",target:"_blank",rel:"noopener noreferrer"},co=i('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7" aria-hidden="true">#</a> Inherited from</h4>',8),ho=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),uo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L68",target:"_blank",rel:"noopener noreferrer"},_o=i('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>commandTimeout?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Call a command of a service and return the result of this command</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',7),po=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),go=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),fo={style:{"text-align":"left"}},mo=e("code",null,"Omit",-1),vo=e("code",null,"contentEncoding",-1),bo=e("code",null,"string",-1),Bo=e("code",null,"contentType",-1),yo=e("code",null,"string",-1),Eo=e("code",null,"correlationId",-1),xo=e("code",null,"string",-1),Do=e("code",null,"eventName?",-1),ko=e("code",null,"string",-1),Co=e("code",null,"id",-1),Io=e("code",null,"string",-1),wo=e("code",null,"messageType",-1),To=e("code",null,"Command",-1),Po=e("code",null,"otp?",-1),Lo=e("code",null,"string",-1),No=e("code",null,"payload",-1),So=e("code",null,"parameter",-1),Ro=e("code",null,"unknown",-1),Mo=e("code",null,"payload",-1),Ao=e("code",null,"unknown",-1),Vo=e("code",null,"principalId?",-1),Ko=e("code",null,"string",-1),Fo=e("code",null,"receiver",-1),Oo=e("code",null,"EBMessageAddress",-1),Go=e("code",null,"sender",-1),Ho=e("code",null,"tenantId?",-1),qo=e("code",null,"string",-1),Wo=e("code",null,"timestamp",-1),jo=e("code",null,"number",-1),Uo=e("code",null,"traceId?",-1),zo=e("code",null,"string",-1),Jo=e("code",null,'"messageType"',-1),Qo=e("code",null,'"correlationId"',-1),Xo=e("code",null,'"id"',-1),Yo=e("code",null,'"timestamp"',-1),Zo=e("td",{style:{"text-align":"left"}},"a partial command message",-1),$o=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the time to live (timeout) of the invocation")],-1),ed=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),td=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),nd=e("h4",{id:"implementation-of-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-5","aria-hidden":"true"},"#"),t(" Implementation of")],-1),sd=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),od={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L326",target:"_blank",rel:"noopener noreferrer"},dd=i('<hr><h3 id="ishealthy" tabindex="-1"><a class="header-anchor" href="#ishealthy" aria-hidden="true">#</a> isHealthy</h3><p>▸ <strong>isHealthy</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge is running and works correctly</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-6" tabindex="-1"><a class="header-anchor" href="#implementation-of-6" aria-hidden="true">#</a> Implementation of</h4>',7),id=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),ad={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L96",target:"_blank",rel:"noopener noreferrer"},rd=i('<hr><h3 id="isready" tabindex="-1"><a class="header-anchor" href="#isready" aria-hidden="true">#</a> isReady</h3><p>▸ <strong>isReady</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge has been started and is connected to underlaying message broker</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-7" tabindex="-1"><a class="header-anchor" href="#implementation-of-7" aria-hidden="true">#</a> Implementation of</h4>',7),ld=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),cd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L92",target:"_blank",rel:"noopener noreferrer"},hd=i('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',4),ud=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_d=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),pd={style:{"text-align":"left"}},gd=e("code",null,"EventKey",-1),fd=e("code",null,"eventbridge-connected",-1),md=e("code",null,"never",-1),vd=e("code",null,"eventbridge-connection-error",-1),bd=e("code",null,"unknown",-1),Bd=e("code",null,"eventbridge-disconnected",-1),yd=e("code",null,"never",-1),Ed=e("code",null,"eventbridge-error",-1),xd=e("code",null,"unknown",-1),Dd=e("code",null,"eventbridge-reconnecting",-1),kd=e("code",null,"never",-1),Cd=i('<h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-8" tabindex="-1"><a class="header-anchor" href="#inherited-from-8" aria-hidden="true">#</a> Inherited from</h4>',5),Id=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),wd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L20",target:"_blank",rel:"noopener noreferrer"},Td=i('<hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',4),Pd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ld=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Nd={style:{"text-align":"left"}},Sd=e("code",null,"EventKey",-1),Rd=e("code",null,"eventbridge-connected",-1),Md=e("code",null,"never",-1),Ad=e("code",null,"eventbridge-connection-error",-1),Vd=e("code",null,"unknown",-1),Kd=e("code",null,"eventbridge-disconnected",-1),Fd=e("code",null,"never",-1),Od=e("code",null,"eventbridge-error",-1),Gd=e("code",null,"unknown",-1),Hd=e("code",null,"eventbridge-reconnecting",-1),qd=e("code",null,"never",-1),Wd=i('<h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-9" tabindex="-1"><a class="header-anchor" href="#inherited-from-9" aria-hidden="true">#</a> Inherited from</h4>',5),jd=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ud={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L16",target:"_blank",rel:"noopener noreferrer"},zd=i('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>address</code>, <code>cb</code>, <code>metadata</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a service command and ensure that there is a queue for all incoming command requests.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>',5),Jd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Qd=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Xd={style:{"text-align":"left"}},Yd=e("code",null,"EBMessageAddress",-1),Zd=e("td",{style:{"text-align":"left"}},"The service function address",-1),$d=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ei={style:{"text-align":"left"}},ti=e("code",null,"message",-1),ni=e("code",null,"contentEncoding",-1),si=e("code",null,"string",-1),oi=e("code",null,"contentType",-1),di=e("code",null,"string",-1),ii=e("code",null,"correlationId",-1),ai=e("code",null,"string",-1),ri=e("code",null,"eventName?",-1),li=e("code",null,"string",-1),ci=e("code",null,"id",-1),hi=e("code",null,"string",-1),ui=e("code",null,"messageType",-1),_i=e("code",null,"Command",-1),pi=e("code",null,"otp?",-1),gi=e("code",null,"string",-1),fi=e("code",null,"payload",-1),mi=e("code",null,"parameter",-1),vi=e("code",null,"unknown",-1),bi=e("code",null,"payload",-1),Bi=e("code",null,"unknown",-1),yi=e("code",null,"principalId?",-1),Ei=e("code",null,"string",-1),xi=e("code",null,"receiver",-1),Di=e("code",null,"EBMessageAddress",-1),ki=e("code",null,"sender",-1),Ci=e("code",null,"tenantId?",-1),Ii=e("code",null,"string",-1),wi=e("code",null,"timestamp",-1),Ti=e("code",null,"number",-1),Pi=e("code",null,"traceId?",-1),Li=e("code",null,"string",-1),Ni=e("code",null,"Promise",-1),Si=e("code",null,"contentEncoding",-1),Ri=e("code",null,'"utf-8"',-1),Mi=e("code",null,"contentType",-1),Ai=e("code",null,'"application/json"',-1),Vi=e("code",null,"correlationId",-1),Ki=e("code",null,"string",-1),Fi=e("code",null,"eventName?",-1),Oi=e("code",null,"string",-1),Gi=e("code",null,"id",-1),Hi=e("code",null,"string",-1),qi=e("code",null,"isHandledError",-1),Wi=e("code",null,"boolean",-1),ji=e("code",null,"messageType",-1),Ui=e("code",null,"CommandErrorResponse",-1),zi=e("code",null,"otp?",-1),Ji=e("code",null,"string",-1),Qi=e("code",null,"payload",-1),Xi=e("code",null,"data?",-1),Yi=e("code",null,"unknown",-1),Zi=e("code",null,"message",-1),$i=e("code",null,"string",-1),ea=e("code",null,"status",-1),ta=e("code",null,"StatusCode",-1),na=e("code",null,"principalId?",-1),sa=e("code",null,"string",-1),oa=e("code",null,"receiver",-1),da=e("code",null,"sender",-1),ia=e("code",null,"tenantId?",-1),aa=e("code",null,"string",-1),ra=e("code",null,"timestamp",-1),la=e("code",null,"number",-1),ca=e("code",null,"traceId?",-1),ha=e("code",null,"string",-1),ua=e("code",null,"contentEncoding",-1),_a=e("code",null,"string",-1),pa=e("code",null,"contentType",-1),ga=e("code",null,"string",-1),fa=e("code",null,"correlationId",-1),ma=e("code",null,"string",-1),va=e("code",null,"eventName?",-1),ba=e("code",null,"string",-1),Ba=e("code",null,"id",-1),ya=e("code",null,"string",-1),Ea=e("code",null,"messageType",-1),xa=e("code",null,"CommandSuccessResponse",-1),Da=e("code",null,"otp?",-1),ka=e("code",null,"string",-1),Ca=e("code",null,"payload",-1),Ia=e("code",null,"unknown",-1),wa=e("code",null,"principalId?",-1),Ta=e("code",null,"string",-1),Pa=e("code",null,"receiver",-1),La=e("code",null,"sender",-1),Na=e("code",null,"tenantId?",-1),Sa=e("code",null,"string",-1),Ra=e("code",null,"timestamp",-1),Ma=e("code",null,"number",-1),Aa=e("code",null,"traceId?",-1),Va=e("code",null,"string",-1),Ka=e("td",{style:{"text-align":"left"}},"the function to call if a matching command message arrives",-1),Fa=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")],-1),Oa={style:{"text-align":"left"}},Ga=e("code",null,"CommandDefinitionMetadataBase",-1),Ha=e("td",{style:{"text-align":"left"}},"-",-1),qa=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),Wa=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),ja=e("p",null,"the id of command function queue",-1),Ua=e("h4",{id:"implementation-of-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-8","aria-hidden":"true"},"#"),t(" Implementation of")],-1),za=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ja={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L240",target:"_blank",rel:"noopener noreferrer"},Qa=i('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a new subscription</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4>',5),Xa=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ya=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),Za={style:{"text-align":"left"}},$a=e("code",null,"Subscription",-1),er=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),tr=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),nr={style:{"text-align":"left"}},sr=e("code",null,"message",-1),or=e("code",null,"EBMessage",-1),dr=e("code",null,"Promise",-1),ir=e("code",null,"undefined",-1),ar=e("code",null,"Omit",-1),rr=e("code",null,"contentEncoding",-1),lr=e("code",null,"string",-1),cr=e("code",null,"contentType",-1),hr=e("code",null,"string",-1),ur=e("code",null,"correlationId?",-1),_r=e("code",null,"string",-1),pr=e("code",null,"eventName",-1),gr=e("code",null,"string",-1),fr=e("code",null,"id",-1),mr=e("code",null,"string",-1),vr=e("code",null,"messageType",-1),br=e("code",null,"CustomMessage",-1),Br=e("code",null,"otp?",-1),yr=e("code",null,"string",-1),Er=e("code",null,"payload?",-1),xr=e("code",null,"unknown",-1),Dr=e("code",null,"principalId?",-1),kr=e("code",null,"string",-1),Cr=e("code",null,"receiver?",-1),Ir=e("code",null,"EBMessageAddress",-1),wr=e("code",null,"sender",-1),Tr=e("code",null,"tenantId?",-1),Pr=e("code",null,"string",-1),Lr=e("code",null,"timestamp",-1),Nr=e("code",null,"number",-1),Sr=e("code",null,"traceId?",-1),Rr=e("code",null,"string",-1),Mr=e("code",null,'"id"',-1),Ar=e("code",null,'"timestamp"',-1),Vr=e("td",{style:{"text-align":"left"}},"the function to be called if a matching message arrives",-1),Kr=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Fr=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),Or=e("h4",{id:"implementation-of-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-9","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Gr=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L265",target:"_blank",rel:"noopener noreferrer"},qr=i('<hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-10" tabindex="-1"><a class="header-anchor" href="#inherited-from-10" aria-hidden="true">#</a> Inherited from</h4>',6),Wr=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),jr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L28",target:"_blank",rel:"noopener noreferrer"},Ur=i('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the eventbridge and connect to the underlaying message broker</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-10" tabindex="-1"><a class="header-anchor" href="#implementation-of-10" aria-hidden="true">#</a> Implementation of</h4>',7),zr=e("h4",{id:"overrides-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-2","aria-hidden":"true"},"#"),t(" Overrides")],-1),Jr=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L100",target:"_blank",rel:"noopener noreferrer"},Xr=i('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context?</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-11" tabindex="-1"><a class="header-anchor" href="#inherited-from-11" aria-hidden="true">#</a> Inherited from</h4>',12),Yr=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},$r=i('<hr><h3 id="unregistercommand" tabindex="-1"><a class="header-anchor" href="#unregistercommand" aria-hidden="true">#</a> unregisterCommand</h3><p>▸ <strong>unregisterCommand</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Unregister a service command</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4>',5),el=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),tl=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),nl={style:{"text-align":"left"}},sl=e("code",null,"EBMessageAddress",-1),ol=e("td",{style:{"text-align":"left"}},"The address (service name, version and command name) of the command to be de-registered",-1),dl=e("h4",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),il=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),al=e("h4",{id:"implementation-of-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-11","aria-hidden":"true"},"#"),t(" Implementation of")],-1),rl=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),ll={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L260",target:"_blank",rel:"noopener noreferrer"},cl=i('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>▸ <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',4),hl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ul=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),_l={style:{"text-align":"left"}},pl=e("code",null,"EBMessageAddress",-1),gl=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),fl=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),ml=e("h4",{id:"implementation-of-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-12","aria-hidden":"true"},"#"),t(" Implementation of")],-1),vl=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),bl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L275",target:"_blank",rel:"noopener noreferrer"},Bl=i('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-12" tabindex="-1"><a class="header-anchor" href="#inherited-from-12" aria-hidden="true">#</a> Inherited from</h4>',14),yl=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),El={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L130",target:"_blank",rel:"noopener noreferrer"};function xl(Dl,kl){const s=a("RouterLink"),d=a("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[n(s,{to:"/api/"},{default:o(()=>[t("PURISTA API")]),_:1}),t(" / "),n(s,{to:"/api/modules.html"},{default:o(()=>[t("Modules")]),_:1}),t(" / "),n(s,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(" / DefaultEventBridge")]),u,e("p",null,[n(s,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(".DefaultEventBridge")]),_,e("ul",null,[e("li",null,[e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[p]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:o(()=>[g]),_:1}),t(">")]),f])]),m,e("ul",null,[e("li",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[v]),_:1})])]),b,B,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#constructor"},{default:o(()=>[t("constructor")]),_:1})])]),y,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#config"},{default:o(()=>[t("config")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#hasstarted"},{default:o(()=>[t("hasStarted")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#healthy"},{default:o(()=>[t("healthy")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#logger"},{default:o(()=>[t("logger")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#name"},{default:o(()=>[t("name")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#pendinginvocations"},{default:o(()=>[t("pendingInvocations")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#readstream"},{default:o(()=>[t("readStream")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#runningsubscriptioncount"},{default:o(()=>[t("runningSubscriptionCount")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#servicefunctions"},{default:o(()=>[t("serviceFunctions")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#subscriptions"},{default:o(()=>[t("subscriptions")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#traceprovider"},{default:o(()=>[t("traceProvider")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#writestream"},{default:o(()=>[t("writeStream")]),_:1})])]),E,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#emit"},{default:o(()=>[t("emit")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#gettracer"},{default:o(()=>[t("getTracer")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#off"},{default:o(()=>[t("off")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#on"},{default:o(()=>[t("on")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#removealllisteners"},{default:o(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#startactivespan"},{default:o(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#wrapinspan"},{default:o(()=>[t("wrapInSpan")]),_:1})])]),x,e("table",null,[D,e("tbody",null,[k,C,I,w,e("tr",null,[T,e("td",P,[n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:o(()=>[L]),_:1})]),N]),S,e("tr",null,[R,e("td",M,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[A]),_:1})]),V]),K])]),F,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#constructor"},{default:o(()=>[t("constructor")]),_:1})]),O,e("p",null,[e("a",G,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:83"),n(d)])]),H,q,e("p",null,[t("• "),W,t(": "),n(s,{to:"/api/modules/purista_core.html#complete"},{default:o(()=>[j]),_:1}),t("<{ "),U,t(": "),z,t(" ; "),J,t(": "),Q,t(" ; "),X,t(": "),Y,t(" ; "),Z,t(": "),n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:o(()=>[$]),_:1}),t(" ; "),ee,t(": "),te,t(" ; "),ne,t(": "),n(s,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[se]),_:1}),t(" ; "),oe,t(": "),de,t(" }>")]),ie,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#config"},{default:o(()=>[t("config")]),_:1})]),ae,e("p",null,[e("a",re,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:21"),n(d)])]),le,ce,he,ue,_e,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),pe,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),ge,e("p",null,[e("a",fe,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:27"),n(d)])]),me,e("p",null,[e("a",ve,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:80"),n(d)])]),be,e("p",null,[e("a",Be,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:81"),n(d)])]),ye,Ee,xe,De,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),ke,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),Ce,e("p",null,[e("a",Ie,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:25"),n(d)])]),we,Te,e("p",null,[t("• "),Pe,t(": "),n(s,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[Le]),_:1})]),Ne,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#logger"},{default:o(()=>[t("logger")]),_:1})]),Se,e("p",null,[e("a",Re,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:18"),n(d)])]),Me,Ae,Ve,Ke,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#name"},{default:o(()=>[t("name")]),_:1})]),Fe,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#name"},{default:o(()=>[t("name")]),_:1})]),Oe,e("p",null,[e("a",Ge,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:23"),n(d)])]),He,qe,e("p",null,[t("• "),We,t(),je,t(": "),Ue,t("<"),ze,t(", "),n(s,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:o(()=>[Je]),_:1}),t(">")]),Qe,e("p",null,[e("a",Xe,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:75"),n(d)])]),Ye,Ze,$e,et,e("p",null,[e("a",tt,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:63"),n(d)])]),nt,e("p",null,[e("a",st,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:76"),n(d)])]),ot,dt,e("p",null,[t("• "),it,t(),at,t(": "),rt,t("<"),lt,t(", ("),ct,t(": { "),ht,t(": "),ut,t(" ; "),_t,t(": "),pt,t(" ; "),gt,t(": "),ft,t(" ; "),mt,t(": "),vt,t(" ; "),bt,t(": "),Bt,t(" ; "),yt,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[Et]),_:1}),t(" ; "),xt,t(": "),Dt,t(" ; "),kt,t(": { "),Ct,t(": "),It,t(" ; "),wt,t(": "),Tt,t(" } ; "),Pt,t(": "),Lt,t(" ; "),Nt,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[St]),_:1}),t(" ; "),Rt,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Mt,t(": "),At,t(" ; "),Vt,t(": "),Kt,t(" ; "),Ft,t(": "),Ot,t(" }) => "),Gt,t("<{ "),Ht,t(": "),qt,t(" ; "),Wt,t(": "),jt,t(" ; "),Ut,t(": "),zt,t(" ; "),Jt,t(": "),Qt,t(" ; "),Xt,t(": "),Yt,t(" ; "),Zt,t(": "),$t,t(" ; "),en,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[tn]),_:1}),t(" ; "),nn,t(": "),sn,t(" ; "),on,t(": { "),dn,t(": "),an,t(" ; "),rn,t(": "),ln,t(" ; "),cn,t(": "),n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[hn]),_:1}),t(" } ; "),un,t(": "),_n,t(" ; "),pn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),gn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),fn,t(": "),mn,t(" ; "),vn,t(": "),bn,t(" ; "),Bn,t(": "),yn,t(" } | { "),En,t(": "),xn,t(" ; "),Dn,t(": "),kn,t(" ; "),Cn,t(": "),In,t(" ; "),wn,t(": "),Tn,t(" ; "),Pn,t(": "),Ln,t(" ; "),Nn,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[Sn]),_:1}),t(" ; "),Rn,t(": "),Mn,t(" ; "),An,t(": "),Vn,t(" ; "),Kn,t(": "),Fn,t(" ; "),On,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Gn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Hn,t(": "),qn,t(" ; "),Wn,t(": "),jn,t(" ; "),Un,t(": "),zn,t(" }>>")]),Jn,e("p",null,[e("a",Qn,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:70"),n(d)])]),Xn,Yn,e("p",null,[t("• "),Zn,t(),$n,t(": "),es,t("<"),ts,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:o(()=>[ns]),_:1}),t(">")]),ss,e("p",null,[e("a",os,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:78"),n(d)])]),ds,is,as,rs,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#traceprovider"},{default:o(()=>[t("traceProvider")]),_:1})]),ls,e("p",null,[e("a",cs,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:19"),n(d)])]),hs,us,_s,ps,e("p",null,[e("a",gs,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:62"),n(d)])]),fs,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),ms,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),vs,e("p",null,[e("a",bs,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:382"),n(d)])]),Bs,e("table",null,[ys,e("tbody",null,[e("tr",null,[Es,e("td",xs,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[Ds]),_:1}),t("<{ "),ks,t(": "),Cs,t(" ; "),Is,t(": "),ws,t(" ; "),Ts,t(": "),Ps,t(" ; "),Ls,t(": "),Ns,t(" ; "),Ss,t(": "),Rs,t(" }>")])])])]),Ms,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#emit"},{default:o(()=>[t("emit")]),_:1})]),As,e("p",null,[e("a",Vs,[t("core/types/GenericEventEmitter.ts:24"),n(d)])]),Ks,Fs,e("p",null,[t("▸ "),Os,t("("),Gs,t("): "),Hs,t("<"),qs,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[Ws]),_:1}),t(">>")]),js,Us,e("table",null,[zs,e("tbody",null,[e("tr",null,[Js,e("td",Qs,[Xs,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[Ys]),_:1}),t(", "),Zs,t(" | "),$s,t(" | "),eo,t(">")]),to])])]),no,e("p",null,[so,t("<"),oo,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[io]),_:1}),t(">>")]),ao,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),ro,e("p",null,[e("a",lo,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:285"),n(d)])]),co,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#gettracer"},{default:o(()=>[t("getTracer")]),_:1})]),ho,e("p",null,[e("a",uo,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:68"),n(d)])]),_o,e("table",null,[po,e("tbody",null,[e("tr",null,[go,e("td",fo,[mo,t("<{ "),vo,t(": "),bo,t(" ; "),Bo,t(": "),yo,t(" ; "),Eo,t(": "),xo,t(" ; "),Do,t(": "),ko,t(" ; "),Co,t(": "),Io,t(" ; "),wo,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[To]),_:1}),t(" ; "),Po,t(": "),Lo,t(" ; "),No,t(": { "),So,t(": "),Ro,t(" ; "),Mo,t(": "),Ao,t(" } ; "),Vo,t(": "),Ko,t(" ; "),Fo,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Oo]),_:1}),t(" ; "),Go,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ho,t(": "),qo,t(" ; "),Wo,t(": "),jo,t(" ; "),Uo,t(": "),zo,t(" }, "),Jo,t(" | "),Qo,t(" | "),Xo,t(" | "),Yo,t(">")]),Zo]),$o])]),ed,td,nd,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),sd,e("p",null,[e("a",od,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:326"),n(d)])]),dd,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),id,e("p",null,[e("a",ad,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:96"),n(d)])]),rd,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),ld,e("p",null,[e("a",cd,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:92"),n(d)])]),hd,e("table",null,[ud,e("tbody",null,[e("tr",null,[_d,e("td",pd,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[gd]),_:1}),t("<{ "),fd,t(": "),md,t(" ; "),vd,t(": "),bd,t(" ; "),Bd,t(": "),yd,t(" ; "),Ed,t(": "),xd,t(" ; "),Dd,t(": "),kd,t(" }>")])])])]),Cd,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#off"},{default:o(()=>[t("off")]),_:1})]),Id,e("p",null,[e("a",wd,[t("core/types/GenericEventEmitter.ts:20"),n(d)])]),Td,e("table",null,[Pd,e("tbody",null,[e("tr",null,[Ld,e("td",Nd,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[Sd]),_:1}),t("<{ "),Rd,t(": "),Md,t(" ; "),Ad,t(": "),Vd,t(" ; "),Kd,t(": "),Fd,t(" ; "),Od,t(": "),Gd,t(" ; "),Hd,t(": "),qd,t(" }>")])])])]),Wd,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#on"},{default:o(()=>[t("on")]),_:1})]),jd,e("p",null,[e("a",Ud,[t("core/types/GenericEventEmitter.ts:16"),n(d)])]),zd,e("table",null,[Jd,e("tbody",null,[e("tr",null,[Qd,e("td",Xd,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Yd]),_:1})]),Zd]),e("tr",null,[$d,e("td",ei,[t("("),ti,t(": { "),ni,t(": "),si,t(" ; "),oi,t(": "),di,t(" ; "),ii,t(": "),ai,t(" ; "),ri,t(": "),li,t(" ; "),ci,t(": "),hi,t(" ; "),ui,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[_i]),_:1}),t(" ; "),pi,t(": "),gi,t(" ; "),fi,t(": { "),mi,t(": "),vi,t(" ; "),bi,t(": "),Bi,t(" } ; "),yi,t(": "),Ei,t(" ; "),xi,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Di]),_:1}),t(" ; "),ki,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ci,t(": "),Ii,t(" ; "),wi,t(": "),Ti,t(" ; "),Pi,t(": "),Li,t(" }) => "),Ni,t("<{ "),Si,t(": "),Ri,t(" ; "),Mi,t(": "),Ai,t(" ; "),Vi,t(": "),Ki,t(" ; "),Fi,t(": "),Oi,t(" ; "),Gi,t(": "),Hi,t(" ; "),qi,t(": "),Wi,t(" ; "),ji,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[Ui]),_:1}),t(" ; "),zi,t(": "),Ji,t(" ; "),Qi,t(": { "),Xi,t(": "),Yi,t(" ; "),Zi,t(": "),$i,t(" ; "),ea,t(": "),n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[ta]),_:1}),t(" } ; "),na,t(": "),sa,t(" ; "),oa,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),da,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),ia,t(": "),aa,t(" ; "),ra,t(": "),la,t(" ; "),ca,t(": "),ha,t(" } | { "),ua,t(": "),_a,t(" ; "),pa,t(": "),ga,t(" ; "),fa,t(": "),ma,t(" ; "),va,t(": "),ba,t(" ; "),Ba,t(": "),ya,t(" ; "),Ea,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[xa]),_:1}),t(" ; "),Da,t(": "),ka,t(" ; "),Ca,t(": "),Ia,t(" ; "),wa,t(": "),Ta,t(" ; "),Pa,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),La,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Na,t(": "),Sa,t(" ; "),Ra,t(": "),Ma,t(" ; "),Aa,t(": "),Va,t(" }>")]),Ka]),e("tr",null,[Fa,e("td",Oa,[n(s,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:o(()=>[Ga]),_:1})]),Ha])])]),qa,Wa,ja,Ua,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),za,e("p",null,[e("a",Ja,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:240"),n(d)])]),Qa,e("table",null,[Xa,e("tbody",null,[e("tr",null,[Ya,e("td",Za,[n(s,{to:"/api/modules/purista_core.html#subscription"},{default:o(()=>[$a]),_:1})]),er]),e("tr",null,[tr,e("td",nr,[t("("),sr,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[or]),_:1}),t(") => "),dr,t("<"),ir,t(" | "),ar,t("<{ "),rr,t(": "),lr,t(" ; "),cr,t(": "),hr,t(" ; "),ur,t(": "),_r,t(" ; "),pr,t(": "),gr,t(" ; "),fr,t(": "),mr,t(" ; "),vr,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:o(()=>[br]),_:1}),t(" ; "),Br,t(": "),yr,t(" ; "),Er,t(": "),xr,t(" ; "),Dr,t(": "),kr,t(" ; "),Cr,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ir]),_:1}),t(" ; "),wr,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Tr,t(": "),Pr,t(" ; "),Lr,t(": "),Nr,t(" ; "),Sr,t(": "),Rr,t(" }, "),Mr,t(" | "),Ar,t(">>")]),Vr])])]),Kr,Fr,Or,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),Gr,e("p",null,[e("a",Hr,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:265"),n(d)])]),qr,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#removealllisteners"},{default:o(()=>[t("removeAllListeners")]),_:1})]),Wr,e("p",null,[e("a",jr,[t("core/types/GenericEventEmitter.ts:28"),n(d)])]),Ur,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),zr,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#start"},{default:o(()=>[t("start")]),_:1})]),Jr,e("p",null,[e("a",Qr,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:100"),n(d)])]),Xr,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#startactivespan"},{default:o(()=>[t("startActiveSpan")]),_:1})]),Yr,e("p",null,[e("a",Zr,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:80"),n(d)])]),$r,e("table",null,[el,e("tbody",null,[e("tr",null,[tl,e("td",nl,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[sl]),_:1})]),ol])])]),dl,il,al,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),rl,e("p",null,[e("a",ll,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:260"),n(d)])]),cl,e("table",null,[hl,e("tbody",null,[e("tr",null,[ul,e("td",_l,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[pl]),_:1})])])])]),gl,fl,ml,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})]),vl,e("p",null,[e("a",bl,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:275"),n(d)])]),Bl,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#wrapinspan"},{default:o(()=>[t("wrapInSpan")]),_:1})]),yl,e("p",null,[e("a",El,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:130"),n(d)])])])}const wl=r(h,[["render",xl],["__file","purista_core.DefaultEventBridge.html.vue"]]);export{wl as default};
