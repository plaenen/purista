import{_ as e,c as t,o as a,V as r}from"./chunks/framework.ITQiifkM.js";const u=JSON.parse('{"title":"Interface: ServiceClass<ConfigType>","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/purista_core.ServiceClass.md","filePath":"api/interfaces/purista_core.ServiceClass.md","lastUpdated":1706444636000}'),s={name:"api/interfaces/purista_core.ServiceClass.md"},o=r('<p><a href="./../README.html">PURISTA API</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/purista_core.html">@purista/core</a> / ServiceClass</p><h1 id="interface-serviceclass-configtype" tabindex="-1">Interface: ServiceClass&lt;ConfigType&gt; <a class="header-anchor" href="#interface-serviceclass-configtype" aria-label="Permalink to &quot;Interface: ServiceClass\\&lt;ConfigType\\&gt;&quot;">​</a></h1><p><a href="./../modules/purista_core.html">@purista/core</a>.ServiceClass</p><p>The ServiceClass interface</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h2 id="implemented-by" tabindex="-1">Implemented by <a class="header-anchor" href="#implemented-by" aria-label="Permalink to &quot;Implemented by&quot;">​</a></h2><ul><li><a href="./../classes/purista_core.Service.html"><code>Service</code></a></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./purista_core.ServiceClass.html#config">config</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./purista_core.ServiceClass.html#destroy">destroy</a></li><li><a href="./purista_core.ServiceClass.html#gettracer">getTracer</a></li><li><a href="./purista_core.ServiceClass.html#registercommand">registerCommand</a></li><li><a href="./purista_core.ServiceClass.html#registersubscription">registerSubscription</a></li><li><a href="./purista_core.ServiceClass.html#start">start</a></li><li><a href="./purista_core.ServiceClass.html#startactivespan">startActiveSpan</a></li><li><a href="./purista_core.ServiceClass.html#wrapinspan">wrapInSpan</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h3><p>• <strong>config</strong>: <code>ConfigType</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L12" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:12</a></p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="destroy" tabindex="-1">destroy <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy&quot;">​</a></h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Stop and destroy the current service</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L17" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:17</a></p><hr><h3 id="gettracer" tabindex="-1">getTracer <a class="header-anchor" href="#gettracer" aria-label="Permalink to &quot;getTracer&quot;">​</a></h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>get the opentelemetry tracer of the service</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Tracer</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L54" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:54</a></p><hr><h3 id="registercommand" tabindex="-1">registerCommand <a class="header-anchor" href="#registercommand" aria-label="Permalink to &quot;registerCommand&quot;">​</a></h3><p>▸ <strong>registerCommand</strong>(<code>commandDefinition</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Registers a new command for the service</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>commandDefinition</code></td><td style="text-align:left;"><a href="./../modules/purista_core.html#commanddefinition"><code>CommandDefinition</code></a></td><td style="text-align:left;">the service command definition</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L60" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:60</a></p><hr><h3 id="registersubscription" tabindex="-1">registerSubscription <a class="header-anchor" href="#registersubscription" aria-label="Permalink to &quot;registerSubscription&quot;">​</a></h3><p>▸ <strong>registerSubscription</strong>(<code>subscriptionDefinition</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Registers a new subscription for the service</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>subscriptionDefinition</code></td><td style="text-align:left;"><a href="./../modules/purista_core.html#subscriptiondefinition"><code>SubscriptionDefinition</code></a></td><td style="text-align:left;">the subscription definition</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L66" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:66</a></p><hr><h3 id="start" tabindex="-1">start <a class="header-anchor" href="#start" aria-label="Permalink to &quot;start&quot;">​</a></h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the service</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L22" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:22</a></p><hr><h3 id="startactivespan" tabindex="-1">startActiveSpan <a class="header-anchor" href="#startactivespan" aria-label="Permalink to &quot;startActiveSpan&quot;">​</a></h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a new active opentelemetry span with given options. A active span will be below the current span in hierarchy</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">the additional span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;">the span context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">the function to be wrapped into the span</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L44" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:44</a></p><hr><h3 id="wrapinspan" tabindex="-1">wrapInSpan <a class="header-anchor" href="#wrapinspan" aria-label="Permalink to &quot;wrapInSpan&quot;">​</a></h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Wrap the given function in a opententelemetry span. The span will be on same hierarchy level as the current span.</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name of the span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">the additional span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">the function to be wrapped in span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">the span context</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L33" target="_blank" rel="noreferrer">core/types/ServiceClass.ts:33</a></p>',86),i=[o];function n(d,l,c,h,p,f){return a(),t("div",null,i)}const b=e(s,[["render",n]]);export{u as __pageData,b as default};
