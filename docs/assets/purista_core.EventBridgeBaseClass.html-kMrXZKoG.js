import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c,b as e,e as r,w as a,d as t,a as s}from"./app-aQ4vLSXI.js";const h={},u=e("h1",{id:"class-eventbridgebaseclass-configtype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-eventbridgebaseclass-configtype","aria-hidden":"true"},"#"),t(" Class: EventBridgeBaseClass<ConfigType>")],-1),p=s('<p>The base class to be extended by event bridge implementations</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',4),f=e("code",null,"GenericEventEmitter",-1),_=e("code",null,"EventBridgeEvents",-1),g=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"EventBridgeBaseClass")])],-1),m=e("code",null,"DefaultEventBridge",-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),y=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),x=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),E=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),t(" Constructors")],-1),B=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),t(" constructor")],-1),C=e("strong",null,"new EventBridgeBaseClass",-1),k=e("code",null,"ConfigType",-1),w=e("code",null,"name",-1),T=e("code",null,"config",-1),L=e("code",null,"EventBridgeBaseClass",-1),G=e("code",null,"ConfigType",-1),N=s('<h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;">{ [K in string | number | symbol]: (Object &amp; ConfigType)[K] }</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',5),P=e("code",null,"EventBridgeBaseClass",-1),D=e("code",null,"ConfigType",-1),K=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),I=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),R={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},S=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),F=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),A=e("strong",null,"config",-1),O=e("code",null,"Complete",-1),V=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),M={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},j=e("hr",null,null,-1),q=e("h3",{id:"defaultcommandtimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defaultcommandtimeout","aria-hidden":"true"},"#"),t(" defaultCommandTimeout")],-1),U=e("p",null,[t("• "),e("strong",null,"defaultCommandTimeout"),t(": "),e("code",null,"number")],-1),H=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),z={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27",target:"_blank",rel:"noopener noreferrer"},J=e("hr",null,null,-1),Q=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),W=e("p",null,[t("• "),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),X=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Y={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},Z=e("hr",null,null,-1),$=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),ee=e("strong",null,"logger",-1),te=e("code",null,"Logger",-1),re=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),ne={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},ae=e("hr",null,null,-1),de=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),se=e("p",null,[t("• "),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),oe=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23",target:"_blank",rel:"noopener noreferrer"},le=e("hr",null,null,-1),ce=e("h3",{id:"traceprovider",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceprovider","aria-hidden":"true"},"#"),t(" traceProvider")],-1),he=e("p",null,[t("• "),e("strong",null,"traceProvider"),t(": "),e("code",null,"NodeTracerProvider")],-1),ue=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),pe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19",target:"_blank",rel:"noopener noreferrer"},fe=s('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',6),_e={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L153",target:"_blank",rel:"noopener noreferrer"},ge=s('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',4),me=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),be=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),ve={style:{"text-align":"left"}},ye=e("code",null,"EventKey",-1),xe=e("code",null,"eventbridge-connected",-1),Ee=e("code",null,"never",-1),Be=e("code",null,"eventbridge-connection-error",-1),Ce=e("code",null,"unknown",-1),ke=e("code",null,"eventbridge-disconnected",-1),we=e("code",null,"never",-1),Te=e("code",null,"eventbridge-error",-1),Le=e("code",null,"unknown",-1),Ge=e("code",null,"eventbridge-reconnecting",-1),Ne=e("code",null,"never",-1),Pe=s('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>parameter?</code></td><td style="text-align:left;">{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),De=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L24",target:"_blank",rel:"noopener noreferrer"},Ie=s('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',8),Re={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L68",target:"_blank",rel:"noopener noreferrer"},Se=s('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',4),Fe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ae=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Oe={style:{"text-align":"left"}},Ve=e("code",null,"EventKey",-1),Me=e("code",null,"eventbridge-connected",-1),je=e("code",null,"never",-1),qe=e("code",null,"eventbridge-connection-error",-1),Ue=e("code",null,"unknown",-1),He=e("code",null,"eventbridge-disconnected",-1),ze=e("code",null,"never",-1),Je=e("code",null,"eventbridge-error",-1),Qe=e("code",null,"unknown",-1),We=e("code",null,"eventbridge-reconnecting",-1),Xe=e("code",null,"never",-1),Ye=s('<h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4>',5),Ze=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),$e={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L20",target:"_blank",rel:"noopener noreferrer"},et=s('<hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',4),tt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rt=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),nt={style:{"text-align":"left"}},at=e("code",null,"EventKey",-1),dt=e("code",null,"eventbridge-connected",-1),st=e("code",null,"never",-1),ot=e("code",null,"eventbridge-connection-error",-1),it=e("code",null,"unknown",-1),lt=e("code",null,"eventbridge-disconnected",-1),ct=e("code",null,"never",-1),ht=e("code",null,"eventbridge-error",-1),ut=e("code",null,"unknown",-1),pt=e("code",null,"eventbridge-reconnecting",-1),ft=e("code",null,"never",-1),_t=s('<h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4>',5),gt=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),mt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L16",target:"_blank",rel:"noopener noreferrer"},bt=s('<hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3" aria-hidden="true">#</a> Inherited from</h4>',6),vt=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),yt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L28",target:"_blank",rel:"noopener noreferrer"},xt=s('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',6),Et={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L154",target:"_blank",rel:"noopener noreferrer"},Bt=s('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context?</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',12),Ct={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},kt=s('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',14),wt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L130",target:"_blank",rel:"noopener noreferrer"};function Tt(Lt,Gt){const n=o("RouterLink"),d=o("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[r(n,{to:"/api/"},{default:a(()=>[t("PURISTA API")]),_:1}),t(" / "),r(n,{to:"/api/modules.html"},{default:a(()=>[t("Modules")]),_:1}),t(" / "),r(n,{to:"/api/modules/purista_core.html"},{default:a(()=>[t("@purista/core")]),_:1}),t(" / EventBridgeBaseClass")]),u,e("p",null,[r(n,{to:"/api/modules/purista_core.html"},{default:a(()=>[t("@purista/core")]),_:1}),t(".EventBridgeBaseClass")]),p,e("ul",null,[e("li",null,[e("p",null,[r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:a(()=>[f]),_:1}),t("<"),r(n,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:a(()=>[_]),_:1}),t(">")]),g,e("p",null,[t("↳↳ "),r(n,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:a(()=>[m]),_:1})])])]),b,v,e("ul",null,[e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#constructor"},{default:a(()=>[t("constructor")]),_:1})])]),y,e("ul",null,[e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#config"},{default:a(()=>[t("config")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:a(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#instanceid"},{default:a(()=>[t("instanceId")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#logger"},{default:a(()=>[t("logger")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#name"},{default:a(()=>[t("name")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#traceprovider"},{default:a(()=>[t("traceProvider")]),_:1})])]),x,e("ul",null,[e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#destroy"},{default:a(()=>[t("destroy")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#emit"},{default:a(()=>[t("emit")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#gettracer"},{default:a(()=>[t("getTracer")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#off"},{default:a(()=>[t("off")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#on"},{default:a(()=>[t("on")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#removealllisteners"},{default:a(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#start"},{default:a(()=>[t("start")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#startactivespan"},{default:a(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#wrapinspan"},{default:a(()=>[t("wrapInSpan")]),_:1})])]),E,B,e("p",null,[t("• "),C,t("<"),k,t(">("),w,t(", "),T,t("): "),r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:a(()=>[L]),_:1}),t("<"),G,t(">")]),N,e("p",null,[r(n,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:a(()=>[P]),_:1}),t("<"),D,t(">")]),K,e("p",null,[r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:a(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html#constructor"},{default:a(()=>[t("constructor")]),_:1})]),I,e("p",null,[e("a",R,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:28"),r(d)])]),S,F,e("p",null,[t("• "),A,t(": "),r(n,{to:"/api/modules/purista_core.html#complete"},{default:a(()=>[O]),_:1}),t("<{ [K in string | number | symbol]: (Object & ConfigType)[K] }>")]),V,e("p",null,[e("a",M,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:21"),r(d)])]),j,q,U,H,e("p",null,[e("a",z,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:27"),r(d)])]),J,Q,W,X,e("p",null,[e("a",Y,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:25"),r(d)])]),Z,$,e("p",null,[t("• "),ee,t(": "),r(n,{to:"/api/classes/purista_core.Logger.html"},{default:a(()=>[te]),_:1})]),re,e("p",null,[e("a",ne,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:18"),r(d)])]),ae,de,se,oe,e("p",null,[e("a",ie,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:23"),r(d)])]),le,ce,he,ue,e("p",null,[e("a",pe,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:19"),r(d)])]),fe,e("p",null,[e("a",_e,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:153"),r(d)])]),ge,e("table",null,[me,e("tbody",null,[e("tr",null,[be,e("td",ve,[t("extends "),r(n,{to:"/api/modules/purista_core.html#eventkey"},{default:a(()=>[ye]),_:1}),t("<{ "),xe,t(": "),Ee,t(" ; "),Be,t(": "),Ce,t(" ; "),ke,t(": "),we,t(" ; "),Te,t(": "),Le,t(" ; "),Ge,t(": "),Ne,t(" }>")])])])]),Pe,e("p",null,[r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:a(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html#emit"},{default:a(()=>[t("emit")]),_:1})]),De,e("p",null,[e("a",Ke,[t("core/types/GenericEventEmitter.ts:24"),r(d)])]),Ie,e("p",null,[e("a",Re,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:68"),r(d)])]),Se,e("table",null,[Fe,e("tbody",null,[e("tr",null,[Ae,e("td",Oe,[t("extends "),r(n,{to:"/api/modules/purista_core.html#eventkey"},{default:a(()=>[Ve]),_:1}),t("<{ "),Me,t(": "),je,t(" ; "),qe,t(": "),Ue,t(" ; "),He,t(": "),ze,t(" ; "),Je,t(": "),Qe,t(" ; "),We,t(": "),Xe,t(" }>")])])])]),Ye,e("p",null,[r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:a(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html#off"},{default:a(()=>[t("off")]),_:1})]),Ze,e("p",null,[e("a",$e,[t("core/types/GenericEventEmitter.ts:20"),r(d)])]),et,e("table",null,[tt,e("tbody",null,[e("tr",null,[rt,e("td",nt,[t("extends "),r(n,{to:"/api/modules/purista_core.html#eventkey"},{default:a(()=>[at]),_:1}),t("<{ "),dt,t(": "),st,t(" ; "),ot,t(": "),it,t(" ; "),lt,t(": "),ct,t(" ; "),ht,t(": "),ut,t(" ; "),pt,t(": "),ft,t(" }>")])])])]),_t,e("p",null,[r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:a(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html#on"},{default:a(()=>[t("on")]),_:1})]),gt,e("p",null,[e("a",mt,[t("core/types/GenericEventEmitter.ts:16"),r(d)])]),bt,e("p",null,[r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:a(()=>[t("GenericEventEmitter")]),_:1}),t("."),r(n,{to:"/api/classes/purista_core.GenericEventEmitter.html#removealllisteners"},{default:a(()=>[t("removeAllListeners")]),_:1})]),vt,e("p",null,[e("a",yt,[t("core/types/GenericEventEmitter.ts:28"),r(d)])]),xt,e("p",null,[e("a",Et,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:154"),r(d)])]),Bt,e("p",null,[e("a",Ct,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:80"),r(d)])]),kt,e("p",null,[e("a",wt,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:130"),r(d)])])])}const Dt=i(h,[["render",Tt],["__file","purista_core.EventBridgeBaseClass.html.vue"]]);export{Dt as default};
