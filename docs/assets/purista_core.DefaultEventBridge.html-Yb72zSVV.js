import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as l,c,b as e,e as n,w as o,d as t,a as i}from"./app-aQ4vLSXI.js";const h={},u=e("h1",{id:"class-defaulteventbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-defaulteventbridge","aria-hidden":"true"},"#"),t(" Class: DefaultEventBridge")],-1),_=i(`<p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>`,4),p=e("code",null,"EventBridgeBaseClass",-1),g=e("code",null,"DefaultEventBridgeConfig",-1),f=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"DefaultEventBridge")])],-1),m=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),t(" Implements")],-1),v=e("code",null,"EventBridge",-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),B=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),y=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),E=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),x=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),t(" Constructors")],-1),D=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),t(" constructor")],-1),k=e("strong",null,"new DefaultEventBridge",-1),C=e("code",null,"config?",-1),I=e("code",null,"DefaultEventBridge",-1),w=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),t(" Parameters")],-1),T=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.defaultCommandTimeout?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Overwrite the hardcoded default timeout of command invocations")],-1),N=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.emitMessagesAsEventBridgeEvents?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Emit messages which have an event name set as javascript events on the event bridge instance")],-1),S=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.instanceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The instance id of the event bridge. If not set, a id will generated each time a instance is created. Use this if there is a need to always have the same instance id.")],-1),R=e("td",{style:{"text-align":"left"}},[e("code",null,"config.logLevel?")],-1),M={style:{"text-align":"left"}},A=e("code",null,"LogLevelName",-1),V=e("td",{style:{"text-align":"left"}},"If no logger instance is given, use this log level",-1),K=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.logWarnOnMessagesWithoutReceiver?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Log warnings on messages which are emitted, but could not delivered to at least one receiver")],-1),F=e("td",{style:{"text-align":"left"}},[e("code",null,"config.logger?")],-1),O={style:{"text-align":"left"}},G=e("code",null,"Logger",-1),H=e("td",{style:{"text-align":"left"}},"A logger instance",-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config.spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"A OpenTelemetry span processor")],-1),W=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),j=e("code",null,"DefaultEventBridge",-1),U=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),z=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),J={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L83",target:"_blank",rel:"noopener noreferrer"},Q=e("h2",{id:"properties-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties-1","aria-hidden":"true"},"#"),t(" Properties")],-1),X=e("h3",{id:"config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),t(" config")],-1),Y=e("strong",null,"config",-1),Z=e("code",null,"Complete",-1),$=e("code",null,"defaultCommandTimeout?",-1),ee=e("code",null,"number",-1),te=e("code",null,"emitMessagesAsEventBridgeEvents?",-1),ne=e("code",null,"boolean",-1),se=e("code",null,"instanceId?",-1),oe=e("code",null,"string",-1),de=e("code",null,"logLevel?",-1),ie=e("code",null,"LogLevelName",-1),ae=e("code",null,"logWarnOnMessagesWithoutReceiver?",-1),re=e("code",null,"boolean",-1),le=e("code",null,"logger?",-1),ce=e("code",null,"Logger",-1),he=e("code",null,"spanProcessor?",-1),ue=e("code",null,"SpanProcessor",-1),_e=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),pe=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),ge={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L21",target:"_blank",rel:"noopener noreferrer"},fe=e("hr",null,null,-1),me=e("h3",{id:"defaultcommandtimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defaultcommandtimeout","aria-hidden":"true"},"#"),t(" defaultCommandTimeout")],-1),ve=e("p",null,[t("• "),e("strong",null,"defaultCommandTimeout"),t(": "),e("code",null,"number")],-1),be=e("p",null,"The default time until when a command invocation automatically returns a time out error",-1),Be=e("h4",{id:"implementation-of",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of","aria-hidden":"true"},"#"),t(" Implementation of")],-1),ye=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Ee=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),xe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L27",target:"_blank",rel:"noopener noreferrer"},De=i('<hr><h3 id="hasstarted" tabindex="-1"><a class="header-anchor" href="#hasstarted" aria-hidden="true">#</a> hasStarted</h3><p>• <code>Protected</code> <strong>hasStarted</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',4),ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},Ce=i('<hr><h3 id="healthy" tabindex="-1"><a class="header-anchor" href="#healthy" aria-hidden="true">#</a> healthy</h3><p>• <code>Protected</code> <strong>healthy</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),Ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L81",target:"_blank",rel:"noopener noreferrer"},we=e("hr",null,null,-1),Te=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),Pe=e("p",null,[t("• "),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),Le=e("h4",{id:"implementation-of-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-1","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Ne=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Se=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Re={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},Me=e("hr",null,null,-1),Ae=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),Ve=e("strong",null,"logger",-1),Ke=e("code",null,"Logger",-1),Fe=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Oe=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ge={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},He=e("hr",null,null,-1),qe=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),We=e("p",null,[t("• "),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),je=e("h4",{id:"implementation-of-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-2","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Ue=e("h4",{id:"inherited-from-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-4","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ze=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),Je={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L23",target:"_blank",rel:"noopener noreferrer"},Qe=e("hr",null,null,-1),Xe=e("h3",{id:"pendinginvocations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendinginvocations","aria-hidden":"true"},"#"),t(" pendingInvocations")],-1),Ye=e("code",null,"Protected",-1),Ze=e("strong",null,"pendingInvocations",-1),$e=e("code",null,"Map",-1),et=e("code",null,"string",-1),tt=e("code",null,"PendigInvocation",-1),nt=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),st={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L75",target:"_blank",rel:"noopener noreferrer"},ot=e("hr",null,null,-1),dt=e("h3",{id:"readstream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#readstream","aria-hidden":"true"},"#"),t(" readStream")],-1),it=e("p",null,[t("• "),e("code",null,"Protected"),t(),e("strong",null,"readStream"),t(": "),e("code",null,"Readable")],-1),at=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),rt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L63",target:"_blank",rel:"noopener noreferrer"},lt=i('<hr><h3 id="runningsubscriptioncount" tabindex="-1"><a class="header-anchor" href="#runningsubscriptioncount" aria-hidden="true">#</a> runningSubscriptionCount</h3><p>• <code>Protected</code> <strong>runningSubscriptionCount</strong>: <code>number</code> = <code>0</code></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',4),ct={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L76",target:"_blank",rel:"noopener noreferrer"},ht=e("hr",null,null,-1),ut=e("h3",{id:"servicefunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#servicefunctions","aria-hidden":"true"},"#"),t(" serviceFunctions")],-1),_t=e("code",null,"Protected",-1),pt=e("strong",null,"serviceFunctions",-1),gt=e("code",null,"Map",-1),ft=e("code",null,"string",-1),mt=e("code",null,"message",-1),vt=e("code",null,"contentEncoding",-1),bt=e("code",null,"string",-1),Bt=e("code",null,"contentType",-1),yt=e("code",null,"string",-1),Et=e("code",null,"correlationId",-1),xt=e("code",null,"string",-1),Dt=e("code",null,"eventName?",-1),kt=e("code",null,"string",-1),Ct=e("code",null,"id",-1),It=e("code",null,"string",-1),wt=e("code",null,"messageType",-1),Tt=e("code",null,"Command",-1),Pt=e("code",null,"otp?",-1),Lt=e("code",null,"string",-1),Nt=e("code",null,"payload",-1),St=e("code",null,"parameter",-1),Rt=e("code",null,"unknown",-1),Mt=e("code",null,"payload",-1),At=e("code",null,"unknown",-1),Vt=e("code",null,"principalId?",-1),Kt=e("code",null,"string",-1),Ft=e("code",null,"receiver",-1),Ot=e("code",null,"EBMessageAddress",-1),Gt=e("code",null,"sender",-1),Ht=e("code",null,"tenantId?",-1),qt=e("code",null,"string",-1),Wt=e("code",null,"timestamp",-1),jt=e("code",null,"number",-1),Ut=e("code",null,"traceId?",-1),zt=e("code",null,"string",-1),Jt=e("code",null,"Promise",-1),Qt=e("code",null,"contentEncoding",-1),Xt=e("code",null,'"utf-8"',-1),Yt=e("code",null,"contentType",-1),Zt=e("code",null,'"application/json"',-1),$t=e("code",null,"correlationId",-1),en=e("code",null,"string",-1),tn=e("code",null,"eventName?",-1),nn=e("code",null,"string",-1),sn=e("code",null,"id",-1),on=e("code",null,"string",-1),dn=e("code",null,"isHandledError",-1),an=e("code",null,"boolean",-1),rn=e("code",null,"messageType",-1),ln=e("code",null,"CommandErrorResponse",-1),cn=e("code",null,"otp?",-1),hn=e("code",null,"string",-1),un=e("code",null,"payload",-1),_n=e("code",null,"data?",-1),pn=e("code",null,"unknown",-1),gn=e("code",null,"message",-1),fn=e("code",null,"string",-1),mn=e("code",null,"status",-1),vn=e("code",null,"StatusCode",-1),bn=e("code",null,"principalId?",-1),Bn=e("code",null,"string",-1),yn=e("code",null,"receiver",-1),En=e("code",null,"sender",-1),xn=e("code",null,"tenantId?",-1),Dn=e("code",null,"string",-1),kn=e("code",null,"timestamp",-1),Cn=e("code",null,"number",-1),In=e("code",null,"traceId?",-1),wn=e("code",null,"string",-1),Tn=e("code",null,"contentEncoding",-1),Pn=e("code",null,"string",-1),Ln=e("code",null,"contentType",-1),Nn=e("code",null,"string",-1),Sn=e("code",null,"correlationId",-1),Rn=e("code",null,"string",-1),Mn=e("code",null,"eventName?",-1),An=e("code",null,"string",-1),Vn=e("code",null,"id",-1),Kn=e("code",null,"string",-1),Fn=e("code",null,"messageType",-1),On=e("code",null,"CommandSuccessResponse",-1),Gn=e("code",null,"otp?",-1),Hn=e("code",null,"string",-1),qn=e("code",null,"payload",-1),Wn=e("code",null,"unknown",-1),jn=e("code",null,"principalId?",-1),Un=e("code",null,"string",-1),zn=e("code",null,"receiver",-1),Jn=e("code",null,"sender",-1),Qn=e("code",null,"tenantId?",-1),Xn=e("code",null,"string",-1),Yn=e("code",null,"timestamp",-1),Zn=e("code",null,"number",-1),$n=e("code",null,"traceId?",-1),es=e("code",null,"string",-1),ts=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),ns={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L70",target:"_blank",rel:"noopener noreferrer"},ss=e("hr",null,null,-1),os=e("h3",{id:"subscriptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptions","aria-hidden":"true"},"#"),t(" subscriptions")],-1),ds=e("code",null,"Protected",-1),is=e("strong",null,"subscriptions",-1),as=e("code",null,"Map",-1),rs=e("code",null,"string",-1),ls=e("code",null,"SubscriptionStorageEntry",-1),cs=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),hs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L78",target:"_blank",rel:"noopener noreferrer"},us=e("hr",null,null,-1),_s=e("h3",{id:"traceprovider",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceprovider","aria-hidden":"true"},"#"),t(" traceProvider")],-1),ps=e("p",null,[t("• "),e("strong",null,"traceProvider"),t(": "),e("code",null,"NodeTracerProvider")],-1),gs=e("h4",{id:"inherited-from-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-5","aria-hidden":"true"},"#"),t(" Inherited from")],-1),fs=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),ms={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L19",target:"_blank",rel:"noopener noreferrer"},vs=e("hr",null,null,-1),bs=e("h3",{id:"writestream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#writestream","aria-hidden":"true"},"#"),t(" writeStream")],-1),Bs=e("p",null,[t("• "),e("code",null,"Protected"),t(),e("strong",null,"writeStream"),t(": "),e("code",null,"Writable")],-1),ys=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),Es={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L62",target:"_blank",rel:"noopener noreferrer"},xs=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Shut down event bridge as gracefully as possible</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-3" tabindex="-1"><a class="header-anchor" href="#implementation-of-3" aria-hidden="true">#</a> Implementation of</h4>',7),Ds=e("h4",{id:"overrides-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-1","aria-hidden":"true"},"#"),t(" Overrides")],-1),ks=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),Cs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L382",target:"_blank",rel:"noopener noreferrer"},Is=i('<hr><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>parameter?</code>): <code>void</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',4),ws=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ts=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Ps={style:{"text-align":"left"}},Ls=e("code",null,"EventKey",-1),Ns=e("code",null,"eventbridge-connected",-1),Ss=e("code",null,"never",-1),Rs=e("code",null,"eventbridge-connection-error",-1),Ms=e("code",null,"unknown",-1),As=e("code",null,"eventbridge-disconnected",-1),Vs=e("code",null,"never",-1),Ks=e("code",null,"eventbridge-error",-1),Fs=e("code",null,"unknown",-1),Os=e("code",null,"eventbridge-reconnecting",-1),Gs=e("code",null,"never",-1),Hs=i('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>parameter?</code></td><td style="text-align:left;">{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-6" tabindex="-1"><a class="header-anchor" href="#inherited-from-6" aria-hidden="true">#</a> Inherited from</h4>',5),qs=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ws={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L24",target:"_blank",rel:"noopener noreferrer"},js=e("hr",null,null,-1),Us=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),zs=e("strong",null,"emitMessage",-1),Js=e("code",null,"message",-1),Qs=e("code",null,"Promise",-1),Xs=e("code",null,"Readonly",-1),Ys=e("code",null,"EBMessage",-1),Zs=e("p",null,"Emit a new message to event bridge to be delivered to receiver",-1),$s=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),eo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),to=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),no={style:{"text-align":"left"}},so=e("code",null,"Omit",-1),oo=e("code",null,"EBMessage",-1),io=e("code",null,'"correlationId"',-1),ao=e("code",null,'"id"',-1),ro=e("code",null,'"timestamp"',-1),lo=e("td",{style:{"text-align":"left"}},"EBMessage",-1),co=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),ho=e("code",null,"Promise",-1),uo=e("code",null,"Readonly",-1),_o=e("code",null,"EBMessage",-1),po=e("h4",{id:"implementation-of-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-4","aria-hidden":"true"},"#"),t(" Implementation of")],-1),go=e("h4",{id:"defined-in-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-17","aria-hidden":"true"},"#"),t(" Defined in")],-1),fo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L285",target:"_blank",rel:"noopener noreferrer"},mo=i('<hr><h3 id="gettracer" tabindex="-1"><a class="header-anchor" href="#gettracer" aria-hidden="true">#</a> getTracer</h3><p>▸ <strong>getTracer</strong>(): <code>Tracer</code></p><p>Returns open telemetry tracer of this service</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Tracer</code></p><p>Tracer</p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7" aria-hidden="true">#</a> Inherited from</h4>',8),vo=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),bo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L68",target:"_blank",rel:"noopener noreferrer"},Bo=i('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>commandTimeout?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Call a command of a service and return the result of this command</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',7),yo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Eo=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),xo={style:{"text-align":"left"}},Do=e("code",null,"Omit",-1),ko=e("code",null,"contentEncoding",-1),Co=e("code",null,"string",-1),Io=e("code",null,"contentType",-1),wo=e("code",null,"string",-1),To=e("code",null,"correlationId",-1),Po=e("code",null,"string",-1),Lo=e("code",null,"eventName?",-1),No=e("code",null,"string",-1),So=e("code",null,"id",-1),Ro=e("code",null,"string",-1),Mo=e("code",null,"messageType",-1),Ao=e("code",null,"Command",-1),Vo=e("code",null,"otp?",-1),Ko=e("code",null,"string",-1),Fo=e("code",null,"payload",-1),Oo=e("code",null,"parameter",-1),Go=e("code",null,"unknown",-1),Ho=e("code",null,"payload",-1),qo=e("code",null,"unknown",-1),Wo=e("code",null,"principalId?",-1),jo=e("code",null,"string",-1),Uo=e("code",null,"receiver",-1),zo=e("code",null,"EBMessageAddress",-1),Jo=e("code",null,"sender",-1),Qo=e("code",null,"tenantId?",-1),Xo=e("code",null,"string",-1),Yo=e("code",null,"timestamp",-1),Zo=e("code",null,"number",-1),$o=e("code",null,"traceId?",-1),ed=e("code",null,"string",-1),td=e("code",null,'"messageType"',-1),nd=e("code",null,'"correlationId"',-1),sd=e("code",null,'"id"',-1),od=e("code",null,'"timestamp"',-1),dd=e("td",{style:{"text-align":"left"}},"a partial command message",-1),id=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandTimeout")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the time to live (timeout) of the invocation")],-1),ad=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),rd=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),ld=e("h4",{id:"implementation-of-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-5","aria-hidden":"true"},"#"),t(" Implementation of")],-1),cd=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),hd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L326",target:"_blank",rel:"noopener noreferrer"},ud=i('<hr><h3 id="ishealthy" tabindex="-1"><a class="header-anchor" href="#ishealthy" aria-hidden="true">#</a> isHealthy</h3><p>▸ <strong>isHealthy</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge is running and works correctly</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-6" tabindex="-1"><a class="header-anchor" href="#implementation-of-6" aria-hidden="true">#</a> Implementation of</h4>',7),_d=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),pd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L96",target:"_blank",rel:"noopener noreferrer"},gd=i('<hr><h3 id="isready" tabindex="-1"><a class="header-anchor" href="#isready" aria-hidden="true">#</a> isReady</h3><p>▸ <strong>isReady</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge has been started and is connected to underlaying message broker</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="implementation-of-7" tabindex="-1"><a class="header-anchor" href="#implementation-of-7" aria-hidden="true">#</a> Implementation of</h4>',7),fd=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),md={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L92",target:"_blank",rel:"noopener noreferrer"},vd=i('<hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',4),bd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Bd=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),yd={style:{"text-align":"left"}},Ed=e("code",null,"EventKey",-1),xd=e("code",null,"eventbridge-connected",-1),Dd=e("code",null,"never",-1),kd=e("code",null,"eventbridge-connection-error",-1),Cd=e("code",null,"unknown",-1),Id=e("code",null,"eventbridge-disconnected",-1),wd=e("code",null,"never",-1),Td=e("code",null,"eventbridge-error",-1),Pd=e("code",null,"unknown",-1),Ld=e("code",null,"eventbridge-reconnecting",-1),Nd=e("code",null,"never",-1),Sd=i('<h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-8" tabindex="-1"><a class="header-anchor" href="#inherited-from-8" aria-hidden="true">#</a> Inherited from</h4>',5),Rd=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Md={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L20",target:"_blank",rel:"noopener noreferrer"},Ad=i('<hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>K</code>&gt;(<code>eventName</code>, <code>fn</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',4),Vd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Kd=e("td",{style:{"text-align":"left"}},[e("code",null,"K")],-1),Fd={style:{"text-align":"left"}},Od=e("code",null,"EventKey",-1),Gd=e("code",null,"eventbridge-connected",-1),Hd=e("code",null,"never",-1),qd=e("code",null,"eventbridge-connection-error",-1),Wd=e("code",null,"unknown",-1),jd=e("code",null,"eventbridge-disconnected",-1),Ud=e("code",null,"never",-1),zd=e("code",null,"eventbridge-error",-1),Jd=e("code",null,"unknown",-1),Qd=e("code",null,"eventbridge-reconnecting",-1),Xd=e("code",null,"never",-1),Yd=i('<h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>EventReceiver</code>&lt;{ <code>eventbridge-connected</code>: <code>never</code> ; <code>eventbridge-connection-error</code>: <code>unknown</code> ; <code>eventbridge-disconnected</code>: <code>never</code> ; <code>eventbridge-error</code>: <code>unknown</code> ; <code>eventbridge-reconnecting</code>: <code>never</code> }[<code>K</code>]&gt;</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-9" tabindex="-1"><a class="header-anchor" href="#inherited-from-9" aria-hidden="true">#</a> Inherited from</h4>',5),Zd=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),$d={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L16",target:"_blank",rel:"noopener noreferrer"},ei=i('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>address</code>, <code>cb</code>, <code>metadata</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a service command and ensure that there is a queue for all incoming command requests.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4>',5),ti=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ni=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),si={style:{"text-align":"left"}},oi=e("code",null,"EBMessageAddress",-1),di=e("td",{style:{"text-align":"left"}},"The service function address",-1),ii=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),ai={style:{"text-align":"left"}},ri=e("code",null,"message",-1),li=e("code",null,"contentEncoding",-1),ci=e("code",null,"string",-1),hi=e("code",null,"contentType",-1),ui=e("code",null,"string",-1),_i=e("code",null,"correlationId",-1),pi=e("code",null,"string",-1),gi=e("code",null,"eventName?",-1),fi=e("code",null,"string",-1),mi=e("code",null,"id",-1),vi=e("code",null,"string",-1),bi=e("code",null,"messageType",-1),Bi=e("code",null,"Command",-1),yi=e("code",null,"otp?",-1),Ei=e("code",null,"string",-1),xi=e("code",null,"payload",-1),Di=e("code",null,"parameter",-1),ki=e("code",null,"unknown",-1),Ci=e("code",null,"payload",-1),Ii=e("code",null,"unknown",-1),wi=e("code",null,"principalId?",-1),Ti=e("code",null,"string",-1),Pi=e("code",null,"receiver",-1),Li=e("code",null,"EBMessageAddress",-1),Ni=e("code",null,"sender",-1),Si=e("code",null,"tenantId?",-1),Ri=e("code",null,"string",-1),Mi=e("code",null,"timestamp",-1),Ai=e("code",null,"number",-1),Vi=e("code",null,"traceId?",-1),Ki=e("code",null,"string",-1),Fi=e("code",null,"Promise",-1),Oi=e("code",null,"contentEncoding",-1),Gi=e("code",null,'"utf-8"',-1),Hi=e("code",null,"contentType",-1),qi=e("code",null,'"application/json"',-1),Wi=e("code",null,"correlationId",-1),ji=e("code",null,"string",-1),Ui=e("code",null,"eventName?",-1),zi=e("code",null,"string",-1),Ji=e("code",null,"id",-1),Qi=e("code",null,"string",-1),Xi=e("code",null,"isHandledError",-1),Yi=e("code",null,"boolean",-1),Zi=e("code",null,"messageType",-1),$i=e("code",null,"CommandErrorResponse",-1),ea=e("code",null,"otp?",-1),ta=e("code",null,"string",-1),na=e("code",null,"payload",-1),sa=e("code",null,"data?",-1),oa=e("code",null,"unknown",-1),da=e("code",null,"message",-1),ia=e("code",null,"string",-1),aa=e("code",null,"status",-1),ra=e("code",null,"StatusCode",-1),la=e("code",null,"principalId?",-1),ca=e("code",null,"string",-1),ha=e("code",null,"receiver",-1),ua=e("code",null,"sender",-1),_a=e("code",null,"tenantId?",-1),pa=e("code",null,"string",-1),ga=e("code",null,"timestamp",-1),fa=e("code",null,"number",-1),ma=e("code",null,"traceId?",-1),va=e("code",null,"string",-1),ba=e("code",null,"contentEncoding",-1),Ba=e("code",null,"string",-1),ya=e("code",null,"contentType",-1),Ea=e("code",null,"string",-1),xa=e("code",null,"correlationId",-1),Da=e("code",null,"string",-1),ka=e("code",null,"eventName?",-1),Ca=e("code",null,"string",-1),Ia=e("code",null,"id",-1),wa=e("code",null,"string",-1),Ta=e("code",null,"messageType",-1),Pa=e("code",null,"CommandSuccessResponse",-1),La=e("code",null,"otp?",-1),Na=e("code",null,"string",-1),Sa=e("code",null,"payload",-1),Ra=e("code",null,"unknown",-1),Ma=e("code",null,"principalId?",-1),Aa=e("code",null,"string",-1),Va=e("code",null,"receiver",-1),Ka=e("code",null,"sender",-1),Fa=e("code",null,"tenantId?",-1),Oa=e("code",null,"string",-1),Ga=e("code",null,"timestamp",-1),Ha=e("code",null,"number",-1),qa=e("code",null,"traceId?",-1),Wa=e("code",null,"string",-1),ja=e("td",{style:{"text-align":"left"}},"the function to call if a matching command message arrives",-1),Ua=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")],-1),za={style:{"text-align":"left"}},Ja=e("code",null,"CommandDefinitionMetadataBase",-1),Qa=e("td",{style:{"text-align":"left"}},"-",-1),Xa=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Ya=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),Za=e("p",null,"the id of command function queue",-1),$a=e("h4",{id:"implementation-of-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-8","aria-hidden":"true"},"#"),t(" Implementation of")],-1),er=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),tr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L240",target:"_blank",rel:"noopener noreferrer"},nr=i('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a new subscription</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4>',5),sr=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),or=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),dr={style:{"text-align":"left"}},ir=e("code",null,"Subscription",-1),ar=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),rr=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),lr={style:{"text-align":"left"}},cr=e("code",null,"message",-1),hr=e("code",null,"EBMessage",-1),ur=e("code",null,"Promise",-1),_r=e("code",null,"undefined",-1),pr=e("code",null,"Omit",-1),gr=e("code",null,"contentEncoding",-1),fr=e("code",null,"string",-1),mr=e("code",null,"contentType",-1),vr=e("code",null,"string",-1),br=e("code",null,"correlationId?",-1),Br=e("code",null,"string",-1),yr=e("code",null,"eventName",-1),Er=e("code",null,"string",-1),xr=e("code",null,"id",-1),Dr=e("code",null,"string",-1),kr=e("code",null,"messageType",-1),Cr=e("code",null,"CustomMessage",-1),Ir=e("code",null,"otp?",-1),wr=e("code",null,"string",-1),Tr=e("code",null,"payload?",-1),Pr=e("code",null,"unknown",-1),Lr=e("code",null,"principalId?",-1),Nr=e("code",null,"string",-1),Sr=e("code",null,"receiver?",-1),Rr=e("code",null,"EBMessageAddress",-1),Mr=e("code",null,"sender",-1),Ar=e("code",null,"tenantId?",-1),Vr=e("code",null,"string",-1),Kr=e("code",null,"timestamp",-1),Fr=e("code",null,"number",-1),Or=e("code",null,"traceId?",-1),Gr=e("code",null,"string",-1),Hr=e("code",null,'"id"',-1),qr=e("code",null,'"timestamp"',-1),Wr=e("td",{style:{"text-align":"left"}},"the function to be called if a matching message arrives",-1),jr=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),Ur=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),zr=e("h4",{id:"implementation-of-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-9","aria-hidden":"true"},"#"),t(" Implementation of")],-1),Jr=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L265",target:"_blank",rel:"noopener noreferrer"},Xr=i('<hr><h3 id="removealllisteners" tabindex="-1"><a class="header-anchor" href="#removealllisteners" aria-hidden="true">#</a> removeAllListeners</h3><p>▸ <strong>removeAllListeners</strong>(): <code>void</code></p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-10" tabindex="-1"><a class="header-anchor" href="#inherited-from-10" aria-hidden="true">#</a> Inherited from</h4>',6),Yr=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L28",target:"_blank",rel:"noopener noreferrer"},$r=i('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the eventbridge and connect to the underlaying message broker</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="implementation-of-10" tabindex="-1"><a class="header-anchor" href="#implementation-of-10" aria-hidden="true">#</a> Implementation of</h4>',7),el=e("h4",{id:"overrides-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-2","aria-hidden":"true"},"#"),t(" Overrides")],-1),tl=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),nl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L100",target:"_blank",rel:"noopener noreferrer"},sl=i('<hr><h3 id="startactivespan" tabindex="-1"><a class="header-anchor" href="#startactivespan" aria-hidden="true">#</a> startActiveSpan</h3><p>▸ <strong>startActiveSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>context?</code>, <code>fn</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start a child span for opentelemetry tracking</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>context</code></td><td style="text-align:left;"><code>undefined</code> | <code>Context</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">optional context</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">function to be executed within the span</td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-11" tabindex="-1"><a class="header-anchor" href="#inherited-from-11" aria-hidden="true">#</a> Inherited from</h4>',12),ol=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),dl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L80",target:"_blank",rel:"noopener noreferrer"},il=i('<hr><h3 id="unregistercommand" tabindex="-1"><a class="header-anchor" href="#unregistercommand" aria-hidden="true">#</a> unregisterCommand</h3><p>▸ <strong>unregisterCommand</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Unregister a service command</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4>',5),al=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),rl=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),ll={style:{"text-align":"left"}},cl=e("code",null,"EBMessageAddress",-1),hl=e("td",{style:{"text-align":"left"}},"The address (service name, version and command name) of the command to be de-registered",-1),ul=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),_l=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),pl=e("h4",{id:"implementation-of-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-11","aria-hidden":"true"},"#"),t(" Implementation of")],-1),gl=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),fl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L260",target:"_blank",rel:"noopener noreferrer"},ml=i('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>▸ <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',4),vl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),bl=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Bl={style:{"text-align":"left"}},yl=e("code",null,"EBMessageAddress",-1),El=e("h4",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),xl=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Dl=e("h4",{id:"implementation-of-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-12","aria-hidden":"true"},"#"),t(" Implementation of")],-1),kl=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),Cl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L275",target:"_blank",rel:"noopener noreferrer"},Il=i('<hr><h3 id="wrapinspan" tabindex="-1"><a class="header-anchor" href="#wrapinspan" aria-hidden="true">#</a> wrapInSpan</h3><p>▸ <strong>wrapInSpan</strong>&lt;<code>F</code>&gt;(<code>name</code>, <code>opts</code>, <code>fn</code>, <code>context?</code>): <code>Promise</code>&lt;<code>F</code>&gt;</p><p>Start span for opentelemetry tracking on same level. The created span will not become the &quot;active&quot; span within opentelemetry!</p><p>This means during logging and similar the spanId of parent span is logged.</p><p>Use wrapInSpan for marking points in flow of one bigger function, but not to trace the program flow itself</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">name of span</td></tr><tr><td style="text-align:left;"><code>opts</code></td><td style="text-align:left;"><code>SpanOptions</code></td><td style="text-align:left;">span options</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">(<code>span</code>: <code>Span</code>) =&gt; <code>Promise</code>&lt;<code>F</code>&gt;</td><td style="text-align:left;">function te be executed in the span</td></tr><tr><td style="text-align:left;"><code>context?</code></td><td style="text-align:left;"><code>Context</code></td><td style="text-align:left;">span context</td></tr></tbody></table><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>F</code>&gt;</p><p>return value of fn</p><h4 id="inherited-from-12" tabindex="-1"><a class="header-anchor" href="#inherited-from-12" aria-hidden="true">#</a> Inherited from</h4>',14),wl=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L130",target:"_blank",rel:"noopener noreferrer"};function Pl(Ll,Nl){const s=a("RouterLink"),d=a("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[n(s,{to:"/api/"},{default:o(()=>[t("PURISTA API")]),_:1}),t(" / "),n(s,{to:"/api/modules.html"},{default:o(()=>[t("Modules")]),_:1}),t(" / "),n(s,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(" / DefaultEventBridge")]),u,e("p",null,[n(s,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(".DefaultEventBridge")]),_,e("ul",null,[e("li",null,[e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[p]),_:1}),t("<"),n(s,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:o(()=>[g]),_:1}),t(">")]),f])]),m,e("ul",null,[e("li",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[v]),_:1})])]),b,B,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#constructor"},{default:o(()=>[t("constructor")]),_:1})])]),y,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#config"},{default:o(()=>[t("config")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#hasstarted"},{default:o(()=>[t("hasStarted")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#healthy"},{default:o(()=>[t("healthy")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#logger"},{default:o(()=>[t("logger")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#name"},{default:o(()=>[t("name")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#pendinginvocations"},{default:o(()=>[t("pendingInvocations")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#readstream"},{default:o(()=>[t("readStream")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#runningsubscriptioncount"},{default:o(()=>[t("runningSubscriptionCount")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#servicefunctions"},{default:o(()=>[t("serviceFunctions")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#subscriptions"},{default:o(()=>[t("subscriptions")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#traceprovider"},{default:o(()=>[t("traceProvider")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#writestream"},{default:o(()=>[t("writeStream")]),_:1})])]),E,e("ul",null,[e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#emit"},{default:o(()=>[t("emit")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#gettracer"},{default:o(()=>[t("getTracer")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#off"},{default:o(()=>[t("off")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#on"},{default:o(()=>[t("on")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#removealllisteners"},{default:o(()=>[t("removeAllListeners")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#startactivespan"},{default:o(()=>[t("startActiveSpan")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})]),e("li",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html#wrapinspan"},{default:o(()=>[t("wrapInSpan")]),_:1})])]),x,D,e("p",null,[t("• "),k,t("("),C,t("): "),n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:o(()=>[I]),_:1})]),w,e("table",null,[T,e("tbody",null,[P,L,N,S,e("tr",null,[R,e("td",M,[n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:o(()=>[A]),_:1})]),V]),K,e("tr",null,[F,e("td",O,[n(s,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[G]),_:1})]),H]),q])]),W,e("p",null,[n(s,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:o(()=>[j]),_:1})]),U,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#constructor"},{default:o(()=>[t("constructor")]),_:1})]),z,e("p",null,[e("a",J,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:83"),n(d)])]),Q,X,e("p",null,[t("• "),Y,t(": "),n(s,{to:"/api/modules/purista_core.html#complete"},{default:o(()=>[Z]),_:1}),t("<{ "),$,t(": "),ee,t(" ; "),te,t(": "),ne,t(" ; "),se,t(": "),oe,t(" ; "),de,t(": "),n(s,{to:"/api/modules/purista_core.html#loglevelname"},{default:o(()=>[ie]),_:1}),t(" ; "),ae,t(": "),re,t(" ; "),le,t(": "),n(s,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[ce]),_:1}),t(" ; "),he,t(": "),ue,t(" }>")]),_e,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#config"},{default:o(()=>[t("config")]),_:1})]),pe,e("p",null,[e("a",ge,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:21"),n(d)])]),fe,me,ve,be,Be,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),ye,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),Ee,e("p",null,[e("a",xe,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:27"),n(d)])]),De,e("p",null,[e("a",ke,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:80"),n(d)])]),Ce,e("p",null,[e("a",Ie,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:81"),n(d)])]),we,Te,Pe,Le,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),Ne,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),Se,e("p",null,[e("a",Re,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:25"),n(d)])]),Me,Ae,e("p",null,[t("• "),Ve,t(": "),n(s,{to:"/api/classes/purista_core.Logger.html"},{default:o(()=>[Ke]),_:1})]),Fe,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#logger"},{default:o(()=>[t("logger")]),_:1})]),Oe,e("p",null,[e("a",Ge,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:18"),n(d)])]),He,qe,We,je,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#name"},{default:o(()=>[t("name")]),_:1})]),Ue,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#name"},{default:o(()=>[t("name")]),_:1})]),ze,e("p",null,[e("a",Je,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:23"),n(d)])]),Qe,Xe,e("p",null,[t("• "),Ye,t(),Ze,t(": "),$e,t("<"),et,t(", "),n(s,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:o(()=>[tt]),_:1}),t(">")]),nt,e("p",null,[e("a",st,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:75"),n(d)])]),ot,dt,it,at,e("p",null,[e("a",rt,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:63"),n(d)])]),lt,e("p",null,[e("a",ct,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:76"),n(d)])]),ht,ut,e("p",null,[t("• "),_t,t(),pt,t(": "),gt,t("<"),ft,t(", ("),mt,t(": { "),vt,t(": "),bt,t(" ; "),Bt,t(": "),yt,t(" ; "),Et,t(": "),xt,t(" ; "),Dt,t(": "),kt,t(" ; "),Ct,t(": "),It,t(" ; "),wt,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[Tt]),_:1}),t(" ; "),Pt,t(": "),Lt,t(" ; "),Nt,t(": { "),St,t(": "),Rt,t(" ; "),Mt,t(": "),At,t(" } ; "),Vt,t(": "),Kt,t(" ; "),Ft,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ot]),_:1}),t(" ; "),Gt,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ht,t(": "),qt,t(" ; "),Wt,t(": "),jt,t(" ; "),Ut,t(": "),zt,t(" }) => "),Jt,t("<{ "),Qt,t(": "),Xt,t(" ; "),Yt,t(": "),Zt,t(" ; "),$t,t(": "),en,t(" ; "),tn,t(": "),nn,t(" ; "),sn,t(": "),on,t(" ; "),dn,t(": "),an,t(" ; "),rn,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[ln]),_:1}),t(" ; "),cn,t(": "),hn,t(" ; "),un,t(": { "),_n,t(": "),pn,t(" ; "),gn,t(": "),fn,t(" ; "),mn,t(": "),n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[vn]),_:1}),t(" } ; "),bn,t(": "),Bn,t(" ; "),yn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),En,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),xn,t(": "),Dn,t(" ; "),kn,t(": "),Cn,t(" ; "),In,t(": "),wn,t(" } | { "),Tn,t(": "),Pn,t(" ; "),Ln,t(": "),Nn,t(" ; "),Sn,t(": "),Rn,t(" ; "),Mn,t(": "),An,t(" ; "),Vn,t(": "),Kn,t(" ; "),Fn,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[On]),_:1}),t(" ; "),Gn,t(": "),Hn,t(" ; "),qn,t(": "),Wn,t(" ; "),jn,t(": "),Un,t(" ; "),zn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Jn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Qn,t(": "),Xn,t(" ; "),Yn,t(": "),Zn,t(" ; "),$n,t(": "),es,t(" }>>")]),ts,e("p",null,[e("a",ns,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:70"),n(d)])]),ss,os,e("p",null,[t("• "),ds,t(),is,t(": "),as,t("<"),rs,t(", "),n(s,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:o(()=>[ls]),_:1}),t(">")]),cs,e("p",null,[e("a",hs,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:78"),n(d)])]),us,_s,ps,gs,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#traceprovider"},{default:o(()=>[t("traceProvider")]),_:1})]),fs,e("p",null,[e("a",ms,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:19"),n(d)])]),vs,bs,Bs,ys,e("p",null,[e("a",Es,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:62"),n(d)])]),xs,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),Ds,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),ks,e("p",null,[e("a",Cs,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:382"),n(d)])]),Is,e("table",null,[ws,e("tbody",null,[e("tr",null,[Ts,e("td",Ps,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[Ls]),_:1}),t("<{ "),Ns,t(": "),Ss,t(" ; "),Rs,t(": "),Ms,t(" ; "),As,t(": "),Vs,t(" ; "),Ks,t(": "),Fs,t(" ; "),Os,t(": "),Gs,t(" }>")])])])]),Hs,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#emit"},{default:o(()=>[t("emit")]),_:1})]),qs,e("p",null,[e("a",Ws,[t("core/types/GenericEventEmitter.ts:24"),n(d)])]),js,Us,e("p",null,[t("▸ "),zs,t("("),Js,t("): "),Qs,t("<"),Xs,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[Ys]),_:1}),t(">>")]),Zs,$s,e("table",null,[eo,e("tbody",null,[e("tr",null,[to,e("td",no,[so,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[oo]),_:1}),t(", "),io,t(" | "),ao,t(" | "),ro,t(">")]),lo])])]),co,e("p",null,[ho,t("<"),uo,t("<"),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[_o]),_:1}),t(">>")]),po,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),go,e("p",null,[e("a",fo,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:285"),n(d)])]),mo,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#gettracer"},{default:o(()=>[t("getTracer")]),_:1})]),vo,e("p",null,[e("a",bo,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:68"),n(d)])]),Bo,e("table",null,[yo,e("tbody",null,[e("tr",null,[Eo,e("td",xo,[Do,t("<{ "),ko,t(": "),Co,t(" ; "),Io,t(": "),wo,t(" ; "),To,t(": "),Po,t(" ; "),Lo,t(": "),No,t(" ; "),So,t(": "),Ro,t(" ; "),Mo,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[Ao]),_:1}),t(" ; "),Vo,t(": "),Ko,t(" ; "),Fo,t(": { "),Oo,t(": "),Go,t(" ; "),Ho,t(": "),qo,t(" } ; "),Wo,t(": "),jo,t(" ; "),Uo,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[zo]),_:1}),t(" ; "),Jo,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Qo,t(": "),Xo,t(" ; "),Yo,t(": "),Zo,t(" ; "),$o,t(": "),ed,t(" }, "),td,t(" | "),nd,t(" | "),sd,t(" | "),od,t(">")]),dd]),id])]),ad,rd,ld,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),cd,e("p",null,[e("a",hd,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:326"),n(d)])]),ud,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),_d,e("p",null,[e("a",pd,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:96"),n(d)])]),gd,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),fd,e("p",null,[e("a",md,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:92"),n(d)])]),vd,e("table",null,[bd,e("tbody",null,[e("tr",null,[Bd,e("td",yd,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[Ed]),_:1}),t("<{ "),xd,t(": "),Dd,t(" ; "),kd,t(": "),Cd,t(" ; "),Id,t(": "),wd,t(" ; "),Td,t(": "),Pd,t(" ; "),Ld,t(": "),Nd,t(" }>")])])])]),Sd,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#off"},{default:o(()=>[t("off")]),_:1})]),Rd,e("p",null,[e("a",Md,[t("core/types/GenericEventEmitter.ts:20"),n(d)])]),Ad,e("table",null,[Vd,e("tbody",null,[e("tr",null,[Kd,e("td",Fd,[t("extends "),n(s,{to:"/api/modules/purista_core.html#eventkey"},{default:o(()=>[Od]),_:1}),t("<{ "),Gd,t(": "),Hd,t(" ; "),qd,t(": "),Wd,t(" ; "),jd,t(": "),Ud,t(" ; "),zd,t(": "),Jd,t(" ; "),Qd,t(": "),Xd,t(" }>")])])])]),Yd,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#on"},{default:o(()=>[t("on")]),_:1})]),Zd,e("p",null,[e("a",$d,[t("core/types/GenericEventEmitter.ts:16"),n(d)])]),ei,e("table",null,[ti,e("tbody",null,[e("tr",null,[ni,e("td",si,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[oi]),_:1})]),di]),e("tr",null,[ii,e("td",ai,[t("("),ri,t(": { "),li,t(": "),ci,t(" ; "),hi,t(": "),ui,t(" ; "),_i,t(": "),pi,t(" ; "),gi,t(": "),fi,t(" ; "),mi,t(": "),vi,t(" ; "),bi,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[Bi]),_:1}),t(" ; "),yi,t(": "),Ei,t(" ; "),xi,t(": { "),Di,t(": "),ki,t(" ; "),Ci,t(": "),Ii,t(" } ; "),wi,t(": "),Ti,t(" ; "),Pi,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Li]),_:1}),t(" ; "),Ni,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Si,t(": "),Ri,t(" ; "),Mi,t(": "),Ai,t(" ; "),Vi,t(": "),Ki,t(" }) => "),Fi,t("<{ "),Oi,t(": "),Gi,t(" ; "),Hi,t(": "),qi,t(" ; "),Wi,t(": "),ji,t(" ; "),Ui,t(": "),zi,t(" ; "),Ji,t(": "),Qi,t(" ; "),Xi,t(": "),Yi,t(" ; "),Zi,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[$i]),_:1}),t(" ; "),ea,t(": "),ta,t(" ; "),na,t(": { "),sa,t(": "),oa,t(" ; "),da,t(": "),ia,t(" ; "),aa,t(": "),n(s,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[ra]),_:1}),t(" } ; "),la,t(": "),ca,t(" ; "),ha,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),ua,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),_a,t(": "),pa,t(" ; "),ga,t(": "),fa,t(" ; "),ma,t(": "),va,t(" } | { "),ba,t(": "),Ba,t(" ; "),ya,t(": "),Ea,t(" ; "),xa,t(": "),Da,t(" ; "),ka,t(": "),Ca,t(" ; "),Ia,t(": "),wa,t(" ; "),Ta,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[Pa]),_:1}),t(" ; "),La,t(": "),Na,t(" ; "),Sa,t(": "),Ra,t(" ; "),Ma,t(": "),Aa,t(" ; "),Va,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ka,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Fa,t(": "),Oa,t(" ; "),Ga,t(": "),Ha,t(" ; "),qa,t(": "),Wa,t(" }>")]),ja]),e("tr",null,[Ua,e("td",za,[n(s,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:o(()=>[Ja]),_:1})]),Qa])])]),Xa,Ya,Za,$a,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),er,e("p",null,[e("a",tr,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:240"),n(d)])]),nr,e("table",null,[sr,e("tbody",null,[e("tr",null,[or,e("td",dr,[n(s,{to:"/api/modules/purista_core.html#subscription"},{default:o(()=>[ir]),_:1})]),ar]),e("tr",null,[rr,e("td",lr,[t("("),cr,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[hr]),_:1}),t(") => "),ur,t("<"),_r,t(" | "),pr,t("<{ "),gr,t(": "),fr,t(" ; "),mr,t(": "),vr,t(" ; "),br,t(": "),Br,t(" ; "),yr,t(": "),Er,t(" ; "),xr,t(": "),Dr,t(" ; "),kr,t(": "),n(s,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:o(()=>[Cr]),_:1}),t(" ; "),Ir,t(": "),wr,t(" ; "),Tr,t(": "),Pr,t(" ; "),Lr,t(": "),Nr,t(" ; "),Sr,t(": "),n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Rr]),_:1}),t(" ; "),Mr,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ar,t(": "),Vr,t(" ; "),Kr,t(": "),Fr,t(" ; "),Or,t(": "),Gr,t(" }, "),Hr,t(" | "),qr,t(">>")]),Wr])])]),jr,Ur,zr,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),Jr,e("p",null,[e("a",Qr,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:265"),n(d)])]),Xr,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#removealllisteners"},{default:o(()=>[t("removeAllListeners")]),_:1})]),Yr,e("p",null,[e("a",Zr,[t("core/types/GenericEventEmitter.ts:28"),n(d)])]),$r,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),el,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#start"},{default:o(()=>[t("start")]),_:1})]),tl,e("p",null,[e("a",nl,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:100"),n(d)])]),sl,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#startactivespan"},{default:o(()=>[t("startActiveSpan")]),_:1})]),ol,e("p",null,[e("a",dl,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:80"),n(d)])]),il,e("table",null,[al,e("tbody",null,[e("tr",null,[rl,e("td",ll,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[cl]),_:1})]),hl])])]),ul,_l,pl,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),gl,e("p",null,[e("a",fl,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:260"),n(d)])]),ml,e("table",null,[vl,e("tbody",null,[e("tr",null,[bl,e("td",Bl,[n(s,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[yl]),_:1})])])])]),El,xl,Dl,e("p",null,[n(s,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:o(()=>[t("EventBridge")]),_:1}),t("."),n(s,{to:"/api/interfaces/purista_core.EventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})]),kl,e("p",null,[e("a",Cl,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:275"),n(d)])]),Il,e("p",null,[n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:o(()=>[t("EventBridgeBaseClass")]),_:1}),t("."),n(s,{to:"/api/classes/purista_core.EventBridgeBaseClass.html#wrapinspan"},{default:o(()=>[t("wrapInSpan")]),_:1})]),wl,e("p",null,[e("a",Tl,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:130"),n(d)])])])}const Ml=r(h,[["render",Pl],["__file","purista_core.DefaultEventBridge.html.vue"]]);export{Ml as default};
