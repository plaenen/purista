import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as c,c as r,b as e,e as n,w as s,d as t,a as d}from"./app-aQ4vLSXI.js";const u={},h=e("h1",{id:"module-purista-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-purista-core","aria-hidden":"true"},"#"),t(" Module: @purista/core")],-1),_=e("p",null,"This is the main package of PURISTA.",-1),p=e("p",null,"A backend framework for building message based domain services.",-1),f=e("p",null,"This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, event sourcing and lambda functions.",-1),g=e("p",null,"It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, OpenApi documentation (swagger).",-1),m={href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"},y={href:"https://sinonjs.org",target:"_blank",rel:"noopener noreferrer"},b={href:"https://purista.dev",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"enumerations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumerations","aria-hidden":"true"},"#"),t(" Enumerations")],-1),S=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),T=e("h3",{id:"interfaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),t(" Interfaces")],-1),k=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),C=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),P=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),w=e("h3",{id:"command",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),t(" Command")],-1),M=e("h3",{id:"event-bridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge","aria-hidden":"true"},"#"),t(" Event bridge")],-1),I=e("h3",{id:"helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#helper","aria-hidden":"true"},"#"),t(" Helper")],-1),E=e("h3",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),t(" Service")],-1),F=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),D=e("h3",{id:"subscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscription","aria-hidden":"true"},"#"),t(" Subscription")],-1),R=e("h3",{id:"unit-test-helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unit-test-helper","aria-hidden":"true"},"#"),t(" Unit test helper")],-1),B=d('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="authcredentials" tabindex="-1"><a class="header-anchor" href="#authcredentials" aria-hidden="true">#</a> AuthCredentials</h3><p>Ƭ <strong>AuthCredentials</strong>: <code>Object</code></p><p>HTTP authentication information</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basicAuth?</code></td><td style="text-align:left;">{ <code>password</code>: <code>string</code> ; <code>username</code>: <code>string</code> }</td><td style="text-align:left;">Basic-Auth information</td></tr><tr><td style="text-align:left;"><code>basicAuth.password</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth password</td></tr><tr><td style="text-align:left;"><code>basicAuth.username</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth username</td></tr><tr><td style="text-align:left;"><code>bearerToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bearer token header</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/AuthCredentials.ts#L4",target:"_blank",rel:"noopener noreferrer"},L=e("hr",null,null,-1),O=e("h3",{id:"brokerheadercommandmsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandmsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandMsg")],-1),A=e("strong",null,"BrokerHeaderCommandMsg",-1),H=e("code",null,"Prettify",-1),j=e("code",null,"BrokerHeaderCustomMsg",-1),G=e("code",null,"receiverInstanceId?",-1),q=e("code",null,"InstanceId",-1),V=e("code",null,"receiverServiceName",-1),z=e("code",null,"string",-1),Z=e("code",null,"receiverServiceTarget",-1),U=e("code",null,"string",-1),Q=e("code",null,"receiverServiceVersion",-1),K=e("code",null,"string",-1),W=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),J=e("h3",{id:"brokerheadercommandresponsemsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandresponsemsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandResponseMsg")],-1),X=e("strong",null,"BrokerHeaderCommandResponseMsg",-1),ee=e("code",null,"Prettify",-1),te=e("code",null,"BrokerHeaderCommandMsg",-1),ne=e("code",null,"receiverInstanceId",-1),oe=e("code",null,"InstanceId",-1),se=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),le={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandResponseMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),ae=e("h3",{id:"brokerheadercustommsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercustommsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCustomMsg")],-1),ie=e("p",null,[t("Ƭ "),e("strong",null,"BrokerHeaderCustomMsg"),t(": "),e("code",null,"Object")],-1),ce=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1","aria-hidden":"true"},"#"),t(" Type declaration")],-1),re=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),he=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),_e={style:{"text-align":"left"}},pe=e("code",null,"EBMessageType",-1),fe=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),ge={style:{"text-align":"left"}},me=e("code",null,"PrincipalId",-1),ye=e("td",{style:{"text-align":"left"}},[e("code",null,"senderInstanceId")],-1),be={style:{"text-align":"left"}},xe=e("code",null,"InstanceId",-1),ve=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ke=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),Ce={style:{"text-align":"left"}},Pe=e("code",null,"TenantId",-1),we=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Me={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCustomMsg.ts#L6",target:"_blank",rel:"noopener noreferrer"},Ie=e("hr",null,null,-1),Ee=e("h3",{id:"command-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command-1","aria-hidden":"true"},"#"),t(" Command")],-1),Fe=e("strong",null,"Command",-1),De=e("code",null,"PayloadType",-1),Re=e("code",null,"ParameterType",-1),Be=e("code",null,"Prettify",-1),Ne=e("code",null,"correlationId",-1),Le=e("code",null,"CorrelationId",-1),Oe=e("code",null,"messageType",-1),Ae=e("code",null,"Command",-1),He=e("code",null,"payload",-1),je=e("code",null,"parameter",-1),Ge=e("code",null,"ParameterType",-1),qe=e("code",null,"payload",-1),Ve=e("code",null,"PayloadType",-1),ze=e("code",null,"receiver",-1),Ze=e("code",null,"EBMessageAddress",-1),Ue=e("code",null,"EBMessageBase",-1),Qe=d('<p>Command is a event bridge message, which is emitted by sender to event bridge. The event bridge dispatches the event to the receiver. A command expects to get a response message from receiver back to sender.</p><p>Also if there are subscriptions which are matching given command, the event bridge also dispatches the command message to the subscriber(s).</p><p>BE AWARE: Subscribers should not respond with command responses if they are &quot;silent&quot; subscribers/listeners.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',6),Ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/Command.ts#L18",target:"_blank",rel:"noopener noreferrer"},We=e("hr",null,null,-1),$e=e("h3",{id:"commanddefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionlist","aria-hidden":"true"},"#"),t(" CommandDefinitionList")],-1),Ye=e("strong",null,"CommandDefinitionList",-1),Je=e("code",null,"ServiceClassType",-1),Xe=e("code",null,"CommandDefinition",-1),et=e("code",null,"ServiceClassType",-1),tt=e("code",null,"CommandDefinitionMetadataBase",-1),nt=e("code",null,"any",-1),ot=e("code",null,"any",-1),st=e("code",null,"any",-1),lt=e("code",null,"any",-1),dt=e("code",null,"any",-1),at=e("code",null,"any",-1),it=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> CommandDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>`,3),ct=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rt=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ut={style:{"text-align":"left"}},ht=e("code",null,"ServiceClass",-1),_t=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),pt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionList.ts#L12",target:"_blank",rel:"noopener noreferrer"},ft=e("hr",null,null,-1),gt=e("h3",{id:"commanddefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionmetadatabase","aria-hidden":"true"},"#"),t(" CommandDefinitionMetadataBase")],-1),mt=e("p",null,[t("Ƭ "),e("strong",null,"CommandDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),yt=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),bt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),vt={style:{"text-align":"left"}},St=e("code",null,"contentEncodingRequest?",-1),Tt=e("code",null,"string",-1),kt=e("code",null,"contentEncodingResponse?",-1),Ct=e("code",null,"string",-1),Pt=e("code",null,"contentTypeRequest?",-1),wt=e("code",null,"ContentType",-1),Mt=e("code",null,"contentTypeResponse?",-1),It=e("code",null,"ContentType",-1),Et=e("code",null,"deprecated?",-1),Ft=e("code",null,"boolean",-1),Dt=e("code",null,"inputPayload?",-1),Rt=e("code",null,"SchemaObject",-1),Bt=e("code",null,"outputPayload?",-1),Nt=e("code",null,"SchemaObject",-1),Lt=e("code",null,"parameter?",-1),Ot=e("code",null,"SchemaObject",-1),At=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ht=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),jt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Gt={style:{"text-align":"left"}},qt=e("code",null,"ContentType",-1),Vt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),zt={style:{"text-align":"left"}},Zt=e("code",null,"ContentType",-1),Ut=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.deprecated?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),Qt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Kt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Wt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),$t=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Yt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Jt=d(`<hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> Complete</h3><p>Ƭ <strong>Complete</strong>&lt;<code>T</code>&gt;: { [P in keyof Required&lt;T&gt;]: Pick&lt;T, P&gt; extends Required&lt;Pick&lt;T, P&gt;&gt; ? T[P] : T[P] | undefined }</p><p>A helper which forces to provide all object keys, even if they are optional.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 one<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
 two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
 three<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// without:</span>
<span class="token keyword">const</span> x<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>

<span class="token comment">// this will fail</span>
<span class="token keyword">const</span> y<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will complain that one and two is missing&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// needs to be like this:</span>
<span class="token keyword">const</span> z<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>`,9),Xt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Complete.ts#L20",target:"_blank",rel:"noopener noreferrer"},en=d('<hr><h3 id="compressionmethod" tabindex="-1"><a class="header-anchor" href="#compressionmethod" aria-hidden="true">#</a> CompressionMethod</h3><p>Ƭ <strong>CompressionMethod</strong>: <code>&quot;gzip&quot;</code> | <code>&quot;deflat&quot;</code> | <code>&quot;br&quot;</code> | <code>undefined</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),tn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/CompressionMethod.ts#L1",target:"_blank",rel:"noopener noreferrer"},nn=d('<hr><h3 id="contenttype" tabindex="-1"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> ContentType</h3><p>Ƭ <strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',5),on={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContentType.ts#L6",target:"_blank",rel:"noopener noreferrer"},sn=e("hr",null,null,-1),ln=e("h3",{id:"contextbase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contextbase","aria-hidden":"true"},"#"),t(" ContextBase")],-1),dn=e("p",null,[t("Ƭ "),e("strong",null,"ContextBase"),t(": "),e("code",null,"Object")],-1),an=e("p",null,"The ContextBase provides is a basic type. Each context for command function, subscription function and all Hooks and transformers will have at least the properties of this type.",-1),cn=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),rn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),un=e("td",{style:{"text-align":"left"}},[e("code",null,"configs")],-1),hn={style:{"text-align":"left"}},_n=e("code",null,"getConfig",-1),pn=e("code",null,"ConfigGetterFunction",-1),fn=e("code",null,"removeConfig",-1),gn=e("code",null,"ConfigDeleteFunction",-1),mn=e("code",null,"setConfig",-1),yn=e("code",null,"ConfigSetterFunction",-1),bn=e("td",{style:{"text-align":"left"}},"the config store",-1),xn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.getConfig")],-1),vn={style:{"text-align":"left"}},Sn=e("code",null,"ConfigGetterFunction",-1),Tn=e("td",{style:{"text-align":"left"}},"get a config value from the config store",-1),kn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.removeConfig")],-1),Cn={style:{"text-align":"left"}},Pn=e("code",null,"ConfigDeleteFunction",-1),wn=e("td",{style:{"text-align":"left"}},"delete a config value from the config store",-1),Mn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.setConfig")],-1),In={style:{"text-align":"left"}},En=e("code",null,"ConfigSetterFunction",-1),Fn=e("td",{style:{"text-align":"left"}},"set a config value in the config store",-1),Dn=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),Rn={style:{"text-align":"left"}},Bn=e("code",null,"Logger",-1),Nn=e("td",{style:{"text-align":"left"}},"the logger instance",-1),Ln=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets")],-1),On={style:{"text-align":"left"}},An=e("code",null,"getSecret",-1),Hn=e("code",null,"SecretGetterFunction",-1),jn=e("code",null,"removeSecret",-1),Gn=e("code",null,"SecretDeleteFunction",-1),qn=e("code",null,"setSecret",-1),Vn=e("code",null,"SecretSetterFunction",-1),zn=e("td",{style:{"text-align":"left"}},"the secret store",-1),Zn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.getSecret")],-1),Un={style:{"text-align":"left"}},Qn=e("code",null,"SecretGetterFunction",-1),Kn=e("td",{style:{"text-align":"left"}},"get a secret from the secret store",-1),Wn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.removeSecret")],-1),$n={style:{"text-align":"left"}},Yn=e("code",null,"SecretDeleteFunction",-1),Jn=e("td",{style:{"text-align":"left"}},"delete a secret from the secret store",-1),Xn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.setSecret")],-1),eo={style:{"text-align":"left"}},to=e("code",null,"SecretSetterFunction",-1),no=e("td",{style:{"text-align":"left"}},"set a secret in the secret store",-1),oo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"Context"),t(" | "),e("code",null,"undefined"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry active span")],-1),so=e("td",{style:{"text-align":"left"}},[e("code",null,"states")],-1),lo={style:{"text-align":"left"}},ao=e("code",null,"getState",-1),io=e("code",null,"StateGetterFunction",-1),co=e("code",null,"removeState",-1),ro=e("code",null,"StateDeleteFunction",-1),uo=e("code",null,"setState",-1),ho=e("code",null,"StateSetterFunction",-1),_o=e("td",{style:{"text-align":"left"}},"the state store",-1),po=e("td",{style:{"text-align":"left"}},[e("code",null,"states.getState")],-1),fo={style:{"text-align":"left"}},go=e("code",null,"StateGetterFunction",-1),mo=e("td",{style:{"text-align":"left"}},"get a state value from the state store",-1),yo=e("td",{style:{"text-align":"left"}},[e("code",null,"states.removeState")],-1),bo={style:{"text-align":"left"}},xo=e("code",null,"StateDeleteFunction",-1),vo=e("td",{style:{"text-align":"left"}},"delete a state value from the state store",-1),So=e("td",{style:{"text-align":"left"}},[e("code",null,"states.setState")],-1),To={style:{"text-align":"left"}},ko=e("code",null,"StateSetterFunction",-1),Co=e("td",{style:{"text-align":"left"}},"set a state value in the state store",-1),Po=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry span")],-1),wo=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),Mo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContextBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},Io=e("hr",null,null,-1),Eo=e("h3",{id:"correlationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#correlationid","aria-hidden":"true"},"#"),t(" CorrelationId")],-1),Fo=e("p",null,[t("Ƭ "),e("strong",null,"CorrelationId"),t(": "),e("code",null,"string")],-1),Do=e("p",null,"the correlation id links the command invocation message with the command response message",-1),Ro=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CorrelationId.ts#L2",target:"_blank",rel:"noopener noreferrer"},No=e("hr",null,null,-1),Lo=e("h3",{id:"custommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custommessage","aria-hidden":"true"},"#"),t(" CustomMessage")],-1),Oo=e("strong",null,"CustomMessage",-1),Ao=e("code",null,"Payload",-1),Ho=e("code",null,"Prettify",-1),jo=e("code",null,"eventName",-1),Go=e("code",null,"string",-1),qo=e("code",null,"messageType",-1),Vo=e("code",null,"CustomMessage",-1),zo=e("code",null,"payload?",-1),Zo=e("code",null,"Payload",-1),Uo=e("code",null,"receiver?",-1),Qo=e("code",null,"EBMessageAddress",-1),Ko=e("code",null,"EBMessageBase",-1),Wo=d('<p>A custom message is a message which can be used to pass business information. The producer emits the message without knowledge about any consumer. The producer does not expect a response from a consumer.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),$o={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CustomMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},Yo=d('<hr><h3 id="defaultconfigstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultconfigstoreconfig" aria-hidden="true">#</a> DefaultConfigStoreConfig</h3><p>Ƭ <strong>DefaultConfigStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),Jo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/types/DefaultConfigStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},Xo=d('<hr><h3 id="defaulteventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#defaulteventbridgeconfig" aria-hidden="true">#</a> DefaultEventBridgeConfig</h3><p>Ƭ <strong>DefaultEventBridgeConfig</strong>: <code>Object</code></p><p>The configuration for the DefaultEventBridge.</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>emitMessagesAsEventBridgeEvents?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Emit messages which have an event name set as javascript events on the event bridge instance</td></tr><tr><td style="text-align:left;"><code>logWarnOnMessagesWithoutReceiver?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Log warnings on messages which are emitted, but could not delivered to at least one receiver</td></tr></tbody></table><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',7),es={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/DefaultEventBridgeConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"},ts=d('<hr><h3 id="defaultsecretstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultsecretstoreconfig" aria-hidden="true">#</a> DefaultSecretStoreConfig</h3><p>Ƭ <strong>DefaultSecretStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),ns={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/types/DefaultSecretStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},os=d('<hr><h3 id="defaultstatestoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultstatestoreconfig" aria-hidden="true">#</a> DefaultStateStoreConfig</h3><p>Ƭ <strong>DefaultStateStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),ss={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/types/DefaultStateStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},ls=d('<hr><h3 id="definitioneventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#definitioneventbridgeconfig" aria-hidden="true">#</a> DefinitionEventBridgeConfig</h3><p>Ƭ <strong>DefinitionEventBridgeConfig</strong>: <code>Object</code></p><p>Settings and advices for the event bridge, which are set in the command or subscription builder. The properties are advices and hints. It depends on the used event bridge implementation and underlaying message broker, if a specific property can be respected.</p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoacknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Send the acknowledge to message broker as soon as the message arrives - defaults to true for commands - defaults to false for subscriptions</td></tr><tr><td style="text-align:left;"><code>durable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Advise the underlaying message broker to store messages if no consumer is available. Messages will be send as soon as the service is able to consume.</td></tr><tr><td style="text-align:left;"><code>shared</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to true, the event bridge is adviced to deliver one message to at least one consumer instance. True is the default value. If set to false, the event bridge is adviced to deliver one message to all consumer instances. Use case: Receiving Info of message, which need to be passed to all instance to keep information in sync. In serverless environments, this flag should not have any effect <strong><code>Default</code></strong> <code>ts true </code></td></tr></tbody></table><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',7),ds={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/DefinitionEventBridgeConfig.ts#L6",target:"_blank",rel:"noopener noreferrer"},as=e("hr",null,null,-1),is=e("h3",{id:"ebmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessage","aria-hidden":"true"},"#"),t(" EBMessage")],-1),cs=e("strong",null,"EBMessage",-1),rs=e("code",null,"Command",-1),us=e("code",null,"CommandResponse",-1),hs=e("code",null,"InfoMessage",-1),_s=e("code",null,"CustomMessage",-1),ps=e("p",null,"EBMessage is some message which is handled by the event bridge.",-1),fs=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),gs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessage.ts#L8",target:"_blank",rel:"noopener noreferrer"},ms=e("hr",null,null,-1),ys=e("h3",{id:"ebmessageaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageaddress","aria-hidden":"true"},"#"),t(" EBMessageAddress")],-1),bs=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageAddress"),t(": "),e("code",null,"Object")],-1),xs=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),vs=e("h4",{id:"type-declaration-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-6","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ss=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ts=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),ks={style:{"text-align":"left"}},Cs=e("code",null,"InstanceId",-1),Ps=e("td",{style:{"text-align":"left"}},"instance id of eventbridge",-1),ws=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),Ms=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),Is=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),Es=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageAddress.ts#L6",target:"_blank",rel:"noopener noreferrer"},Ds=e("hr",null,null,-1),Rs=e("h3",{id:"ebmessagebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagebase","aria-hidden":"true"},"#"),t(" EBMessageBase")],-1),Bs=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageBase"),t(": "),e("code",null,"Object")],-1),Ns=e("p",null,"Default fields which are part of any purista message",-1),Ls=e("h4",{id:"type-declaration-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-7","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Os=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),As=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Hs=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")],-1),js={style:{"text-align":"left"}},Gs=e("code",null,"ContentType",-1),qs=e("td",{style:{"text-align":"left"}},"content type of message payload",-1),Vs=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId?")],-1),zs={style:{"text-align":"left"}},Zs=e("code",null,"CorrelationId",-1),Us=e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command",-1),Qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Ks=e("td",{style:{"text-align":"left"}},[e("code",null,"id")],-1),Ws={style:{"text-align":"left"}},$s=e("code",null,"EBMessageId",-1),Ys=e("td",{style:{"text-align":"left"}},"global unique id of message",-1),Js=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Xs=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),el={style:{"text-align":"left"}},tl=e("code",null,"PrincipalId",-1),nl=e("td",{style:{"text-align":"left"}},"principal id",-1),ol=e("td",{style:{"text-align":"left"}},[e("code",null,"sender")],-1),sl={style:{"text-align":"left"}},ll=e("code",null,"EBMessageSenderAddress",-1),dl=e("td",{style:{"text-align":"left"}},"-",-1),al=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),il={style:{"text-align":"left"}},cl=e("code",null,"TenantId",-1),rl=e("td",{style:{"text-align":"left"}},"principal id",-1),ul=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),hl=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),_l={style:{"text-align":"left"}},pl=e("code",null,"TraceId",-1),fl=e("td",{style:{"text-align":"left"}},"trace id of message",-1),gl=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),ml={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},yl=e("hr",null,null,-1),bl=e("h3",{id:"ebmessageid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageid","aria-hidden":"true"},"#"),t(" EBMessageId")],-1),xl=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageId"),t(": "),e("code",null,"string")],-1),vl=e("p",null,"Unique id of the event bridge message",-1),Sl=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageId.ts#L4",target:"_blank",rel:"noopener noreferrer"},kl=e("hr",null,null,-1),Cl=e("h3",{id:"ebmessagesenderaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagesenderaddress","aria-hidden":"true"},"#"),t(" EBMessageSenderAddress")],-1),Pl=e("strong",null,"EBMessageSenderAddress",-1),wl=e("code",null,"Prettify",-1),Ml=e("code",null,"Omit",-1),Il=e("code",null,"EBMessageAddress",-1),El=e("code",null,'"instanceId"',-1),Fl=e("code",null,"Required",-1),Dl=e("code",null,"Pick",-1),Rl=e("code",null,"EBMessageAddress",-1),Bl=e("code",null,'"instanceId"',-1),Nl=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),Ll=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ol={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageSenderAddress.ts#L7",target:"_blank",rel:"noopener noreferrer"},Al=e("hr",null,null,-1),Hl=e("h3",{id:"emitcustommessagefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitcustommessagefunction","aria-hidden":"true"},"#"),t(" EmitCustomMessageFunction")],-1),jl=e("strong",null,"EmitCustomMessageFunction",-1),Gl=e("code",null,"eventName",-1),ql=e("code",null,"string",-1),Vl=e("code",null,"payload?",-1),zl=e("code",null,"Payload",-1),Zl=e("code",null,"contentType?",-1),Ul=e("code",null,"ContentType",-1),Ql=e("code",null,"contentEncoding?",-1),Kl=e("code",null,"string",-1),Wl=e("code",null,"Promise",-1),$l=e("code",null,"void",-1),Yl=d('<h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>Payload</code>&gt;(<code>eventName</code>, <code>payload?</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Emits the given payload as custom message with the given event name.</p><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>',6),Jl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Xl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ed=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Payload")])],-1),td=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType?")],-1),nd={style:{"text-align":"left"}},od=e("code",null,"ContentType",-1),sd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ld=d(`<h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-custom-event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> the<span class="token operator">:</span> <span class="token string">&#39;payload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-23" tabindex="-1"><a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a> Defined in</h4>`,5),dd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EmitCustomMessageFunction.ts#L10",target:"_blank",rel:"noopener noreferrer"},ad=e("hr",null,null,-1),id=e("h3",{id:"errorresponsepayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorresponsepayload","aria-hidden":"true"},"#"),t(" ErrorResponsePayload")],-1),cd=e("p",null,[t("Ƭ "),e("strong",null,"ErrorResponsePayload"),t(": "),e("code",null,"Object")],-1),rd=e("p",null,"Error message payload",-1),ud=e("h4",{id:"type-declaration-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-9","aria-hidden":"true"},"#"),t(" Type declaration")],-1),hd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),_d=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"data?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"addition data")],-1),pd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"a human readable error message")],-1),fd=e("td",{style:{"text-align":"left"}},[e("code",null,"status")],-1),gd={style:{"text-align":"left"}},md=e("code",null,"StatusCode",-1),yd=e("td",{style:{"text-align":"left"}},"the error status code",-1),bd=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),xd={style:{"text-align":"left"}},vd=e("code",null,"TraceId",-1),Sd=e("td",{style:{"text-align":"left"}},"the trace if of the request",-1),Td=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),kd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ErrorResponsePayload.ts#L7",target:"_blank",rel:"noopener noreferrer"},Cd=d('<hr><h3 id="eventbridgeadapterevents" tabindex="-1"><a class="header-anchor" href="#eventbridgeadapterevents" aria-hidden="true">#</a> EventBridgeAdapterEvents</h3><p>Ƭ <strong>EventBridgeAdapterEvents</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><p>currently not used, but reserved for further events</p><p><strong><code>Group</code></strong></p><p>Events</p><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4>',9),Pd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L42",target:"_blank",rel:"noopener noreferrer"},wd=e("hr",null,null,-1),Md=e("h3",{id:"eventbridgeconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeconfig","aria-hidden":"true"},"#"),t(" EventBridgeConfig")],-1),Id=e("strong",null,"EventBridgeConfig",-1),Ed=e("code",null,"CustomConfig",-1),Fd=e("code",null,"Prettify",-1),Dd=e("code",null,"defaultCommandTimeout?",-1),Rd=e("code",null,"number",-1),Bd=e("code",null,"instanceId?",-1),Nd=e("code",null,"string",-1),Ld=e("code",null,"logLevel?",-1),Od=e("code",null,"LogLevelName",-1),Ad=e("code",null,"logger?",-1),Hd=e("code",null,"Logger",-1),jd=e("code",null,"spanProcessor?",-1),Gd=e("code",null,"SpanProcessor",-1),qd=e("code",null,"CustomConfig",-1),Vd=d('<p>The config object for an event bridge. Every event bridge implementation must use this type for configuration.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td></tr></tbody></table><h4 id="defined-in-26" tabindex="-1"><a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a> Defined in</h4>',4),zd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeConfig.ts#L10",target:"_blank",rel:"noopener noreferrer"},Zd=d('<hr><h3 id="eventbridgecustomevents" tabindex="-1"><a class="header-anchor" href="#eventbridgecustomevents" aria-hidden="true">#</a> EventBridgeCustomEvents</h3><p>Ƭ <strong>EventBridgeCustomEvents</strong>: <code>Object</code></p><h4 id="index-signature-1" tabindex="-1"><a class="header-anchor" href="#index-signature-1" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><p>emitted a EBMessage if event name is provided and if it is enabled and supported on the event bridge</p><p><strong><code>Group</code></strong></p><p>Events</p><h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4>',9),Ud={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L37",target:"_blank",rel:"noopener noreferrer"},Qd=e("hr",null,null,-1),Kd=e("h3",{id:"eventbridgeevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeevents","aria-hidden":"true"},"#"),t(" EventBridgeEvents")],-1),Wd=e("strong",null,"EventBridgeEvents",-1),$d=e("code",null,"Prettify",-1),Yd=e("code",null,"EventBridgeEventsBasic",-1),Jd=e("code",null,"addPrefixToObject",-1),Xd=e("code",null,"EventBridgeAdapterEvents",-1),ea=e("code",null,'"adapter-"',-1),ta=e("code",null,"addPrefixToObject",-1),na=e("code",null,"EventBridgeCustomEvents",-1),oa=e("code",null,'"custom-"',-1),sa=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),la={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L47",target:"_blank",rel:"noopener noreferrer"},da=d('<hr><h3 id="eventkey" tabindex="-1"><a class="header-anchor" href="#eventkey" aria-hidden="true">#</a> EventKey</h3><p>Ƭ <strong>EventKey</strong>&lt;<code>T</code>&gt;: <code>string</code> &amp; keyof <code>T</code></p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',4),aa=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ia=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),ca={style:{"text-align":"left"}},ra=e("code",null,"EventMap",-1),ua=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),ha={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L5",target:"_blank",rel:"noopener noreferrer"},_a=d('<hr><h3 id="eventmap" tabindex="-1"><a class="header-anchor" href="#eventmap" aria-hidden="true">#</a> EventMap</h3><p>Ƭ <strong>EventMap</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="defined-in-30" tabindex="-1"><a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a> Defined in</h4>',4),pa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L3",target:"_blank",rel:"noopener noreferrer"},fa=e("hr",null,null,-1),ga=e("h3",{id:"httpclientconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpclientconfig","aria-hidden":"true"},"#"),t(" HttpClientConfig")],-1),ma=e("strong",null,"HttpClientConfig",-1),ya=e("code",null,"CustomConfig",-1),ba=e("code",null,"Prettify",-1),xa=e("code",null,"baseUrl",-1),va=e("code",null,"string",-1),Sa=e("code",null,"basicAuth?",-1),Ta=e("code",null,"password",-1),ka=e("code",null,"string",-1),Ca=e("code",null,"username",-1),Pa=e("code",null,"string",-1),wa=e("code",null,"bearerToken?",-1),Ma=e("code",null,"string",-1),Ia=e("code",null,"defaultHeaders?",-1),Ea=e("code",null,"Record",-1),Fa=e("code",null,"string",-1),Da=e("code",null,"string",-1),Ra=e("code",null,"defaultTimeout?",-1),Ba=e("code",null,"number",-1),Na=e("code",null,"enableOpentelemetry?",-1),La=e("code",null,"boolean",-1),Oa=e("code",null,"isKeepAlive?",-1),Aa=e("code",null,"boolean",-1),Ha=e("code",null,"logLevel?",-1),ja=e("code",null,"LogLevelName",-1),Ga=e("code",null,"logger?",-1),qa=e("code",null,"Logger",-1),Va=e("code",null,"name?",-1),za=e("code",null,"string",-1),Za=e("code",null,"spanProcessor?",-1),Ua=e("code",null,"SpanProcessor",-1),Qa=e("code",null,"CustomConfig",-1),Ka=d('<p>Tha basic configuration for a HTTPClient Requires as least a <code>baseUrl</code></p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-31" tabindex="-1"><a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a> Defined in</h4>',4),Wa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientConfig.ts#L9",target:"_blank",rel:"noopener noreferrer"},$a=d('<hr><h3 id="httpclientrequestoptions" tabindex="-1"><a class="header-anchor" href="#httpclientrequestoptions" aria-hidden="true">#</a> HttpClientRequestOptions</h3><p>Ƭ <strong>HttpClientRequestOptions</strong>: <code>Object</code></p><p>Options for a single request</p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>hash?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">url hash @example: http://example.com/index.html#hash</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">additional headers</td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">query/search string parameter</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Timeout for the request in ms <strong><code>Default</code></strong> <code>ts 30000 </code></td></tr></tbody></table><h4 id="defined-in-32" tabindex="-1"><a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a> Defined in</h4>',7),Ya={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientRequestOptions.ts#L4",target:"_blank",rel:"noopener noreferrer"},Ja=e("hr",null,null,-1),Xa=e("h3",{id:"httpexposedservicemeta",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpexposedservicemeta","aria-hidden":"true"},"#"),t(" HttpExposedServiceMeta")],-1),ei=e("strong",null,"HttpExposedServiceMeta",-1),ti=e("code",null,"ParameterType",-1),ni=e("code",null,"Prettify",-1),oi=e("code",null,"CommandDefinitionMetadataBase",-1),si=e("code",null,"expose",-1),li=e("code",null,"http",-1),di=e("code",null,"method",-1),ai=e("code",null,'"GET"',-1),ii=e("code",null,'"POST"',-1),ci=e("code",null,'"PATCH"',-1),ri=e("code",null,'"PUT"',-1),ui=e("code",null,'"DELETE"',-1),hi=e("code",null,"openApi?",-1),_i=e("code",null,"additionalStatusCodes?",-1),pi=e("code",null,"StatusCode",-1),fi=e("code",null,"description",-1),gi=e("code",null,"string",-1),mi=e("code",null,"isSecure",-1),yi=e("code",null,"boolean",-1),bi=e("code",null,"operationId?",-1),xi=e("code",null,"string",-1),vi=e("code",null,"query?",-1),Si=e("code",null,"QueryParameter",-1),Ti=e("code",null,"ParameterType",-1),ki=e("code",null,"summary",-1),Ci=e("code",null,"string",-1),Pi=e("code",null,"tags?",-1),wi=e("code",null,"string",-1),Mi=e("code",null,"path",-1),Ii=e("code",null,"string",-1),Ei=d('<h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4>',3),Fi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/HttpExposedServiceMeta.ts#L4",target:"_blank",rel:"noopener noreferrer"},Di=e("hr",null,null,-1),Ri=e("h3",{id:"infoinvoketimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeout","aria-hidden":"true"},"#"),t(" InfoInvokeTimeout")],-1),Bi=e("strong",null,"InfoInvokeTimeout",-1),Ni=e("code",null,"messageType",-1),Li=e("code",null,"InfoInvokeTimeout",-1),Oi=e("code",null,"InfoServiceBase",-1),Ai=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L22",target:"_blank",rel:"noopener noreferrer"},ji=e("hr",null,null,-1),Gi=e("h3",{id:"infoinvoketimeoutpayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeoutpayload","aria-hidden":"true"},"#"),t(" InfoInvokeTimeoutPayload")],-1),qi=e("p",null,[t("Ƭ "),e("strong",null,"InfoInvokeTimeoutPayload"),t(": "),e("code",null,"Object")],-1),Vi=e("h4",{id:"type-declaration-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-11","aria-hidden":"true"},"#"),t(" Type declaration")],-1),zi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Zi=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId")],-1),Ui={style:{"text-align":"left"}},Qi=e("code",null,"CorrelationId",-1),Ki=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),Wi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),$i=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Yi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ji=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),Xi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ec=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),tc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),nc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),oc=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId")],-1),sc={style:{"text-align":"left"}},lc=e("code",null,"TraceId",-1),dc=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),ac={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L6",target:"_blank",rel:"noopener noreferrer"},ic=e("hr",null,null,-1),cc=e("h3",{id:"infomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessage","aria-hidden":"true"},"#"),t(" InfoMessage")],-1),rc=e("strong",null,"InfoMessage",-1),uc=e("code",null,"InfoServiceDrain",-1),hc=e("code",null,"InfoServiceFunctionAdded",-1),_c=e("code",null,"InfoServiceInit",-1),pc=e("code",null,"InfoServiceNotReady",-1),fc=e("code",null,"InfoServiceReady",-1),gc=e("code",null,"InfoServiceShutdown",-1),mc=e("code",null,"InfoInvokeTimeout",-1),yc=e("code",null,"InfoSubscriptionError",-1),bc=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),xc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},vc=e("hr",null,null,-1),Sc=e("h3",{id:"infomessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessagetype","aria-hidden":"true"},"#"),t(" InfoMessageType")],-1),Tc=e("strong",null,"InfoMessageType",-1),kc=e("code",null,"InfoServiceDrain",-1),Cc=e("code",null,"InfoServiceFunctionAdded",-1),Pc=e("code",null,"InfoServiceInit",-1),wc=e("code",null,"InfoServiceNotReady",-1),Mc=e("code",null,"InfoServiceReady",-1),Ic=e("code",null,"InfoServiceShutdown",-1),Ec=e("code",null,"InfoInvokeTimeout",-1),Fc=e("code",null,"InfoSubscriptionError",-1),Dc=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L21",target:"_blank",rel:"noopener noreferrer"},Bc=e("hr",null,null,-1),Nc=e("h3",{id:"infoservicebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicebase","aria-hidden":"true"},"#"),t(" InfoServiceBase")],-1),Lc=e("strong",null,"InfoServiceBase",-1),Oc=e("code",null,"Prettify",-1),Ac=e("code",null,"contentEncoding",-1),Hc=e("code",null,'"utf-8"',-1),jc=e("code",null,"contentType",-1),Gc=e("code",null,'"application/json"',-1),qc=e("code",null,"payload?",-1),Vc=e("code",null,"unknown",-1),zc=e("code",null,"EBMessageBase",-1),Zc=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),Uc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceBase.ts#L4",target:"_blank",rel:"noopener noreferrer"},Qc=e("hr",null,null,-1),Kc=e("h3",{id:"infoservicedrain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicedrain","aria-hidden":"true"},"#"),t(" InfoServiceDrain")],-1),Wc=e("strong",null,"InfoServiceDrain",-1),$c=e("code",null,"Prettify",-1),Yc=e("code",null,"messageType",-1),Jc=e("code",null,"InfoServiceDrain",-1),Xc=e("code",null,"InfoServiceBase",-1),er=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),tr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceDrain.ts#L5",target:"_blank",rel:"noopener noreferrer"},nr=e("hr",null,null,-1),or=e("h3",{id:"infoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicefunctionadded","aria-hidden":"true"},"#"),t(" InfoServiceFunctionAdded")],-1),sr=e("strong",null,"InfoServiceFunctionAdded",-1),lr=e("code",null,"Prettify",-1),dr=e("code",null,"messageType",-1),ar=e("code",null,"InfoServiceFunctionAdded",-1),ir=e("code",null,"InfoServiceBase",-1),cr=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),rr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceFunctionAdded.ts#L5",target:"_blank",rel:"noopener noreferrer"},ur=e("hr",null,null,-1),hr=e("h3",{id:"infoserviceinit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceinit","aria-hidden":"true"},"#"),t(" InfoServiceInit")],-1),_r=e("strong",null,"InfoServiceInit",-1),pr=e("code",null,"Prettify",-1),fr=e("code",null,"messageType",-1),gr=e("code",null,"InfoServiceInit",-1),mr=e("code",null,"InfoServiceBase",-1),yr=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),br={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceInit.ts#L5",target:"_blank",rel:"noopener noreferrer"},xr=e("hr",null,null,-1),vr=e("h3",{id:"infoservicenotready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicenotready","aria-hidden":"true"},"#"),t(" InfoServiceNotReady")],-1),Sr=e("strong",null,"InfoServiceNotReady",-1),Tr=e("code",null,"Prettify",-1),kr=e("code",null,"messageType",-1),Cr=e("code",null,"InfoServiceNotReady",-1),Pr=e("code",null,"InfoServiceBase",-1),wr=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),Mr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceNotReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Ir=e("hr",null,null,-1),Er=e("h3",{id:"infoserviceready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceready","aria-hidden":"true"},"#"),t(" InfoServiceReady")],-1),Fr=e("strong",null,"InfoServiceReady",-1),Dr=e("code",null,"Prettify",-1),Rr=e("code",null,"messageType",-1),Br=e("code",null,"InfoServiceReady",-1),Nr=e("code",null,"InfoServiceBase",-1),Lr=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),Or={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Ar=e("hr",null,null,-1),Hr=e("h3",{id:"infoserviceshutdown",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceshutdown","aria-hidden":"true"},"#"),t(" InfoServiceShutdown")],-1),jr=e("strong",null,"InfoServiceShutdown",-1),Gr=e("code",null,"Prettify",-1),qr=e("code",null,"messageType",-1),Vr=e("code",null,"InfoServiceShutdown",-1),zr=e("code",null,"InfoServiceBase",-1),Zr=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ur={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceShutdown.ts#L5",target:"_blank",rel:"noopener noreferrer"},Qr=e("hr",null,null,-1),Kr=e("h3",{id:"infosubscriptionerror",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infosubscriptionerror","aria-hidden":"true"},"#"),t(" InfoSubscriptionError")],-1),Wr=e("strong",null,"InfoSubscriptionError",-1),$r=e("code",null,"Prettify",-1),Yr=e("code",null,"messageType",-1),Jr=e("code",null,"InfoSubscriptionError",-1),Xr=e("code",null,"InfoServiceBase",-1),eu=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),tu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoSubscriptionError.ts#L5",target:"_blank",rel:"noopener noreferrer"},nu=e("hr",null,null,-1),ou=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" InstanceId")],-1),su=e("p",null,[t("Ƭ "),e("strong",null,"InstanceId"),t(": "),e("code",null,"string")],-1),lu=e("p",null,"the instance id of the event bridge",-1),du=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),au={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InstanceId.ts#L2",target:"_blank",rel:"noopener noreferrer"},iu=e("hr",null,null,-1),cu=e("h3",{id:"invokefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#invokefunction","aria-hidden":"true"},"#"),t(" InvokeFunction")],-1),ru=e("strong",null,"InvokeFunction",-1),uu=e("code",null,"address",-1),hu=e("code",null,"EBMessageAddress",-1),_u=e("code",null,"payload",-1),pu=e("code",null,"PayloadType",-1),fu=e("code",null,"parameter",-1),gu=e("code",null,"ParameterType",-1),mu=e("code",null,"Promise",-1),yu=e("code",null,"InvokeResponseType",-1),bu=d('<h4 id="type-declaration-12" tabindex="-1"><a class="header-anchor" href="#type-declaration-12" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>InvokeResponseType</code>, <code>PayloadType</code>, <code>ParameterType</code>&gt;(<code>address</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p>Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need.</p><h5 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>InvokeResponseType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5>',6),xu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vu=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Su={style:{"text-align":"left"}},Tu=e("code",null,"EBMessageAddress",-1),ku=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),Cu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")])],-1),Pu=d(`<h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">const</span> address<span class="token operator">:</span> EBMessageAddress <span class="token operator">=</span> <span class="token punctuation">{</span>
  serviceName<span class="token operator">:</span> <span class="token string">&#39;name-of-service-to-invoke&#39;</span><span class="token punctuation">,</span>
  serviceVersion<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
  serviceTarget<span class="token operator">:</span> <span class="token string">&#39;command-name-to-invoke&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> inputPayload <span class="token operator">=</span> <span class="token punctuation">{</span> my<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> inputParameter <span class="token operator">=</span> <span class="token punctuation">{</span> search<span class="token operator">:</span> <span class="token string">&#39;for_me&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">invoke</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyResultType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> inputPayload inputParameter <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-47" tabindex="-1"><a class="header-anchor" href="#defined-in-47" aria-hidden="true">#</a> Defined in</h4>`,5),wu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InvokeFunction.ts#L21",target:"_blank",rel:"noopener noreferrer"},Mu=d('<hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-48" tabindex="-1"><a class="header-anchor" href="#defined-in-48" aria-hidden="true">#</a> Defined in</h4>',4),Iu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L19",target:"_blank",rel:"noopener noreferrer"},Eu=d('<hr><h3 id="loglevelname" tabindex="-1"><a class="header-anchor" href="#loglevelname" aria-hidden="true">#</a> LogLevelName</h3><p>Ƭ <strong>LogLevelName</strong>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code></p><h4 id="defined-in-49" tabindex="-1"><a class="header-anchor" href="#defined-in-49" aria-hidden="true">#</a> Defined in</h4>',4),Fu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/LogLevelName.ts#L1",target:"_blank",rel:"noopener noreferrer"},Du=e("hr",null,null,-1),Ru=e("h3",{id:"loggeroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loggeroptions","aria-hidden":"true"},"#"),t(" LoggerOptions")],-1),Bu=e("p",null,[t("Ƭ "),e("strong",null,"LoggerOptions"),t(": "),e("code",null,"Object")],-1),Nu=e("h4",{id:"type-declaration-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-13","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Lu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ou=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Au=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),Hu={style:{"text-align":"left"}},ju=e("code",null,"InstanceId",-1),Gu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),qu=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Vu={style:{"text-align":"left"}},zu=e("code",null,"PrincipalId",-1),Zu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Uu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Qu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ku=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Wu=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),$u={style:{"text-align":"left"}},Yu=e("code",null,"TenantId",-1),Ju=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),Xu={style:{"text-align":"left"}},eh=e("code",null,"TraceId",-1),th=e("h4",{id:"defined-in-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-50","aria-hidden":"true"},"#"),t(" Defined in")],-1),nh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L6",target:"_blank",rel:"noopener noreferrer"},oh=d('<hr><h3 id="loggerstubs" tabindex="-1"><a class="header-anchor" href="#loggerstubs" aria-hidden="true">#</a> LoggerStubs</h3><p>Ƭ <strong>LoggerStubs</strong>: <code>Object</code></p><h4 id="type-declaration-14" tabindex="-1"><a class="header-anchor" href="#type-declaration-14" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>debug</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>info</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>trace</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>warn</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr></tbody></table><h4 id="defined-in-51" tabindex="-1"><a class="header-anchor" href="#defined-in-51" aria-hidden="true">#</a> Defined in</h4>',6),sh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L41",target:"_blank",rel:"noopener noreferrer"},lh=e("hr",null,null,-1),dh=e("h3",{id:"newable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#newable","aria-hidden":"true"},"#"),t(" Newable")],-1),ah=e("strong",null,"Newable",-1),ih=e("code",null,"T",-1),ch=e("code",null,"ConfigType",-1),rh=e("code",null,"config",-1),uh=e("code",null,"ServiceConstructorInput",-1),hh=e("code",null,"ConfigType",-1),_h=e("code",null,"T",-1),ph=d('<h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-15" tabindex="-1"><a class="header-anchor" href="#type-declaration-15" aria-hidden="true">#</a> Type declaration</h4><p>• <strong>new Newable</strong>(<code>config</code>): <code>T</code></p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5>',5),fh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),gh=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),mh={style:{"text-align":"left"}},yh=e("code",null,"ServiceConstructorInput",-1),bh=e("code",null,"ConfigType",-1),xh=e("h5",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),vh=e("p",null,[e("code",null,"T")],-1),Sh=e("h4",{id:"defined-in-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-52","aria-hidden":"true"},"#"),t(" Defined in")],-1),Th={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},kh=e("hr",null,null,-1),Ch=e("h3",{id:"pendiginvocation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendiginvocation","aria-hidden":"true"},"#"),t(" PendigInvocation")],-1),Ph=e("p",null,[t("Ƭ "),e("strong",null,"PendigInvocation"),t(": "),e("code",null,"Object")],-1),wh=e("h4",{id:"type-declaration-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-16","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Mh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ih=e("td",{style:{"text-align":"left"}},[e("code",null,"reject")],-1),Eh={style:{"text-align":"left"}},Fh=e("code",null,"error",-1),Dh=e("code",null,"HandledError",-1),Rh=e("code",null,"UnhandledError",-1),Bh=e("code",null,"void",-1),Nh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"resolve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"responsePayload"),t(": "),e("code",null,"unknown"),t(") => "),e("code",null,"void")])],-1),Lh=e("h4",{id:"defined-in-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-53","aria-hidden":"true"},"#"),t(" Defined in")],-1),Oh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/PendingInvocations.ts#L3",target:"_blank",rel:"noopener noreferrer"},Ah=d('<hr><h3 id="prettify" tabindex="-1"><a class="header-anchor" href="#prettify" aria-hidden="true">#</a> Prettify</h3><p>Ƭ <strong>Prettify</strong>&lt;<code>T</code>&gt;: { [K in keyof T]: T[K] } &amp; {}</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-54" tabindex="-1"><a class="header-anchor" href="#defined-in-54" aria-hidden="true">#</a> Defined in</h4>',6),Hh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Prettify.ts#L1",target:"_blank",rel:"noopener noreferrer"},jh=e("hr",null,null,-1),Gh=e("h3",{id:"principalid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#principalid","aria-hidden":"true"},"#"),t(" PrincipalId")],-1),qh=e("p",null,[t("Ƭ "),e("strong",null,"PrincipalId"),t(": "),e("code",null,"string")],-1),Vh=e("p",null,"the principal id",-1),zh=e("h4",{id:"defined-in-55",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-55","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/PrincipalId.ts#L2",target:"_blank",rel:"noopener noreferrer"},Uh=d('<hr><h3 id="queryparameter" tabindex="-1"><a class="header-anchor" href="#queryparameter" aria-hidden="true">#</a> QueryParameter</h3><p>Ƭ <strong>QueryParameter</strong>&lt;<code>ParameterType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="type-declaration-17" tabindex="-1"><a class="header-anchor" href="#type-declaration-17" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">keyof <code>ParameterType</code></td></tr><tr><td style="text-align:left;"><code>required</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="defined-in-56" tabindex="-1"><a class="header-anchor" href="#defined-in-56" aria-hidden="true">#</a> Defined in</h4>',8),Qh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/QueryParameter.ts#L1",target:"_blank",rel:"noopener noreferrer"},Kh=d('<hr><h3 id="secretstorecachemap" tabindex="-1"><a class="header-anchor" href="#secretstorecachemap" aria-hidden="true">#</a> SecretStoreCacheMap</h3><p>Ƭ <strong>SecretStoreCacheMap</strong>: <code>Map</code>&lt;<code>string</code>, { <code>createdAt</code>: <code>number</code> ; <code>value</code>: <code>string</code> }&gt;</p><h4 id="defined-in-57" tabindex="-1"><a class="header-anchor" href="#defined-in-57" aria-hidden="true">#</a> Defined in</h4>',4),Wh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretStoreCacheMap.ts#L1",target:"_blank",rel:"noopener noreferrer"},$h=e("hr",null,null,-1),Yh=e("h3",{id:"serviceevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#serviceevents","aria-hidden":"true"},"#"),t(" ServiceEvents")],-1),Jh=e("strong",null,"ServiceEvents",-1),Xh=e("code",null,"ServiceEventsInternal",-1),e_=e("code",null,"addPrefixToObject",-1),t_=e("code",null,"CustomEvents",-1),n_=e("code",null,'"custom-"',-1),o_=e("code",null,"addPrefixToObject",-1),s_=e("code",null,"CustomEvents",-1),l_=e("code",null,'"misc-"',-1),d_=e("p",null,"ServiceEvents are plain javascript events sent by the service. There are three types:",-1),a_=e("ul",null,[e("li",null,[t("technical events when a services starts, stops, an error occurs and so on are prefixed with "),e("code",null,"service-")]),e("li",null,[t("response messages, which have a event name assigned, are prefixed with "),e("code",null,"custom-")]),e("li",null,[t("additional events, free defined by developer are prefixed with "),e("code",null,"misc-")])],-1),i_=e("h4",{id:"defined-in-58",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-58","aria-hidden":"true"},"#"),t(" Defined in")],-1),c_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L98",target:"_blank",rel:"noopener noreferrer"},r_=d('<hr><h3 id="serviceinfotype" tabindex="-1"><a class="header-anchor" href="#serviceinfotype" aria-hidden="true">#</a> ServiceInfoType</h3><p>Ƭ <strong>ServiceInfoType</strong>: <code>Object</code></p><p>General service information</p><h4 id="type-declaration-18" tabindex="-1"><a class="header-anchor" href="#type-declaration-18" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-59" tabindex="-1"><a class="header-anchor" href="#defined-in-59" aria-hidden="true">#</a> Defined in</h4>',7),u_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/ServiceInfoType.ts#L4",target:"_blank",rel:"noopener noreferrer"},h_=d('<hr><h3 id="shutdownentry" tabindex="-1"><a class="header-anchor" href="#shutdownentry" aria-hidden="true">#</a> ShutdownEntry</h3><p>Ƭ <strong>ShutdownEntry</strong>: <code>Object</code></p><p>Entry of thing you like to shutdown gracefully</p><h4 id="type-declaration-19" tabindex="-1"><a class="header-anchor" href="#type-declaration-19" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>destroy</code></td><td style="text-align:left;">() =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td><td style="text-align:left;">a async function that is called during shutdown</td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name</td></tr></tbody></table><h4 id="defined-in-60" tabindex="-1"><a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a> Defined in</h4>',7),__={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/types/ShutdownEntry.ts#L4",target:"_blank",rel:"noopener noreferrer"},p_=e("hr",null,null,-1),f_=e("h3",{id:"storebaseconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#storebaseconfig","aria-hidden":"true"},"#"),t(" StoreBaseConfig")],-1),g_=e("strong",null,"StoreBaseConfig",-1),m_=e("code",null,"Config",-1),y_=e("code",null,"Prettify",-1),b_=e("code",null,"cacheTtl?",-1),x_=e("code",null,"number",-1),v_=e("code",null,"enableCache?",-1),S_=e("code",null,"boolean",-1),T_=e("code",null,"enableGet?",-1),k_=e("code",null,"boolean",-1),C_=e("code",null,"enableRemove?",-1),P_=e("code",null,"boolean",-1),w_=e("code",null,"enableSet?",-1),M_=e("code",null,"boolean",-1),I_=e("code",null,"logLevel?",-1),E_=e("code",null,"LogLevelName",-1),F_=e("code",null,"logger?",-1),D_=e("code",null,"Logger",-1),R_=e("code",null,"Config",-1),B_=d('<p>Basic configuration object which is used by any store</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Config</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-61" tabindex="-1"><a class="header-anchor" href="#defined-in-61" aria-hidden="true">#</a> Defined in</h4>',4),N_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/StoreBaseConfig.ts#L8",target:"_blank",rel:"noopener noreferrer"},L_=e("hr",null,null,-1),O_=e("h3",{id:"subscriptiondefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionlist","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionList")],-1),A_=e("strong",null,"SubscriptionDefinitionList",-1),H_=e("code",null,"ServiceClassType",-1),j_=e("code",null,"SubscriptionDefinition",-1),G_=e("code",null,"ServiceClassType",-1),q_=e("code",null,"any",-1),V_=e("code",null,"any",-1),z_=e("code",null,"any",-1),Z_=e("code",null,"any",-1),U_=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> SubscriptionDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4>`,3),Q_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),K_=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),W_={style:{"text-align":"left"}},$_=e("code",null,"ServiceClass",-1),Y_=e("h4",{id:"defined-in-62",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-62","aria-hidden":"true"},"#"),t(" Defined in")],-1),J_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionList.ts#L11",target:"_blank",rel:"noopener noreferrer"},X_=e("hr",null,null,-1),ep=e("h3",{id:"subscriptiondefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionmetadatabase","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionMetadataBase")],-1),tp=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),np=e("h4",{id:"type-declaration-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-20","aria-hidden":"true"},"#"),t(" Type declaration")],-1),op=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),sp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),lp={style:{"text-align":"left"}},dp=e("code",null,"contentEncodingRequest?",-1),ap=e("code",null,"string",-1),ip=e("code",null,"contentEncodingResponse?",-1),cp=e("code",null,"string",-1),rp=e("code",null,"contentTypeRequest?",-1),up=e("code",null,"ContentType",-1),hp=e("code",null,"contentTypeResponse?",-1),_p=e("code",null,"ContentType",-1),pp=e("code",null,"inputPayload?",-1),fp=e("code",null,"SchemaObject",-1),gp=e("code",null,"outputPayload?",-1),mp=e("code",null,"SchemaObject",-1),yp=e("code",null,"parameter?",-1),bp=e("code",null,"SchemaObject",-1),xp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),vp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Sp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Tp={style:{"text-align":"left"}},kp=e("code",null,"ContentType",-1),Cp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),Pp={style:{"text-align":"left"}},wp=e("code",null,"ContentType",-1),Mp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Ip=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Ep=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Fp=e("h4",{id:"defined-in-63",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-63","aria-hidden":"true"},"#"),t(" Defined in")],-1),Dp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Rp=e("hr",null,null,-1),Bp=e("h3",{id:"subscriptionstorageentry",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionstorageentry","aria-hidden":"true"},"#"),t(" SubscriptionStorageEntry")],-1),Np=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionStorageEntry"),t(": "),e("code",null,"Object")],-1),Lp=e("h4",{id:"type-declaration-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-21","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Op=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ap=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),Hp={style:{"text-align":"left"}},jp=e("code",null,"message",-1),Gp=e("code",null,"EBMessage",-1),qp=e("code",null,"Promise",-1),Vp=e("code",null,"Omit",-1),zp=e("code",null,"CustomMessage",-1),Zp=e("code",null,'"id"',-1),Up=e("code",null,'"timestamp"',-1),Qp=e("code",null,"undefined",-1),Kp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Wp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingEventName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),$p=e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingMessageType")],-1),Yp={style:{"text-align":"left"}},Jp=e("code",null,"input",-1),Xp=e("code",null,"EBMessageType",-1),e1=e("code",null,"boolean",-1),t1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingPrincipalId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),n1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),o1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),s1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),l1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),d1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),a1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),i1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),c1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),r1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingTenantId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),u1=e("h4",{id:"defined-in-64",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-64","aria-hidden":"true"},"#"),t(" Defined in")],-1),h1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/SubscriptionStorageEntry.ts#L3",target:"_blank",rel:"noopener noreferrer"},_1=d('<hr><h3 id="supportedhttpmethod" tabindex="-1"><a class="header-anchor" href="#supportedhttpmethod" aria-hidden="true">#</a> SupportedHttpMethod</h3><p>Ƭ <strong>SupportedHttpMethod</strong>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code></p><p>Supported HTTP-Methods for defining endpoints</p><h4 id="defined-in-65" tabindex="-1"><a class="header-anchor" href="#defined-in-65" aria-hidden="true">#</a> Defined in</h4>',5),p1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/SupportedHttpMethod.ts#L2",target:"_blank",rel:"noopener noreferrer"},f1=e("hr",null,null,-1),g1=e("h3",{id:"tenantid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tenantid","aria-hidden":"true"},"#"),t(" TenantId")],-1),m1=e("p",null,[t("Ƭ "),e("strong",null,"TenantId"),t(": "),e("code",null,"string")],-1),y1=e("p",null,"the tenant id",-1),b1=e("h4",{id:"defined-in-66",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-66","aria-hidden":"true"},"#"),t(" Defined in")],-1),x1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/TenantId.ts#L2",target:"_blank",rel:"noopener noreferrer"},v1=e("hr",null,null,-1),S1=e("h3",{id:"traceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceid","aria-hidden":"true"},"#"),t(" TraceId")],-1),T1=e("p",null,[t("Ƭ "),e("strong",null,"TraceId"),t(": "),e("code",null,"string")],-1),k1=e("p",null,"The trace id which will be passed through all commands, invocations and subscriptions",-1),C1=e("h4",{id:"defined-in-67",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-67","aria-hidden":"true"},"#"),t(" Defined in")],-1),P1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/TraceId.ts#L4",target:"_blank",rel:"noopener noreferrer"},w1=d('<hr><h3 id="addprefixtoobject" tabindex="-1"><a class="header-anchor" href="#addprefixtoobject" aria-hidden="true">#</a> addPrefixToObject</h3><p>Ƭ <strong>addPrefixToObject</strong>&lt;<code>T</code>, <code>P</code>&gt;: { [K in keyof T as K extends string ? `${P}${K}` : never]: T[K] }</p><p>Helper for better typescript type. All keys of given object must start with the given prefix. Otherwise Typescript will complain.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | `T` |\n| `P` | extends `string` |\n\n#### Defined in\n\n[core/types/addPrefixToObject.ts:7](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/addPrefixToObject.ts#L7)\n\n## Variables\n\n### MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION\n\n• `Const` **MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION**: ``1024``\n\n#### Defined in\n\n[core/HttpServer/MinContentSizeForCompression.const.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/MinContentSizeForCompression.const.ts#L1)\n\n___\n\n### ServiceInfoValidator\n\n• `Const` **ServiceInfoValidator**: `Object`\n\n#### Type declaration\n\n| Name | Type |\n| :------ | :------ |\n| `set` | (`obj`: [`ServiceInfoType`](purista_core.md#serviceinfotype), `prop`: keyof [`ServiceInfoType`](purista_core.md#serviceinfotype), `value`: `string`) =&gt; `boolean` |\n\n#### Defined in\n\n[core/Service/ServiceInfoValidator.impl.ts:5](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/ServiceInfoValidator.impl.ts#L5)\n\n___\n\n### infoMessageTypes\n\n• `Const` **infoMessageTypes**: [`EBMessageType`](../enums/purista_core.EBMessageType.md)[]\n\n#### Defined in\n\n[core/types/infoType/InfoMessage.ts:30](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L30)\n\n___\n\n### puristaVersion\n\n• `Const` **puristaVersion**: ``&quot;1.8.3&quot;``\n\n#### Defined in\n\n[version.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/version.ts#L1)\n\n## Functions\n\n### extendApi\n\n▸ **extendApi**\\&lt;`T`\\&gt;(`schema`, `SchemaObject?`): `T`\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | extends [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md) |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `schema` | `T` |\n| `SchemaObject` | `SchemaObject` |\n\n#### Returns\n\n`T`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:25](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L25)\n\n___\n\n### generateSchema\n\n▸ **generateSchema**(`zodRef`, `useOutput?`): `SchemaObject`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `zodRef` | [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md) |\n| `useOutput?` | `boolean` |\n\n#### Returns\n\n`SchemaObject`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:414](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L414)\n\n___\n\n### getCommandFunctionWithValidation\n\n▸ **getCommandFunctionWithValidation**\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`CommandFunction`](purista_core.md#commandfunction)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)\\&lt;`unknown`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`CommandFunction`](purista_core.md#commandfunction)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`\\&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`\\&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`\\&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`\\&lt;`string`, [`CommandBeforeGuardHook`](purista_core.md#commandbeforeguardhook)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`CommandFunction`](purista_core.md#commandfunction)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getDefaultEventBridgeConfig\n\n▸ **getDefaultEventBridgeConfig**(): [`Complete`](purista_core.md#complete)\\&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Returns\n\n[`Complete`](purista_core.md#complete)\\&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Defined in\n\n[DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts#L4)\n\n___\n\n### getDefaultLogLevel\n\n▸ **getDefaultLogLevel**(): [`LogLevelName`](purista_core.md#loglevelname)\n\n#### Returns\n\n[`LogLevelName`](purista_core.md#loglevelname)\n\n#### Defined in\n\n[DefaultLogger/getDefaultLogLevel.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/getDefaultLogLevel.ts#L4)\n\n___\n\n### getNewSubscriptionStorageEntry\n\n▸ **getNewSubscriptionStorageEntry**(`subscription`, `cb`): [`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `subscription` | [`Subscription`](purista_core.md#subscription) |\n| `cb` | (`message`: [`EBMessage`](purista_core.md#ebmessage)) =&gt; `Promise`\\&lt;`undefined` \\| `Omit`\\&lt;\\{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId?`: `string` ; `eventName`: `string` ; `id`: `string` ; `messageType`: [`CustomMessage`](../enums/purista_core.EBMessageType.md#custommessage) ; `otp?`: `string` ; `payload?`: `unknown` ; `principalId?`: `string` ; `receiver?`: [`EBMessageAddress`](purista_core.md#ebmessageaddress) ; `sender`: \\{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  }, ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;``\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Defined in\n\n[DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts#L4)\n\n___\n\n### getSubscriptionFunctionWithValidation\n\n▸ **getSubscriptionFunctionWithValidation**\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`SubscriptionFunction`](purista_core.md#subscriptionfunction)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)\\&lt;`unknown`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`SubscriptionFunction`](purista_core.md#subscriptionfunction)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`\\&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`\\&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`\\&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`\\&lt;`string`, [`SubscriptionBeforeGuardHook`](purista_core.md#subscriptionbeforeguardhook)\\&lt;`ServiceClassType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionFunction`](purista_core.md#subscriptionfunction)\\&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getTimeoutPromise\n\n▸ **getTimeoutPromise**\\&lt;`T`\\&gt;(`fn`, `ttl?`): `Promise`\\&lt;`T`\\&gt;\n\n#### Type parameters\n\n| Name |\n| :------ |\n| `T` |\n\n#### Parameters\n\n| Name | Type | Default value | Description |\n| :------ | :------ | :------ | :------ |\n| `fn` | `Promise`\\&lt;`T`\\&gt; | `undefined` | the promise which should get a timeout |\n| `ttl` | `number` | `30000` | the timeout in ms |\n\n#### Returns\n\n`Promise`\\&lt;`T`\\&gt;\n\n**`Default`**\n\n```ts\n30000\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-68" tabindex="-1"><a class="header-anchor" href="#defined-in-68" aria-hidden="true">#</a> Defined in</h4>',6),M1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/getTimeoutPromise.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},I1=e("hr",null,null,-1),E1=e("h3",{id:"initdefaultconfigstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultconfigstore","aria-hidden":"true"},"#"),t(" initDefaultConfigStore")],-1),F1=e("strong",null,"initDefaultConfigStore",-1),D1=e("code",null,"options",-1),R1=e("code",null,"DefaultConfigStore",-1),B1=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),N1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),L1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),O1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),A1={style:{"text-align":"left"}},H1=e("code",null,"Logger",-1),j1=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),G1=e("code",null,"DefaultConfigStore",-1),q1=e("h4",{id:"defined-in-69",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-69","aria-hidden":"true"},"#"),t(" Defined in")],-1),V1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/initDefaultConfigStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},z1=e("hr",null,null,-1),Z1=e("h3",{id:"initdefaultsecretstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultsecretstore","aria-hidden":"true"},"#"),t(" initDefaultSecretStore")],-1),U1=e("strong",null,"initDefaultSecretStore",-1),Q1=e("code",null,"options",-1),K1=e("code",null,"DefaultSecretStore",-1),W1=e("h4",{id:"parameters-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),t(" Parameters")],-1),$1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Y1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),J1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),X1={style:{"text-align":"left"}},ef=e("code",null,"Logger",-1),tf=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),nf=e("code",null,"DefaultSecretStore",-1),of=e("h4",{id:"defined-in-70",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-70","aria-hidden":"true"},"#"),t(" Defined in")],-1),sf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/initDefaultSecretStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},lf=e("hr",null,null,-1),df=e("h3",{id:"initdefaultstatestore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultstatestore","aria-hidden":"true"},"#"),t(" initDefaultStateStore")],-1),af=e("strong",null,"initDefaultStateStore",-1),cf=e("code",null,"options",-1),rf=e("code",null,"DefaultStateStore",-1),uf=e("h4",{id:"parameters-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),t(" Parameters")],-1),hf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_f=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),pf=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),ff={style:{"text-align":"left"}},gf=e("code",null,"Logger",-1),mf=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),yf=e("code",null,"DefaultStateStore",-1),bf=e("h4",{id:"defined-in-71",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-71","aria-hidden":"true"},"#"),t(" Defined in")],-1),xf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/initDefaultStateStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},vf=e("hr",null,null,-1),Sf=e("h3",{id:"initlogger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initlogger","aria-hidden":"true"},"#"),t(" initLogger")],-1),Tf=e("strong",null,"initLogger",-1),kf=e("code",null,"level?",-1),Cf=e("code",null,"opt?",-1),Pf=e("code",null,"Logger",-1),wf=e("p",null,"Create a new logger with the given minimum log level",-1),Mf=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),If=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ef=e("td",{style:{"text-align":"left"}},[e("code",null,"level")],-1),Ff={style:{"text-align":"left"}},Df=e("code",null,"LogLevelName",-1),Rf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"opt?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LoggerOptions")])],-1),Bf=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),Nf=e("code",null,"Logger",-1),Lf=e("h4",{id:"defined-in-72",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-72","aria-hidden":"true"},"#"),t(" Defined in")],-1),Of={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/initLogger.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},Af=e("hr",null,null,-1),Hf=e("h3",{id:"iscustommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscustommessage","aria-hidden":"true"},"#"),t(" isCustomMessage")],-1),jf=e("p",null,[t("▸ "),e("strong",null,"isCustomMessage"),t("("),e("code",null,"message"),t("): message is Object")],-1),Gf=e("p",null,"Checks if a PURISTA message is type of custom message",-1),qf=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),Vf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),zf=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Zf={style:{"text-align":"left"}},Uf=e("code",null,"EBMessage",-1),Qf=e("td",{style:{"text-align":"left"}},"any PURISTA message",-1),Kf=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),Wf=e("p",null,"message is Object",-1),$f=e("p",null,"true if message is type of custom message",-1),Yf=e("h4",{id:"defined-in-73",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-73","aria-hidden":"true"},"#"),t(" Defined in")],-1),Jf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/isCustomMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},Xf=d('<hr><h3 id="ishttpexposedservicemeta" tabindex="-1"><a class="header-anchor" href="#ishttpexposedservicemeta" aria-hidden="true">#</a> isHttpExposedServiceMeta</h3><p>▸ <strong>isHttpExposedServiceMeta</strong>(<code>input?</code>): input is Object</p><p>Checks if given input is type of HttpExposedServiceMeta</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p>input is Object</p><p>boolean - true if input is type of HttpExposedServiceMeta</p><h4 id="defined-in-74" tabindex="-1"><a class="header-anchor" href="#defined-in-74" aria-hidden="true">#</a> Defined in</h4>',10),eg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/isHttpExposedServiceMeta.impl.ts#L8",target:"_blank",rel:"noopener noreferrer"},tg=e("hr",null,null,-1),ng=e("h3",{id:"isinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfomessage","aria-hidden":"true"},"#"),t(" isInfoMessage")],-1),og=e("p",null,[t("▸ "),e("strong",null,"isInfoMessage"),t("("),e("code",null,"message"),t("): message is InfoMessage")],-1),sg=e("h4",{id:"parameters-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),t(" Parameters")],-1),lg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),dg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),ag={style:{"text-align":"left"}},ig=e("code",null,"EBMessage",-1),cg=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),rg=e("p",null,"message is InfoMessage",-1),ug=e("h4",{id:"defined-in-75",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-75","aria-hidden":"true"},"#"),t(" Defined in")],-1),hg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoMessage.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},_g=e("hr",null,null,-1),pg=e("h3",{id:"isinfoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfoservicefunctionadded","aria-hidden":"true"},"#"),t(" isInfoServiceFunctionAdded")],-1),fg=e("p",null,[t("▸ "),e("strong",null,"isInfoServiceFunctionAdded"),t("("),e("code",null,"message"),t("): message is Object")],-1),gg=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),mg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),bg={style:{"text-align":"left"}},xg=e("code",null,"EBMessage",-1),vg=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),Sg=e("p",null,"message is Object",-1),Tg=e("h4",{id:"defined-in-76",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-76","aria-hidden":"true"},"#"),t(" Defined in")],-1),kg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoServiceFunctionAdded.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},Cg=d('<hr><h3 id="ismessagematchingsubscription" tabindex="-1"><a class="header-anchor" href="#ismessagematchingsubscription" aria-hidden="true">#</a> isMessageMatchingSubscription</h3><p>▸ <strong>isMessageMatchingSubscription</strong>(<code>_log</code>, <code>message</code>, <code>subscription</code>): <code>boolean</code></p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4>',4),Pg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),wg=e("td",{style:{"text-align":"left"}},[e("code",null,"_log")],-1),Mg={style:{"text-align":"left"}},Ig=e("code",null,"Logger",-1),Eg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Fg={style:{"text-align":"left"}},Dg=e("code",null,"EBMessage",-1),Rg=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),Bg={style:{"text-align":"left"}},Ng=e("code",null,"SubscriptionStorageEntry",-1),Lg=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),Og=e("p",null,[e("code",null,"boolean")],-1),Ag=e("h4",{id:"defined-in-77",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-77","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/isMessageMatchingSubscription.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},jg=d('<hr><h3 id="throwifnotvalidmessage" tabindex="-1"><a class="header-anchor" href="#throwifnotvalidmessage" aria-hidden="true">#</a> throwIfNotValidMessage</h3><p>▸ <strong>throwIfNotValidMessage</strong>(<code>input</code>): <code>void</code></p><p>Validates if the given input might be valid event bridge message It only checks for &quot;technically possible&quot;</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-78" tabindex="-1"><a class="header-anchor" href="#defined-in-78" aria-hidden="true">#</a> Defined in</h4>',9),Gg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/throwIfNotValidMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},qg=d('<h2 id="command-2" tabindex="-1"><a class="header-anchor" href="#command-2" aria-hidden="true">#</a> Command</h2><p>• <strong>CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.</p><p>A working schema definition needs at least a command name, a short description and the function implementation.</p><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4>',5),Vg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),zg=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Zg={style:{"text-align":"left"}},Ug=e("code",null,"ServiceClass",-1),Qg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Kg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Wg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),$g=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Yg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Jg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),Xg=e("h4",{id:"defined-in-79",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-79","aria-hidden":"true"},"#"),t(" Defined in")],-1),em={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},tm=e("h3",{id:"commandafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandafterguardhook","aria-hidden":"true"},"#"),t(" CommandAfterGuardHook")],-1),nm=e("strong",null,"CommandAfterGuardHook",-1),om=e("code",null,"ServiceClassType",-1),sm=e("code",null,"MessagePayloadType",-1),lm=e("code",null,"MessageParamsType",-1),dm=e("code",null,"FunctionResultType",-1),am=e("code",null,"FunctionPayloadType",-1),im=e("code",null,"FunctionParamsType",-1),cm=e("code",null,"this",-1),rm=e("code",null,"ServiceClassType",-1),um=e("code",null,"context",-1),hm=e("code",null,"CommandFunctionContext",-1),_m=e("code",null,"MessagePayloadType",-1),pm=e("code",null,"MessageParamsType",-1),fm=e("code",null,"result",-1),gm=e("code",null,"Readonly",-1),mm=e("code",null,"FunctionResultType",-1),ym=e("code",null,"input",-1),bm=e("code",null,"Readonly",-1),xm=e("code",null,"FunctionPayloadType",-1),vm=e("code",null,"parameter",-1),Sm=e("code",null,"Readonly",-1),Tm=e("code",null,"FunctionParamsType",-1),km=e("code",null,"Promise",-1),Cm=e("code",null,"void",-1),Pm=e("h4",{id:"type-parameters-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-16","aria-hidden":"true"},"#"),t(" Type parameters")],-1),wm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Mm=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Im={style:{"text-align":"left"}},Em=e("code",null,"ServiceClass",-1),Fm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Dm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Rm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Bm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Nm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Lm=d('<h4 id="type-declaration-22" tabindex="-1"><a class="header-anchor" href="#type-declaration-22" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>input</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h5>',4),Om=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Am=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Hm=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),jm={style:{"text-align":"left"}},Gm=e("code",null,"CommandFunctionContext",-1),qm=e("code",null,"MessagePayloadType",-1),Vm=e("code",null,"MessageParamsType",-1),zm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),Zm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"input")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Um=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Qm=e("h5",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),Km=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Wm=e("h4",{id:"defined-in-80",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-80","aria-hidden":"true"},"#"),t(" Defined in")],-1),$m={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},Ym=e("hr",null,null,-1),Jm=e("h3",{id:"commandbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandbeforeguardhook","aria-hidden":"true"},"#"),t(" CommandBeforeGuardHook")],-1),Xm=e("strong",null,"CommandBeforeGuardHook",-1),ey=e("code",null,"ServiceClassType",-1),ty=e("code",null,"MessagePayloadType",-1),ny=e("code",null,"MessageParamsType",-1),oy=e("code",null,"FunctionPayloadType",-1),sy=e("code",null,"FunctionParamsType",-1),ly=e("code",null,"this",-1),dy=e("code",null,"ServiceClassType",-1),ay=e("code",null,"context",-1),iy=e("code",null,"CommandFunctionContext",-1),cy=e("code",null,"MessagePayloadType",-1),ry=e("code",null,"MessageParamsType",-1),uy=e("code",null,"payload",-1),hy=e("code",null,"Readonly",-1),_y=e("code",null,"FunctionPayloadType",-1),py=e("code",null,"parameter",-1),fy=e("code",null,"Readonly",-1),gy=e("code",null,"FunctionParamsType",-1),my=e("code",null,"Promise",-1),yy=e("code",null,"void",-1),by=e("h4",{id:"type-parameters-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-17","aria-hidden":"true"},"#"),t(" Type parameters")],-1),xy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vy=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Sy={style:{"text-align":"left"}},Ty=e("code",null,"ServiceClass",-1),ky=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Cy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Py=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),wy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),My=d('<h4 id="type-declaration-23" tabindex="-1"><a class="header-anchor" href="#type-declaration-23" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h5>',4),Iy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ey=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Fy=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Dy={style:{"text-align":"left"}},Ry=e("code",null,"CommandFunctionContext",-1),By=e("code",null,"MessagePayloadType",-1),Ny=e("code",null,"MessageParamsType",-1),Ly=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Oy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Ay=e("h5",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),Hy=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),jy=e("h4",{id:"defined-in-81",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-81","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gy={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},qy=d('<hr><h3 id="commanddefinition" tabindex="-1"><a class="header-anchor" href="#commanddefinition" aria-hidden="true">#</a> CommandDefinition</h3><p>Ƭ <strong>CommandDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a command provided by some service.</p><h4 id="type-parameters-18" tabindex="-1"><a class="header-anchor" href="#type-parameters-18" aria-hidden="true">#</a> Type parameters</h4>',5),Vy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),zy=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Zy={style:{"text-align":"left"}},Uy=e("code",null,"ServiceClass",-1),Qy=e("code",null,"ServiceClass",-1),Ky=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),Wy={style:{"text-align":"left"}},$y=e("code",null,"CommandDefinitionMetadataBase",-1),Yy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Jy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Xy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),eb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),tb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),nb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ob=e("h4",{id:"type-declaration-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-24","aria-hidden":"true"},"#"),t(" Type declaration")],-1),sb=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),lb=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),db={style:{"text-align":"left"}},ab=e("code",null,"CommandFunction",-1),ib=e("code",null,"ServiceClassType",-1),cb=e("code",null,"MessagePayloadType",-1),rb=e("code",null,"MessageParamsType",-1),ub=e("code",null,"FunctionPayloadType",-1),hb=e("code",null,"FunctionParamsType",-1),_b=e("code",null,"FunctionResultType",-1),pb=e("td",{style:{"text-align":"left"}},"the command function",-1),fb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the command")],-1),gb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command")],-1),mb=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),yb={style:{"text-align":"left"}},bb=e("code",null,"DefinitionEventBridgeConfig",-1),xb=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),vb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the eventName for the command response")],-1),Sb=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),Tb={style:{"text-align":"left"}},kb=e("code",null,"afterGuard?",-1),Cb=e("code",null,"Record",-1),Pb=e("code",null,"string",-1),wb=e("code",null,"CommandAfterGuardHook",-1),Mb=e("code",null,"ServiceClassType",-1),Ib=e("code",null,"MessagePayloadType",-1),Eb=e("code",null,"MessageParamsType",-1),Fb=e("code",null,"FunctionResultType",-1),Db=e("code",null,"FunctionPayloadType",-1),Rb=e("code",null,"FunctionParamsType",-1),Bb=e("code",null,"beforeGuard?",-1),Nb=e("code",null,"Record",-1),Lb=e("code",null,"string",-1),Ob=e("code",null,"CommandBeforeGuardHook",-1),Ab=e("code",null,"ServiceClassType",-1),Hb=e("code",null,"MessagePayloadType",-1),jb=e("code",null,"MessageParamsType",-1),Gb=e("code",null,"FunctionPayloadType",-1),qb=e("code",null,"FunctionParamsType",-1),Vb=e("code",null,"transformInput?",-1),zb=e("code",null,"transformFunction",-1),Zb=e("code",null,"CommandTransformInputHook",-1),Ub=e("code",null,"ServiceClassType",-1),Qb=e("code",null,"MessagePayloadType",-1),Kb=e("code",null,"MessageParamsType",-1),Wb=e("code",null,"transformInputSchema",-1),$b=e("code",null,"z.ZodType",-1),Yb=e("code",null,"transformParameterSchema",-1),Jb=e("code",null,"z.ZodType",-1),Xb=e("code",null,"transformOutput?",-1),ex=e("code",null,"transformFunction",-1),tx=e("code",null,"CommandTransformOutputHook",-1),nx=e("code",null,"ServiceClassType",-1),ox=e("code",null,"MessagePayloadType",-1),sx=e("code",null,"MessageResultType",-1),lx=e("code",null,"FunctionParamsType",-1),dx=e("code",null,"unknown",-1),ax=e("code",null,"transformOutputSchema",-1),ix=e("code",null,"z.ZodType",-1),cx=e("td",{style:{"text-align":"left"}},"hooks of command",-1),rx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),ux={style:{"text-align":"left"}},hx=e("code",null,"Record",-1),_x=e("code",null,"string",-1),px=e("code",null,"CommandAfterGuardHook",-1),fx=e("code",null,"ServiceClassType",-1),gx=e("code",null,"MessagePayloadType",-1),mx=e("code",null,"MessageParamsType",-1),yx=e("code",null,"FunctionResultType",-1),bx=e("code",null,"FunctionPayloadType",-1),xx=e("code",null,"FunctionParamsType",-1),vx=e("td",{style:{"text-align":"left"}},"-",-1),Sx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),Tx={style:{"text-align":"left"}},kx=e("code",null,"Record",-1),Cx=e("code",null,"string",-1),Px=e("code",null,"CommandBeforeGuardHook",-1),wx=e("code",null,"ServiceClassType",-1),Mx=e("code",null,"MessagePayloadType",-1),Ix=e("code",null,"MessageParamsType",-1),Ex=e("code",null,"FunctionPayloadType",-1),Fx=e("code",null,"FunctionParamsType",-1),Dx=e("td",{style:{"text-align":"left"}},"-",-1),Rx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),Bx={style:{"text-align":"left"}},Nx=e("code",null,"transformFunction",-1),Lx=e("code",null,"CommandTransformInputHook",-1),Ox=e("code",null,"ServiceClassType",-1),Ax=e("code",null,"MessagePayloadType",-1),Hx=e("code",null,"MessageParamsType",-1),jx=e("code",null,"transformInputSchema",-1),Gx=e("code",null,"z.ZodType",-1),qx=e("code",null,"transformParameterSchema",-1),Vx=e("code",null,"z.ZodType",-1),zx=e("td",{style:{"text-align":"left"}},"-",-1),Zx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),Ux={style:{"text-align":"left"}},Qx=e("code",null,"CommandTransformInputHook",-1),Kx=e("code",null,"ServiceClassType",-1),Wx=e("code",null,"MessagePayloadType",-1),$x=e("code",null,"MessageParamsType",-1),Yx=e("td",{style:{"text-align":"left"}},"-",-1),Jx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Xx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),e3=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),t3={style:{"text-align":"left"}},n3=e("code",null,"transformFunction",-1),o3=e("code",null,"CommandTransformOutputHook",-1),s3=e("code",null,"ServiceClassType",-1),l3=e("code",null,"MessagePayloadType",-1),d3=e("code",null,"MessageResultType",-1),a3=e("code",null,"FunctionParamsType",-1),i3=e("code",null,"unknown",-1),c3=e("code",null,"transformOutputSchema",-1),r3=e("code",null,"z.ZodType",-1),u3=e("td",{style:{"text-align":"left"}},"-",-1),h3=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),_3={style:{"text-align":"left"}},p3=e("code",null,"CommandTransformOutputHook",-1),f3=e("code",null,"ServiceClassType",-1),g3=e("code",null,"MessagePayloadType",-1),m3=e("code",null,"MessageResultType",-1),y3=e("code",null,"FunctionParamsType",-1),b3=e("code",null,"unknown",-1),x3=e("td",{style:{"text-align":"left"}},"-",-1),v3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),S3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the command")],-1),T3=e("h4",{id:"defined-in-82",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-82","aria-hidden":"true"},"#"),t(" Defined in")],-1),k3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinition.ts#L17",target:"_blank",rel:"noopener noreferrer"},C3=e("hr",null,null,-1),P3=e("h3",{id:"commanderrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanderrorresponse","aria-hidden":"true"},"#"),t(" CommandErrorResponse")],-1),w3=e("strong",null,"CommandErrorResponse",-1),M3=e("code",null,"Prettify",-1),I3=e("code",null,"contentEncoding",-1),E3=e("code",null,'"utf-8"',-1),F3=e("code",null,"contentType",-1),D3=e("code",null,'"application/json"',-1),R3=e("code",null,"correlationId",-1),B3=e("code",null,"CorrelationId",-1),N3=e("code",null,"isHandledError",-1),L3=e("code",null,"boolean",-1),O3=e("code",null,"messageType",-1),A3=e("code",null,"CommandErrorResponse",-1),H3=e("code",null,"payload",-1),j3=e("code",null,"data?",-1),G3=e("code",null,"unknown",-1),q3=e("code",null,"message",-1),V3=e("code",null,"string",-1),z3=e("code",null,"status",-1),Z3=e("code",null,"StatusCode",-1),U3=e("code",null,"receiver",-1),Q3=e("code",null,"EBMessageSenderAddress",-1),K3=e("code",null,"EBMessageBase",-1),W3=e("p",null,"CommandErrorResponse is a response to a specific previously received command which indicates some failure.",-1),$3=e("h4",{id:"defined-in-83",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-83","aria-hidden":"true"},"#"),t(" Defined in")],-1),Y3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandErrorResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},J3=e("hr",null,null,-1),X3=e("h3",{id:"commandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunction","aria-hidden":"true"},"#"),t(" CommandFunction")],-1),ev=e("strong",null,"CommandFunction",-1),tv=e("code",null,"ServiceClassType",-1),nv=e("code",null,"MessagePayloadType",-1),ov=e("code",null,"MessageParamsType",-1),sv=e("code",null,"FunctionPayloadType",-1),lv=e("code",null,"FunctionParamsType",-1),dv=e("code",null,"FunctionResultType",-1),av=e("code",null,"this",-1),iv=e("code",null,"ServiceClassType",-1),cv=e("code",null,"context",-1),rv=e("code",null,"CommandFunctionContext",-1),uv=e("code",null,"MessagePayloadType",-1),hv=e("code",null,"MessageParamsType",-1),_v=e("code",null,"payload",-1),pv=e("code",null,"Readonly",-1),fv=e("code",null,"FunctionPayloadType",-1),gv=e("code",null,"parameter",-1),mv=e("code",null,"Readonly",-1),yv=e("code",null,"FunctionParamsType",-1),bv=e("code",null,"Promise",-1),xv=e("code",null,"FunctionResultType",-1),vv=e("h4",{id:"type-parameters-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-19","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Sv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Tv=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),kv={style:{"text-align":"left"}},Cv=e("code",null,"ServiceClass",-1),Pv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),wv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Mv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Iv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Ev=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Fv=d('<h4 id="type-declaration-25" tabindex="-1"><a class="header-anchor" href="#type-declaration-25" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5>',4),Dv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Rv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Bv=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Nv={style:{"text-align":"left"}},Lv=e("code",null,"CommandFunctionContext",-1),Ov=e("code",null,"MessagePayloadType",-1),Av=e("code",null,"MessageParamsType",-1),Hv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),jv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Gv=e("h5",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),qv=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),Vv=e("h4",{id:"defined-in-84",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-84","aria-hidden":"true"},"#"),t(" Defined in")],-1),zv={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunction.ts#L9",target:"_blank",rel:"noopener noreferrer"},Zv=e("hr",null,null,-1),Uv=e("h3",{id:"commandfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunctioncontext","aria-hidden":"true"},"#"),t(" CommandFunctionContext")],-1),Qv=e("strong",null,"CommandFunctionContext",-1),Kv=e("code",null,"MessagePayloadType",-1),Wv=e("code",null,"MessageParamsType",-1),$v=e("code",null,"Prettify",-1),Yv=e("code",null,"ContextBase",-1),Jv=e("code",null,"CommandFunctionContextEnhancements",-1),Xv=e("code",null,"MessagePayloadType",-1),e2=e("code",null,"MessageParamsType",-1),t2=d('<p>The command function context which will be passed into command function.</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-85" tabindex="-1"><a class="header-anchor" href="#defined-in-85" aria-hidden="true">#</a> Defined in</h4>',4),n2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},o2=d('<hr><h3 id="commandfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontextenhancements" aria-hidden="true">#</a> CommandFunctionContextEnhancements</h3><p>Ƭ <strong>CommandFunctionContextEnhancements</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;: <code>Object</code></p><p>It provides the original command message with types for payload and parameter. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-parameters-21" tabindex="-1"><a class="header-anchor" href="#type-parameters-21" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-26" tabindex="-1"><a class="header-anchor" href="#type-declaration-26" aria-hidden="true">#</a> Type declaration</h4>',8),s2=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),l2=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),d2={style:{"text-align":"left"}},a2=e("code",null,"EmitCustomMessageFunction",-1),i2=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),c2=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),r2={style:{"text-align":"left"}},u2=e("code",null,"InvokeFunction",-1),h2=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),_2=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),p2={style:{"text-align":"left"}},f2=e("code",null,"Readonly",-1),g2=e("code",null,"Command",-1),m2=e("code",null,"MessagePayloadType",-1),y2=e("code",null,"MessageParamsType",-1),b2=e("td",{style:{"text-align":"left"}},"the original message",-1),x2=e("h4",{id:"defined-in-86",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-86","aria-hidden":"true"},"#"),t(" Defined in")],-1),v2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},S2=e("hr",null,null,-1),T2=e("h3",{id:"commandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandresponse","aria-hidden":"true"},"#"),t(" CommandResponse")],-1),k2=e("strong",null,"CommandResponse",-1),C2=e("code",null,"T",-1),P2=e("code",null,"CommandSuccessResponse",-1),w2=e("code",null,"T",-1),M2=e("code",null,"CommandErrorResponse",-1),I2=d('<p>CommandResponse is a response to a specific previously received command which can be either a success or failure</p><h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-87" tabindex="-1"><a class="header-anchor" href="#defined-in-87" aria-hidden="true">#</a> Defined in</h4>',4),E2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandResponse.ts#L9",target:"_blank",rel:"noopener noreferrer"},F2=e("hr",null,null,-1),D2=e("h3",{id:"commandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandsuccessresponse","aria-hidden":"true"},"#"),t(" CommandSuccessResponse")],-1),R2=e("strong",null,"CommandSuccessResponse",-1),B2=e("code",null,"PayloadType",-1),N2=e("code",null,"Prettify",-1),L2=e("code",null,"correlationId",-1),O2=e("code",null,"CorrelationId",-1),A2=e("code",null,"messageType",-1),H2=e("code",null,"CommandSuccessResponse",-1),j2=e("code",null,"payload",-1),G2=e("code",null,"PayloadType",-1),q2=e("code",null,"receiver",-1),V2=e("code",null,"EBMessageSenderAddress",-1),z2=e("code",null,"EBMessageBase",-1),Z2=d('<p>CommandSuccessResponse is a response to a specific previously received command. It indicates that the command was executed successfully and contains the result payload</p><h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-88" tabindex="-1"><a class="header-anchor" href="#defined-in-88" aria-hidden="true">#</a> Defined in</h4>',4),U2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandSuccessResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},Q2=e("hr",null,null,-1),K2=e("h3",{id:"commandtransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformfunctioncontext","aria-hidden":"true"},"#"),t(" CommandTransformFunctionContext")],-1),W2=e("strong",null,"CommandTransformFunctionContext",-1),$2=e("code",null,"PayloadType",-1),Y2=e("code",null,"ParameterType",-1),J2=e("code",null,"Prettify",-1),X2=e("code",null,"ContextBase",-1),e4=e("code",null,"message",-1),t4=e("code",null,"Readonly",-1),n4=e("code",null,"Command",-1),o4=e("code",null,"PayloadType",-1),s4=e("code",null,"ParameterType",-1),l4=d('<h4 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td></tr></tbody></table><h4 id="defined-in-89" tabindex="-1"><a class="header-anchor" href="#defined-in-89" aria-hidden="true">#</a> Defined in</h4>',3),d4={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},a4=e("hr",null,null,-1),i4=e("h3",{id:"commandtransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransforminputhook","aria-hidden":"true"},"#"),t(" CommandTransformInputHook")],-1),c4=e("strong",null,"CommandTransformInputHook",-1),r4=e("code",null,"ServiceClassType",-1),u4=e("code",null,"PayloadOutput",-1),h4=e("code",null,"ParamsOutput",-1),_4=e("code",null,"PayloadInput",-1),p4=e("code",null,"ParamsInput",-1),f4=e("code",null,"this",-1),g4=e("code",null,"ServiceClassType",-1),m4=e("code",null,"context",-1),y4=e("code",null,"CommandTransformFunctionContext",-1),b4=e("code",null,"PayloadInput",-1),x4=e("code",null,"ParamsInput",-1),v4=e("code",null,"payload",-1),S4=e("code",null,"Readonly",-1),T4=e("code",null,"PayloadInput",-1),k4=e("code",null,"parameter",-1),C4=e("code",null,"Readonly",-1),P4=e("code",null,"ParamsInput",-1),w4=e("code",null,"Promise",-1),M4=e("code",null,"parameter",-1),I4=e("code",null,"Readonly",-1),E4=e("code",null,"ParamsOutput",-1),F4=e("code",null,"payload",-1),D4=e("code",null,"Readonly",-1),R4=e("code",null,"PayloadOutput",-1),B4=d('<h4 id="type-parameters-25" tabindex="-1"><a class="header-anchor" href="#type-parameters-25" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-27" tabindex="-1"><a class="header-anchor" href="#type-declaration-27" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><p>The command transform gets the raw message payload and parameter input, which is validated against the transform input schemas. The command transform function is called before guard hooks and before the actual command function.</p><p>It should throw HandledError or return an object with the transformed payload and parameter. The type of returned payload and parameter must match the command function input for payload and parameter</p><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5>',7),N4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),L4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),O4=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),A4={style:{"text-align":"left"}},H4=e("code",null,"CommandTransformFunctionContext",-1),j4=e("code",null,"PayloadInput",-1),G4=e("code",null,"ParamsInput",-1),q4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),V4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),z4=d('<h5 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-90" tabindex="-1"><a class="header-anchor" href="#defined-in-90" aria-hidden="true">#</a> Defined in</h4>',3),Z4={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformInputHook.ts#L12",target:"_blank",rel:"noopener noreferrer"},U4=e("hr",null,null,-1),Q4=e("h3",{id:"commandtransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformoutputhook","aria-hidden":"true"},"#"),t(" CommandTransformOutputHook")],-1),K4=e("strong",null,"CommandTransformOutputHook",-1),W4=e("code",null,"ServiceClassType",-1),$4=e("code",null,"MessagePayloadType",-1),Y4=e("code",null,"MessageResultType",-1),J4=e("code",null,"MessageParamsType",-1),X4=e("code",null,"ResponseOutput",-1),eS=e("code",null,"this",-1),tS=e("code",null,"ServiceClassType",-1),nS=e("code",null,"context",-1),oS=e("code",null,"CommandTransformFunctionContext",-1),sS=e("code",null,"MessagePayloadType",-1),lS=e("code",null,"MessageParamsType",-1),dS=e("code",null,"payload",-1),aS=e("code",null,"Readonly",-1),iS=e("code",null,"MessageResultType",-1),cS=e("code",null,"parameter",-1),rS=e("code",null,"Readonly",-1),uS=e("code",null,"MessageParamsType",-1),hS=e("code",null,"Promise",-1),_S=e("code",null,"ResponseOutput",-1),pS=d('<h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>MessageResultType</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-28" tabindex="-1"><a class="header-anchor" href="#type-declaration-28" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5>',6),fS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),gS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),mS=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),yS={style:{"text-align":"left"}},bS=e("code",null,"CommandTransformFunctionContext",-1),xS=e("code",null,"MessagePayloadType",-1),vS=e("code",null,"MessageParamsType",-1),SS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),TS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),kS=e("h5",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),CS=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),PS=e("h4",{id:"defined-in-91",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-91","aria-hidden":"true"},"#"),t(" Defined in")],-1),wS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformOutputHook.ts#L7",target:"_blank",rel:"noopener noreferrer"},MS=e("hr",null,null,-1),IS=e("h3",{id:"iscommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommand","aria-hidden":"true"},"#"),t(" isCommand")],-1),ES=e("p",null,[t("▸ "),e("strong",null,"isCommand"),t("("),e("code",null,"message"),t("): message is Object")],-1),FS=e("p",null,"Checks if given message is type of Command",-1),DS=e("h4",{id:"parameters-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-18","aria-hidden":"true"},"#"),t(" Parameters")],-1),RS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),BS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),NS={style:{"text-align":"left"}},LS=e("code",null,"EBMessage",-1),OS=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),AS=e("p",null,"message is Object",-1),HS=e("p",null,"boolean",-1),jS=e("h4",{id:"defined-in-92",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-92","aria-hidden":"true"},"#"),t(" Defined in")],-1),GS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommand.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},qS=d('<hr><h3 id="iscommanderrorresponse" tabindex="-1"><a class="header-anchor" href="#iscommanderrorresponse" aria-hidden="true">#</a> isCommandErrorResponse</h3><p>▸ <strong>isCommandErrorResponse</strong>(<code>message</code>): message is Object</p><p>Checks if given message is type of CommandErrorResponse</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4><p>message is Object</p><p>boolean</p><h4 id="defined-in-93" tabindex="-1"><a class="header-anchor" href="#defined-in-93" aria-hidden="true">#</a> Defined in</h4>',10),VS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},zS=e("hr",null,null,-1),ZS=e("h3",{id:"iscommandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandresponse","aria-hidden":"true"},"#"),t(" isCommandResponse")],-1),US=e("p",null,[t("▸ "),e("strong",null,"isCommandResponse"),t("("),e("code",null,"message"),t("): message is CommandResponse")],-1),QS=e("p",null,"Checks if given message is type of CommandResponse (success or error)",-1),KS=e("h4",{id:"parameters-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-20","aria-hidden":"true"},"#"),t(" Parameters")],-1),WS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),$S=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),YS={style:{"text-align":"left"}},JS=e("code",null,"EBMessage",-1),XS=e("h4",{id:"returns-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-20","aria-hidden":"true"},"#"),t(" Returns")],-1),eT=e("p",null,"message is CommandResponse",-1),tT=e("p",null,"boolean",-1),nT=e("h4",{id:"defined-in-94",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-94","aria-hidden":"true"},"#"),t(" Defined in")],-1),oT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},sT=e("hr",null,null,-1),lT=e("h3",{id:"iscommandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandsuccessresponse","aria-hidden":"true"},"#"),t(" isCommandSuccessResponse")],-1),dT=e("p",null,[t("▸ "),e("strong",null,"isCommandSuccessResponse"),t("("),e("code",null,"message"),t("): message is Object")],-1),aT=e("p",null,"Checks if given message is type of CommandSuccessResponse",-1),iT=e("h4",{id:"parameters-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-21","aria-hidden":"true"},"#"),t(" Parameters")],-1),cT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rT=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),uT={style:{"text-align":"left"}},hT=e("code",null,"EBMessage",-1),_T=e("h4",{id:"returns-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-21","aria-hidden":"true"},"#"),t(" Returns")],-1),pT=e("p",null,"message is Object",-1),fT=e("p",null,"boolean",-1),gT=e("h4",{id:"defined-in-95",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-95","aria-hidden":"true"},"#"),t(" Defined in")],-1),mT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandSuccessResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},yT=d(`<h2 id="event-bridge-1" tabindex="-1"><a class="header-anchor" href="#event-bridge-1" aria-hidden="true">#</a> Event bridge</h2><p>• <strong>DefaultEventBridge</strong>: <code>Object</code></p><p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-96" tabindex="-1"><a class="header-anchor" href="#defined-in-96" aria-hidden="true">#</a> Defined in</h4>`,6),bT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L61",target:"_blank",rel:"noopener noreferrer"},xT=d('<p>• <strong>EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The base class to be extended by event bridge implementations</p><h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-97" tabindex="-1"><a class="header-anchor" href="#defined-in-97" aria-hidden="true">#</a> Defined in</h4>',5),vT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L17",target:"_blank",rel:"noopener noreferrer"},ST=e("p",null,[t("• "),e("strong",null,"EventBridge"),t(": "),e("code",null,"Object")],-1),TT=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),kT=e("h4",{id:"defined-in-98",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-98","aria-hidden":"true"},"#"),t(" Defined in")],-1),CT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L19",target:"_blank",rel:"noopener noreferrer"},PT=e("h3",{id:"eventbridgeeventsbasic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeeventsbasic","aria-hidden":"true"},"#"),t(" EventBridgeEventsBasic")],-1),wT=e("p",null,[t("Ƭ "),e("strong",null,"EventBridgeEventsBasic"),t(": "),e("code",null,"Object")],-1),MT=e("p",null,"Events which can be emitted by a event bridge",-1),IT=e("h4",{id:"type-declaration-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-29","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ET=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),FT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when then connection to event bridge is established")],-1),DT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connection-error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown"),t(" | "),e("code",null,"Error")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge can not be established or a connection has issues or gets closed unexpectedly")],-1),RT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-disconnected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge closed")],-1),BT=e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-error")],-1),NT={style:{"text-align":"left"}},LT=e("code",null,"UnhandledError",-1),OT=e("code",null,"unknown",-1),AT=e("td",{style:{"text-align":"left"}},"emitted on internal event bridge error",-1),HT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-reconnecting")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted on retry to connect to event bridge")],-1),jT=e("h4",{id:"defined-in-99",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-99","aria-hidden":"true"},"#"),t(" Defined in")],-1),GT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L20",target:"_blank",rel:"noopener noreferrer"},qT=e("hr",null,null,-1),VT=e("h3",{id:"getcommandqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandqueuename","aria-hidden":"true"},"#"),t(" getCommandQueueName")],-1),zT=e("p",null,[t("▸ "),e("strong",null,"getCommandQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),ZT=e("h4",{id:"parameters-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-22","aria-hidden":"true"},"#"),t(" Parameters")],-1),UT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),QT=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),KT={style:{"text-align":"left"}},WT=e("code",null,"EBMessageAddress",-1),$T=e("h4",{id:"returns-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),t(" Returns")],-1),YT=e("p",null,[e("code",null,"string")],-1),JT=e("h4",{id:"defined-in-100",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-100","aria-hidden":"true"},"#"),t(" Defined in")],-1),XT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCommandQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},e5=d('<h2 id="helper-1" tabindex="-1"><a class="header-anchor" href="#helper-1" aria-hidden="true">#</a> Helper</h2><h3 id="converttocamelcase" tabindex="-1"><a class="header-anchor" href="#converttocamelcase" aria-hidden="true">#</a> convertToCamelCase</h3><p>▸ <strong>convertToCamelCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into camelCase</p><h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to camelCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-101" tabindex="-1"><a class="header-anchor" href="#defined-in-101" aria-hidden="true">#</a> Defined in</h4>',12),t5={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToCamelCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},n5=d('<hr><h3 id="converttokebabcase" tabindex="-1"><a class="header-anchor" href="#converttokebabcase" aria-hidden="true">#</a> convertToKebabCase</h3><p>▸ <strong>convertToKebabCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into kebab-case</p><h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to kebab-case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-102" tabindex="-1"><a class="header-anchor" href="#defined-in-102" aria-hidden="true">#</a> Defined in</h4>',12),o5={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToKebabCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},s5=d('<hr><h3 id="converttopascalcase" tabindex="-1"><a class="header-anchor" href="#converttopascalcase" aria-hidden="true">#</a> convertToPascalCase</h3><p>▸ <strong>convertToPascalCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into PascalCase</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to PascalCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-103" tabindex="-1"><a class="header-anchor" href="#defined-in-103" aria-hidden="true">#</a> Defined in</h4>',12),l5={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToPascalCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},d5=d('<hr><h3 id="converttosnakecase" tabindex="-1"><a class="header-anchor" href="#converttosnakecase" aria-hidden="true">#</a> convertToSnakeCase</h3><p>▸ <strong>convertToSnakeCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into snake_case</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to snake_case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-104" tabindex="-1"><a class="header-anchor" href="#defined-in-104" aria-hidden="true">#</a> Defined in</h4>',12),a5={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToSnakeCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},i5=e("hr",null,null,-1),c5=e("h3",{id:"createerrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createerrorresponse","aria-hidden":"true"},"#"),t(" createErrorResponse")],-1),r5=e("strong",null,"createErrorResponse",-1),u5=e("code",null,"instanceId",-1),h5=e("code",null,"originalEBMessage",-1),_5=e("code",null,"statusCode?",-1),p5=e("code",null,"error?",-1),f5=e("code",null,"Readonly",-1),g5=e("code",null,"Omit",-1),m5=e("code",null,"contentEncoding",-1),y5=e("code",null,'"utf-8"',-1),b5=e("code",null,"contentType",-1),x5=e("code",null,'"application/json"',-1),v5=e("code",null,"correlationId",-1),S5=e("code",null,"string",-1),T5=e("code",null,"eventName?",-1),k5=e("code",null,"string",-1),C5=e("code",null,"id",-1),P5=e("code",null,"string",-1),w5=e("code",null,"isHandledError",-1),M5=e("code",null,"boolean",-1),I5=e("code",null,"messageType",-1),E5=e("code",null,"CommandErrorResponse",-1),F5=e("code",null,"otp?",-1),D5=e("code",null,"string",-1),R5=e("code",null,"payload",-1),B5=e("code",null,"data?",-1),N5=e("code",null,"unknown",-1),L5=e("code",null,"message",-1),O5=e("code",null,"string",-1),A5=e("code",null,"status",-1),H5=e("code",null,"StatusCode",-1),j5=e("code",null,"principalId?",-1),G5=e("code",null,"string",-1),q5=e("code",null,"receiver",-1),V5=e("code",null,"sender",-1),z5=e("code",null,"tenantId?",-1),Z5=e("code",null,"string",-1),U5=e("code",null,"timestamp",-1),Q5=e("code",null,"number",-1),K5=e("code",null,"traceId?",-1),W5=e("code",null,"string",-1),$5=e("code",null,'"instanceId"',-1),Y5=e("p",null,"Creates a error response object based on original command Toggles sender and receiver",-1),J5=e("h4",{id:"parameters-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-27","aria-hidden":"true"},"#"),t(" Parameters")],-1),X5=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),ek=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),tk=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),nk={style:{"text-align":"left"}},ok=e("code",null,"Readonly",-1),sk=e("code",null,"contentEncoding",-1),lk=e("code",null,"string",-1),dk=e("code",null,"contentType",-1),ak=e("code",null,"string",-1),ik=e("code",null,"correlationId",-1),ck=e("code",null,"string",-1),rk=e("code",null,"eventName?",-1),uk=e("code",null,"string",-1),hk=e("code",null,"id",-1),_k=e("code",null,"string",-1),pk=e("code",null,"messageType",-1),fk=e("code",null,"Command",-1),gk=e("code",null,"otp?",-1),mk=e("code",null,"string",-1),yk=e("code",null,"payload",-1),bk=e("code",null,"parameter",-1),xk=e("code",null,"unknown",-1),vk=e("code",null,"payload",-1),Sk=e("code",null,"unknown",-1),Tk=e("code",null,"principalId?",-1),kk=e("code",null,"string",-1),Ck=e("code",null,"receiver",-1),Pk=e("code",null,"EBMessageAddress",-1),wk=e("code",null,"sender",-1),Mk=e("code",null,"tenantId?",-1),Ik=e("code",null,"string",-1),Ek=e("code",null,"timestamp",-1),Fk=e("code",null,"number",-1),Dk=e("code",null,"traceId?",-1),Rk=e("code",null,"string",-1),Bk=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),Nk=e("td",{style:{"text-align":"left"}},[e("code",null,"statusCode")],-1),Lk={style:{"text-align":"left"}},Ok=e("code",null,"StatusCode",-1),Ak=e("td",{style:{"text-align":"left"}},[e("code",null,"StatusCode.InternalServerError")],-1),Hk=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"error?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),jk=e("h4",{id:"returns-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-27","aria-hidden":"true"},"#"),t(" Returns")],-1),Gk=e("code",null,"Readonly",-1),qk=e("code",null,"Omit",-1),Vk=e("code",null,"contentEncoding",-1),zk=e("code",null,'"utf-8"',-1),Zk=e("code",null,"contentType",-1),Uk=e("code",null,'"application/json"',-1),Qk=e("code",null,"correlationId",-1),Kk=e("code",null,"string",-1),Wk=e("code",null,"eventName?",-1),$k=e("code",null,"string",-1),Yk=e("code",null,"id",-1),Jk=e("code",null,"string",-1),Xk=e("code",null,"isHandledError",-1),e9=e("code",null,"boolean",-1),t9=e("code",null,"messageType",-1),n9=e("code",null,"CommandErrorResponse",-1),o9=e("code",null,"otp?",-1),s9=e("code",null,"string",-1),l9=e("code",null,"payload",-1),d9=e("code",null,"data?",-1),a9=e("code",null,"unknown",-1),i9=e("code",null,"message",-1),c9=e("code",null,"string",-1),r9=e("code",null,"status",-1),u9=e("code",null,"StatusCode",-1),h9=e("code",null,"principalId?",-1),_9=e("code",null,"string",-1),p9=e("code",null,"receiver",-1),f9=e("code",null,"sender",-1),g9=e("code",null,"tenantId?",-1),m9=e("code",null,"string",-1),y9=e("code",null,"timestamp",-1),b9=e("code",null,"number",-1),x9=e("code",null,"traceId?",-1),v9=e("code",null,"string",-1),S9=e("code",null,'"instanceId"',-1),T9=e("p",null,"CommandErrorResponse message object",-1),k9=e("h4",{id:"defined-in-105",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-105","aria-hidden":"true"},"#"),t(" Defined in")],-1),C9={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createErrorResponse.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},P9=e("hr",null,null,-1),w9=e("h3",{id:"createinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createinfomessage","aria-hidden":"true"},"#"),t(" createInfoMessage")],-1),M9=e("strong",null,"createInfoMessage",-1),I9=e("code",null,"messageType",-1),E9=e("code",null,"sender",-1),F9=e("code",null,"additional?",-1),D9=e("code",null,"InfoMessage",-1),R9=e("h4",{id:"parameters-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-28","aria-hidden":"true"},"#"),t(" Parameters")],-1),B9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),N9=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),L9={style:{"text-align":"left"}},O9=e("code",null,"InfoMessageType",-1),A9=e("td",{style:{"text-align":"left"}},"-",-1),H9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),j9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"instance id of eventbridge")],-1),G9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),q9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),V9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),z9=e("td",{style:{"text-align":"left"}},[e("code",null,"additional?")],-1),Z9={style:{"text-align":"left"}},U9=e("code",null,"Partial",-1),Q9=e("code",null,"InfoMessage",-1),K9=e("td",{style:{"text-align":"left"}},"-",-1),W9=e("h4",{id:"returns-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-28","aria-hidden":"true"},"#"),t(" Returns")],-1),$9=e("code",null,"InfoMessage",-1),Y9=e("h4",{id:"defined-in-106",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-106","aria-hidden":"true"},"#"),t(" Defined in")],-1),J9={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createInfoMessage.impl.ts#L14",target:"_blank",rel:"noopener noreferrer"},X9=e("hr",null,null,-1),e6=e("h3",{id:"createsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createsuccessresponse","aria-hidden":"true"},"#"),t(" createSuccessResponse")],-1),t6=e("strong",null,"createSuccessResponse",-1),n6=e("code",null,"T",-1),o6=e("code",null,"instanceId",-1),s6=e("code",null,"originalEBMessage",-1),l6=e("code",null,"payload",-1),d6=e("code",null,"eventName?",-1),a6=e("code",null,"contentType?",-1),i6=e("code",null,"contentEncoding?",-1),c6=e("code",null,"Readonly",-1),r6=e("code",null,"contentEncoding",-1),u6=e("code",null,"string",-1),h6=e("code",null,"contentType",-1),_6=e("code",null,"string",-1),p6=e("code",null,"correlationId",-1),f6=e("code",null,"string",-1),g6=e("code",null,"eventName?",-1),m6=e("code",null,"string",-1),y6=e("code",null,"id",-1),b6=e("code",null,"string",-1),x6=e("code",null,"messageType",-1),v6=e("code",null,"CommandSuccessResponse",-1),S6=e("code",null,"otp?",-1),T6=e("code",null,"string",-1),k6=e("code",null,"payload",-1),C6=e("code",null,"T",-1),P6=e("code",null,"principalId?",-1),w6=e("code",null,"string",-1),M6=e("code",null,"receiver",-1),I6=e("code",null,"sender",-1),E6=e("code",null,"tenantId?",-1),F6=e("code",null,"string",-1),D6=e("code",null,"timestamp",-1),R6=e("code",null,"number",-1),B6=e("code",null,"traceId?",-1),N6=e("code",null,"string",-1),L6=d('<h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-29" tabindex="-1"><a class="header-anchor" href="#parameters-29" aria-hidden="true">#</a> Parameters</h4>',3),O6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),A6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),H6=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),j6={style:{"text-align":"left"}},G6=e("code",null,"Readonly",-1),q6=e("code",null,"contentEncoding",-1),V6=e("code",null,"string",-1),z6=e("code",null,"contentType",-1),Z6=e("code",null,"string",-1),U6=e("code",null,"correlationId",-1),Q6=e("code",null,"string",-1),K6=e("code",null,"eventName?",-1),W6=e("code",null,"string",-1),$6=e("code",null,"id",-1),Y6=e("code",null,"string",-1),J6=e("code",null,"messageType",-1),X6=e("code",null,"Command",-1),e0=e("code",null,"otp?",-1),t0=e("code",null,"string",-1),n0=e("code",null,"payload",-1),o0=e("code",null,"parameter",-1),s0=e("code",null,"unknown",-1),l0=e("code",null,"payload",-1),d0=e("code",null,"unknown",-1),a0=e("code",null,"principalId?",-1),i0=e("code",null,"string",-1),c0=e("code",null,"receiver",-1),r0=e("code",null,"EBMessageAddress",-1),u0=e("code",null,"sender",-1),h0=e("code",null,"tenantId?",-1),_0=e("code",null,"string",-1),p0=e("code",null,"timestamp",-1),f0=e("code",null,"number",-1),g0=e("code",null,"traceId?",-1),m0=e("code",null,"string",-1),y0=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),b0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"T")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),x0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),v0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),S0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),T0=e("h4",{id:"returns-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-29","aria-hidden":"true"},"#"),t(" Returns")],-1),k0=e("code",null,"Readonly",-1),C0=e("code",null,"contentEncoding",-1),P0=e("code",null,"string",-1),w0=e("code",null,"contentType",-1),M0=e("code",null,"string",-1),I0=e("code",null,"correlationId",-1),E0=e("code",null,"string",-1),F0=e("code",null,"eventName?",-1),D0=e("code",null,"string",-1),R0=e("code",null,"id",-1),B0=e("code",null,"string",-1),N0=e("code",null,"messageType",-1),L0=e("code",null,"CommandSuccessResponse",-1),O0=e("code",null,"otp?",-1),A0=e("code",null,"string",-1),H0=e("code",null,"payload",-1),j0=e("code",null,"T",-1),G0=e("code",null,"principalId?",-1),q0=e("code",null,"string",-1),V0=e("code",null,"receiver",-1),z0=e("code",null,"sender",-1),Z0=e("code",null,"tenantId?",-1),U0=e("code",null,"string",-1),Q0=e("code",null,"timestamp",-1),K0=e("code",null,"number",-1),W0=e("code",null,"traceId?",-1),$0=e("code",null,"string",-1),Y0=e("h4",{id:"defined-in-107",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-107","aria-hidden":"true"},"#"),t(" Defined in")],-1),J0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createSuccessResponse.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},X0=d('<hr><h3 id="deserializeotp" tabindex="-1"><a class="header-anchor" href="#deserializeotp" aria-hidden="true">#</a> deserializeOtp</h3><p>▸ <strong>deserializeOtp</strong>(<code>logger</code>, <code>otp?</code>): <code>undefined</code> | <code>Context</code></p><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a> Parameters</h4>',4),e7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),t7=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),n7={style:{"text-align":"left"}},o7=e("code",null,"Logger",-1),s7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),l7=e("h4",{id:"returns-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),t(" Returns")],-1),d7=e("p",null,[e("code",null,"undefined"),t(" | "),e("code",null,"Context")],-1),a7=e("h4",{id:"defined-in-108",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-108","aria-hidden":"true"},"#"),t(" Defined in")],-1),i7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L26",target:"_blank",rel:"noopener noreferrer"},c7=d('<hr><h3 id="getcleanedmessage" tabindex="-1"><a class="header-anchor" href="#getcleanedmessage" aria-hidden="true">#</a> getCleanedMessage</h3><p>▸ <strong>getCleanedMessage</strong>(<code>message</code>, <code>stripeOutContent?</code>): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><p>Helper function for logging. Returns a message object, where fields which might contain sensitive data, are overwritten with string values. For command messages, parameter and payload are overwritten with string values.</p><p>For command success responses, the response field is overwritten.</p><p>Command error responses are not changed.</p><h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a> Parameters</h4>',7),r7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),u7=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),h7={style:{"text-align":"left"}},_7=e("code",null,"Readonly",-1),p7=e("code",null,"EBMessage",-1),f7=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),g7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stripeOutContent")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[e("code",null,"!isDevelop()")])],-1),m7=e("h4",{id:"returns-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-31","aria-hidden":"true"},"#"),t(" Returns")],-1),y7=e("p",null,[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")],-1),b7=e("h4",{id:"defined-in-109",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-109","aria-hidden":"true"},"#"),t(" Defined in")],-1),x7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCleanedMessage.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},v7=e("hr",null,null,-1),S7=e("h3",{id:"geterrormessageforcode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#geterrormessageforcode","aria-hidden":"true"},"#"),t(" getErrorMessageForCode")],-1),T7=e("p",null,[t("▸ "),e("strong",null,"getErrorMessageForCode"),t("("),e("code",null,"code"),t("): "),e("code",null,"string")],-1),k7=e("h4",{id:"parameters-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-32","aria-hidden":"true"},"#"),t(" Parameters")],-1),C7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),P7=e("td",{style:{"text-align":"left"}},[e("code",null,"code")],-1),w7={style:{"text-align":"left"}},M7=e("code",null,"StatusCode",-1),I7=e("h4",{id:"returns-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),t(" Returns")],-1),E7=e("p",null,[e("code",null,"string")],-1),F7=e("h4",{id:"defined-in-110",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-110","aria-hidden":"true"},"#"),t(" Defined in")],-1),D7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getErrorMessageForCode.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},R7=d('<hr><h3 id="getnewcorrelationid" tabindex="-1"><a class="header-anchor" href="#getnewcorrelationid" aria-hidden="true">#</a> getNewCorrelationId</h3><p>▸ <strong>getNewCorrelationId</strong>(): <code>string</code></p><p>Create a new unique event bridge correlation id</p><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-111" tabindex="-1"><a class="header-anchor" href="#defined-in-111" aria-hidden="true">#</a> Defined in</h4>',8),B7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewCorrelationId.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},N7=d('<hr><h3 id="getnewebmessageid" tabindex="-1"><a class="header-anchor" href="#getnewebmessageid" aria-hidden="true">#</a> getNewEBMessageId</h3><p>▸ <strong>getNewEBMessageId</strong>(): <code>string</code></p><p>Create a new unique event bridge message id</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-112" tabindex="-1"><a class="header-anchor" href="#defined-in-112" aria-hidden="true">#</a> Defined in</h4>',8),L7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewEBMessageId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},O7=d('<hr><h3 id="getnewinstanceid" tabindex="-1"><a class="header-anchor" href="#getnewinstanceid" aria-hidden="true">#</a> getNewInstanceId</h3><p>▸ <strong>getNewInstanceId</strong>(): <code>string</code></p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-113" tabindex="-1"><a class="header-anchor" href="#defined-in-113" aria-hidden="true">#</a> Defined in</h4>',6),A7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewInstanceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},H7=d('<hr><h3 id="getnewtraceid" tabindex="-1"><a class="header-anchor" href="#getnewtraceid" aria-hidden="true">#</a> getNewTraceId</h3><p>▸ <strong>getNewTraceId</strong>(): <code>string</code></p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-114" tabindex="-1"><a class="header-anchor" href="#defined-in-114" aria-hidden="true">#</a> Defined in</h4>',6),j7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewTraceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},G7=e("hr",null,null,-1),q7=e("h3",{id:"getsubscriptionqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsubscriptionqueuename","aria-hidden":"true"},"#"),t(" getSubscriptionQueueName")],-1),V7=e("p",null,[t("▸ "),e("strong",null,"getSubscriptionQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),z7=e("h4",{id:"parameters-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-33","aria-hidden":"true"},"#"),t(" Parameters")],-1),Z7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),U7=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Q7={style:{"text-align":"left"}},K7=e("code",null,"EBMessageAddress",-1),W7=e("h4",{id:"returns-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-37","aria-hidden":"true"},"#"),t(" Returns")],-1),$7=e("p",null,[e("code",null,"string")],-1),Y7=e("h4",{id:"defined-in-115",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-115","aria-hidden":"true"},"#"),t(" Defined in")],-1),J7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getSubscriptionQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},X7=d('<hr><h3 id="getuniqueid" tabindex="-1"><a class="header-anchor" href="#getuniqueid" aria-hidden="true">#</a> getUniqueId</h3><p>▸ <strong>getUniqueId</strong>(): <code>string</code></p><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-116" tabindex="-1"><a class="header-anchor" href="#defined-in-116" aria-hidden="true">#</a> Defined in</h4>',6),e8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getUniqueId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},t8=d('<hr><h3 id="gracefulshutdown" tabindex="-1"><a class="header-anchor" href="#gracefulshutdown" aria-hidden="true">#</a> gracefulShutdown</h3><p>▸ <strong>gracefulShutdown</strong>(<code>logger</code>, <code>list</code>, <code>timeoutMs?</code>): <code>void</code></p><p>Helps to gracefully shut down your application. Provide in list objects. The objects contains a name and a promise function which should be executed.</p><p>The execution of array list functions is done sequential.</p><h4 id="parameters-34" tabindex="-1"><a class="header-anchor" href="#parameters-34" aria-hidden="true">#</a> Parameters</h4>',6),n8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value"),e("th",{style:{"text-align":"left"}},"Description")])],-1),o8=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),s8={style:{"text-align":"left"}},l8=e("code",null,"Logger",-1),d8=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),a8=e("td",{style:{"text-align":"left"}},"the logger object",-1),i8=e("td",{style:{"text-align":"left"}},[e("code",null,"list")],-1),c8={style:{"text-align":"left"}},r8=e("code",null,"ShutdownEntry",-1),u8=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),h8=e("td",{style:{"text-align":"left"}},"a object containing name and function",-1),_8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timeoutMs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"30000")]),e("td",{style:{"text-align":"left"}},"in ms to shut")],-1),p8=d(`<h4 id="returns-39" tabindex="-1"><a class="header-anchor" href="#returns-39" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> shutDownList <span class="token operator">=</span> <span class="token punctuation">[</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceA<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceB<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
   name<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
   fn<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token function">gracefulShutdown</span><span class="token punctuation">(</span>logger<span class="token punctuation">,</span> shutDownList<span class="token punctuation">)</span>

<span class="token comment">// will shutdown ServiceA, then ServiceB, then the event bridge</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Default</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token number">30000</span> milliseconds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-117" tabindex="-1"><a class="header-anchor" href="#defined-in-117" aria-hidden="true">#</a> Defined in</h4>`,7),f8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/gracefulShutdown.impl.ts#L36",target:"_blank",rel:"noopener noreferrer"},g8=d('<hr><h3 id="isdevelop" tabindex="-1"><a class="header-anchor" href="#isdevelop" aria-hidden="true">#</a> isDevelop</h3><p>▸ <strong>isDevelop</strong>(): <code>boolean</code></p><p>returns true if NODE_ENV is set to value starting with &quot;develop&quot;</p><h4 id="returns-40" tabindex="-1"><a class="header-anchor" href="#returns-40" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-118" tabindex="-1"><a class="header-anchor" href="#defined-in-118" aria-hidden="true">#</a> Defined in</h4>',7),m8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/isDevelop.impl.ts#L6",target:"_blank",rel:"noopener noreferrer"},y8=d('<hr><h3 id="serializeotp" tabindex="-1"><a class="header-anchor" href="#serializeotp" aria-hidden="true">#</a> serializeOtp</h3><p>▸ <strong>serializeOtp</strong>(): <code>string</code></p><h4 id="returns-41" tabindex="-1"><a class="header-anchor" href="#returns-41" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-119" tabindex="-1"><a class="header-anchor" href="#defined-in-119" aria-hidden="true">#</a> Defined in</h4>',6),b8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},x8=e("h2",{id:"service-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service-1","aria-hidden":"true"},"#"),t(" Service")],-1),v8=e("p",null,[t("• "),e("strong",null,"ServiceEventsNames"),t(": "),e("code",null,"Object")],-1),S8=e("p",null,[t("Events which can be emitted by a service. Internal events are prefixed with "),e("code",null,"service-")],-1),T8=e("h4",{id:"defined-in-120",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-120","aria-hidden":"true"},"#"),t(" Defined in")],-1),k8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L11",target:"_blank",rel:"noopener noreferrer"},C8=d(`<p>• <strong>Service</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for all services. This class provides base functions to work with the event bridge, logging and so on</p><p>Every service should extend this class and should not directly access the eventbridge or other service</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>

  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// your custom implementation</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// your custom implementation</span>
   <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-121" tabindex="-1"><a class="header-anchor" href="#defined-in-121" aria-hidden="true">#</a> Defined in</h4>`,7),P8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/Service.impl.ts#L76",target:"_blank",rel:"noopener noreferrer"},w8=d('<p>• <strong>ServiceBuilder</strong>&lt;<code>ConfigType</code>, <code>ConfigInputType</code>, <code>ServiceClassType</code>&gt;: <code>Object</code></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4>',3),M8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),I8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),E8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigInputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),F8=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),D8={style:{"text-align":"left"}},R8=e("code",null,"ServiceClass",-1),B8=e("code",null,"Service",-1),N8=e("code",null,"ConfigType",-1),L8=e("h4",{id:"defined-in-122",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-122","aria-hidden":"true"},"#"),t(" Defined in")],-1),O8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L38",target:"_blank",rel:"noopener noreferrer"},A8=d('<p>• <strong>ServiceClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The ServiceClass interface</p><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-123" tabindex="-1"><a class="header-anchor" href="#defined-in-123" aria-hidden="true">#</a> Defined in</h4>',5),H8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L11",target:"_blank",rel:"noopener noreferrer"},j8=d('<h3 id="serviceconstructorinput" tabindex="-1"><a class="header-anchor" href="#serviceconstructorinput" aria-hidden="true">#</a> ServiceConstructorInput</h3><p>Ƭ <strong>ServiceConstructorInput</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-30" tabindex="-1"><a class="header-anchor" href="#type-declaration-30" aria-hidden="true">#</a> Type declaration</h4>',5),G8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),q8=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinitionList")],-1),V8={style:{"text-align":"left"}},z8=e("code",null,"CommandDefinitionList",-1),Z8=e("code",null,"any",-1),U8=e("td",{style:{"text-align":"left"}},"The list of command definitions for this service",-1),Q8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},"The service specific config")],-1),K8=e("td",{style:{"text-align":"left"}},[e("code",null,"configStore?")],-1),W8={style:{"text-align":"left"}},$8=e("code",null,"ConfigStore",-1),Y8=e("td",{style:{"text-align":"left"}},"The config store instance",-1),J8=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridge")],-1),X8={style:{"text-align":"left"}},eC=e("code",null,"EventBridge",-1),tC=e("td",{style:{"text-align":"left"}},"The eventBridge instance",-1),nC=e("td",{style:{"text-align":"left"}},[e("code",null,"info")],-1),oC={style:{"text-align":"left"}},sC=e("code",null,"ServiceInfoType",-1),lC=e("td",{style:{"text-align":"left"}},"The service info with name, version and description of service",-1),dC=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),aC={style:{"text-align":"left"}},iC=e("code",null,"Logger",-1),cC=e("td",{style:{"text-align":"left"}},"A logger instance",-1),rC=e("td",{style:{"text-align":"left"}},[e("code",null,"secretStore?")],-1),uC={style:{"text-align":"left"}},hC=e("code",null,"SecretStore",-1),_C=e("td",{style:{"text-align":"left"}},"The secret store instance",-1),pC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"The opentelemetry span processor instance")],-1),fC=e("td",{style:{"text-align":"left"}},[e("code",null,"stateStore?")],-1),gC={style:{"text-align":"left"}},mC=e("code",null,"StateStore",-1),yC=e("td",{style:{"text-align":"left"}},"the state store instance",-1),bC=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinitionList")],-1),xC={style:{"text-align":"left"}},vC=e("code",null,"SubscriptionDefinitionList",-1),SC=e("code",null,"any",-1),TC=e("td",{style:{"text-align":"left"}},"The list of subscription definitions for this service",-1),kC=e("h4",{id:"defined-in-124",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-124","aria-hidden":"true"},"#"),t(" Defined in")],-1),CC={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceConstructorInput.ts#L15",target:"_blank",rel:"noopener noreferrer"},PC=d('<hr><h3 id="serviceeventsinternal" tabindex="-1"><a class="header-anchor" href="#serviceeventsinternal" aria-hidden="true">#</a> ServiceEventsInternal</h3><p>Ƭ <strong>ServiceEventsInternal</strong>: <code>Object</code></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h4 id="type-declaration-31" tabindex="-1"><a class="header-anchor" href="#type-declaration-31" aria-hidden="true">#</a> Type declaration</h4>',6),wC=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),MC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default")],-1),IC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-drain")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is going to be stopped")],-1),EC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error")],-1),FC={style:{"text-align":"left"}},DC=e("code",null,"commandName",-1),RC=e("code",null,"string",-1),BC=e("code",null,"error",-1),NC=e("code",null,"HandledError",-1),LC=e("code",null,"traceId",-1),OC=e("code",null,"TraceId",-1),AC=e("td",{style:{"text-align":"left"}},"emitted when a command throws a HandledError",-1),HC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),jC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.error")],-1),GC={style:{"text-align":"left"}},qC=e("code",null,"HandledError",-1),VC=e("td",{style:{"text-align":"left"}},"-",-1),zC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.traceId")],-1),ZC={style:{"text-align":"left"}},UC=e("code",null,"TraceId",-1),QC=e("td",{style:{"text-align":"left"}},"-",-1),KC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error")],-1),WC={style:{"text-align":"left"}},$C=e("code",null,"error",-1),YC=e("code",null,"HandledError",-1),JC=e("code",null,"subscriptionName",-1),XC=e("code",null,"string",-1),eP=e("code",null,"traceId",-1),tP=e("code",null,"TraceId",-1),nP=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws a HandledError",-1),oP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.error")],-1),sP={style:{"text-align":"left"}},lP=e("code",null,"HandledError",-1),dP=e("td",{style:{"text-align":"left"}},"-",-1),aP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),iP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.traceId")],-1),cP={style:{"text-align":"left"}},rP=e("code",null,"TraceId",-1),uP=e("td",{style:{"text-align":"left"}},"-",-1),hP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-not-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"emitted when the service is not available (for example database connection could not be established)")],-1),_P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-started")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is started, but not fully initialized and not ready yet")],-1),pP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-stopped")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service has been stopped")],-1),fP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error")],-1),gP={style:{"text-align":"left"}},mP=e("code",null,"commandName",-1),yP=e("code",null,"string",-1),bP=e("code",null,"error",-1),xP=e("code",null,"unknown",-1),vP=e("code",null,"traceId",-1),SP=e("code",null,"TraceId",-1),TP=e("td",{style:{"text-align":"left"}},"emitted when a command throws an error other than a HandledError",-1),kP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),CP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),PP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.traceId")],-1),wP={style:{"text-align":"left"}},MP=e("code",null,"TraceId",-1),IP=e("td",{style:{"text-align":"left"}},"-",-1),EP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error")],-1),FP={style:{"text-align":"left"}},DP=e("code",null,"error",-1),RP=e("code",null,"unknown",-1),BP=e("code",null,"subscriptionName",-1),NP=e("code",null,"string",-1),LP=e("code",null,"traceId",-1),OP=e("code",null,"TraceId",-1),AP=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws an error other than a HandledError",-1),HP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),jP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),GP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.traceId")],-1),qP={style:{"text-align":"left"}},VP=e("code",null,"TraceId",-1),zP=e("td",{style:{"text-align":"left"}},"-",-1),ZP=e("h4",{id:"defined-in-125",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-125","aria-hidden":"true"},"#"),t(" Defined in")],-1),UP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L54",target:"_blank",rel:"noopener noreferrer"},QP=d('<h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>ConfigStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store adapters</p><h4 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-126" tabindex="-1"><a class="header-anchor" href="#defined-in-126" aria-hidden="true">#</a> Defined in</h4>',6),KP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},WP=d(`<p>• <strong>DefaultConfigStore</strong>: <code>Object</code></p><p>The DefaultConfigStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   config<span class="token operator">:</span> <span class="token punctuation">{</span>
     initialValue<span class="token operator">:</span> <span class="token string">&#39;initial&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;initialValue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// outputs: { initialValue: &#39;initial&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-127" tabindex="-1"><a class="header-anchor" href="#defined-in-127" aria-hidden="true">#</a> Defined in</h4>`,6),$P={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/DefaultConfigStore.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},YP=d(`<p>• <strong>DefaultSecretStore</strong>: <code>Object</code></p><p>The DefaultSecretStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 config<span class="token operator">:</span> <span class="token punctuation">{</span>
   secretOne<span class="token operator">:</span> <span class="token string">&#39;my_secret_one_value&#39;</span><span class="token punctuation">,</span>
   secretTwo<span class="token operator">:</span> <span class="token string">&#39;my_secret_two_value&#39;</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;secretOne&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secretTwo) // outputs: { secretOne: my_secret_one_value, secretTwo: &#39;</span>my_secret_two_value&#39; <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Per default, setting/changing and removal of values are disabled. You can enable it on instance creation:</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-128" tabindex="-1"><a class="header-anchor" href="#defined-in-128" aria-hidden="true">#</a> Defined in</h4>`,9),JP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/DefaultSecretStore.impl.ts#L33",target:"_blank",rel:"noopener noreferrer"},XP=e("p",null,[t("• "),e("strong",null,"DefaultStateStore"),t(": "),e("code",null,"Object")],-1),ew=e("p",null,[t("The DefaultStateStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status "),e("code",null,"Not implemented")],-1),tw=e("h4",{id:"defined-in-129",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-129","aria-hidden":"true"},"#"),t(" Defined in")],-1),nw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/DefaultStateStore.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},ow=d('<p>• <strong>SecretStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for secret store adapters</p><h4 id="type-parameters-34" tabindex="-1"><a class="header-anchor" href="#type-parameters-34" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-130" tabindex="-1"><a class="header-anchor" href="#defined-in-130" aria-hidden="true">#</a> Defined in</h4>',5),sw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/SecretStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},lw=d('<p>• <strong>StateStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store implementations</p><h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-131" tabindex="-1"><a class="header-anchor" href="#defined-in-131" aria-hidden="true">#</a> Defined in</h4>',5),dw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/StateStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},aw=e("p",null,[t("• "),e("strong",null,"ConfigStore"),t(": "),e("code",null,"Object")],-1),iw=e("p",null,"Interface definition for config store adapters",-1),cw=e("h4",{id:"defined-in-132",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-132","aria-hidden":"true"},"#"),t(" Defined in")],-1),rw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},uw=e("p",null,[t("• "),e("strong",null,"SecretStore"),t(": "),e("code",null,"Object")],-1),hw=e("p",null,"Interface definition for a secret store implementation",-1),_w=e("h4",{id:"defined-in-133",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-133","aria-hidden":"true"},"#"),t(" Defined in")],-1),pw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretStore.ts#L9",target:"_blank",rel:"noopener noreferrer"},fw=e("p",null,[t("• "),e("strong",null,"StateStore"),t(": "),e("code",null,"Object")],-1),gw=e("p",null,"Interface definition for state store implementations",-1),mw=e("h4",{id:"defined-in-134",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-134","aria-hidden":"true"},"#"),t(" Defined in")],-1),yw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},bw=d('<h3 id="configdeletefunction" tabindex="-1"><a class="header-anchor" href="#configdeletefunction" aria-hidden="true">#</a> ConfigDeleteFunction</h3><p>Ƭ <strong>ConfigDeleteFunction</strong>: (<code>configName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-32" tabindex="-1"><a class="header-anchor" href="#type-declaration-32" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a config value from the config store</p><h5 id="parameters-35" tabindex="-1"><a class="header-anchor" href="#parameters-35" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-42" tabindex="-1"><a class="header-anchor" href="#returns-42" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-135" tabindex="-1"><a class="header-anchor" href="#defined-in-135" aria-hidden="true">#</a> Defined in</h4>',10),xw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},vw=d('<hr><h3 id="configgetterfunction" tabindex="-1"><a class="header-anchor" href="#configgetterfunction" aria-hidden="true">#</a> ConfigGetterFunction</h3><p>Ƭ <strong>ConfigGetterFunction</strong>: (...<code>configNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-33" tabindex="-1"><a class="header-anchor" href="#type-declaration-33" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...configNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a config value from the config store</p><h5 id="parameters-36" tabindex="-1"><a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-136" tabindex="-1"><a class="header-anchor" href="#defined-in-136" aria-hidden="true">#</a> Defined in</h4>',11),Sw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Tw=d('<hr><h3 id="configsetterfunction" tabindex="-1"><a class="header-anchor" href="#configsetterfunction" aria-hidden="true">#</a> ConfigSetterFunction</h3><p>Ƭ <strong>ConfigSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-34" tabindex="-1"><a class="header-anchor" href="#type-declaration-34" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a config value in the config store</p><h5 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-137" tabindex="-1"><a class="header-anchor" href="#defined-in-137" aria-hidden="true">#</a> Defined in</h4>',11),kw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Cw=d('<hr><h3 id="secretdeletefunction" tabindex="-1"><a class="header-anchor" href="#secretdeletefunction" aria-hidden="true">#</a> SecretDeleteFunction</h3><p>Ƭ <strong>SecretDeleteFunction</strong>: (<code>secretName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-35" tabindex="-1"><a class="header-anchor" href="#type-declaration-35" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a secret from the secret store</p><h5 id="parameters-38" tabindex="-1"><a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-138" tabindex="-1"><a class="header-anchor" href="#defined-in-138" aria-hidden="true">#</a> Defined in</h4>',11),Pw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},ww=d('<hr><h3 id="secretgetterfunction" tabindex="-1"><a class="header-anchor" href="#secretgetterfunction" aria-hidden="true">#</a> SecretGetterFunction</h3><p>Ƭ <strong>SecretGetterFunction</strong>: (...<code>secretName</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-36" tabindex="-1"><a class="header-anchor" href="#type-declaration-36" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...secretName</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><p>get a secret from the secret store</p><h5 id="parameters-39" tabindex="-1"><a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretName</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-139" tabindex="-1"><a class="header-anchor" href="#defined-in-139" aria-hidden="true">#</a> Defined in</h4>',11),Mw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Iw=d('<hr><h3 id="secretsetterfunction" tabindex="-1"><a class="header-anchor" href="#secretsetterfunction" aria-hidden="true">#</a> SecretSetterFunction</h3><p>Ƭ <strong>SecretSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-37" tabindex="-1"><a class="header-anchor" href="#type-declaration-37" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a secret in the secret store</p><h5 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-140" tabindex="-1"><a class="header-anchor" href="#defined-in-140" aria-hidden="true">#</a> Defined in</h4>',11),Ew={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Fw=d('<hr><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-38" tabindex="-1"><a class="header-anchor" href="#type-declaration-38" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters-41" tabindex="-1"><a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-141" tabindex="-1"><a class="header-anchor" href="#defined-in-141" aria-hidden="true">#</a> Defined in</h4>',11),Dw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Rw=d('<hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-39" tabindex="-1"><a class="header-anchor" href="#type-declaration-39" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-42" tabindex="-1"><a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-142" tabindex="-1"><a class="header-anchor" href="#defined-in-142" aria-hidden="true">#</a> Defined in</h4>',11),Bw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Nw=d('<hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-40" tabindex="-1"><a class="header-anchor" href="#type-declaration-40" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-43" tabindex="-1"><a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-143" tabindex="-1"><a class="header-anchor" href="#defined-in-143" aria-hidden="true">#</a> Defined in</h4>',11),Lw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Ow=d('<h2 id="subscription-1" tabindex="-1"><a class="header-anchor" href="#subscription-1" aria-hidden="true">#</a> Subscription</h2><p>• <strong>SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.</p><p>A working schema definition needs at least a subscription name, a short description and the subscription implementation.</p><h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4>',5),Aw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Hw=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),jw={style:{"text-align":"left"}},Gw=e("code",null,"ServiceClass",-1),qw=e("code",null,"ServiceClass",-1),Vw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),zw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Zw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),Uw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Qw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Kw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),Ww=e("h4",{id:"defined-in-144",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-144","aria-hidden":"true"},"#"),t(" Defined in")],-1),$w={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},Yw=d('<h3 id="subscription-2" tabindex="-1"><a class="header-anchor" href="#subscription-2" aria-hidden="true">#</a> Subscription</h3><p>Ƭ <strong>Subscription</strong>&lt;<code>PayloadType</code>, <code>ParameterType</code>&gt;: <code>Object</code></p><p>A subscription managed by the event bridge</p><h4 id="type-parameters-37" tabindex="-1"><a class="header-anchor" href="#type-parameters-37" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-41" tabindex="-1"><a class="header-anchor" href="#type-declaration-41" aria-hidden="true">#</a> Type declaration</h4>',6),Jw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Xw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to be used for custom message if the subscriptions returns a result")],-1),eM=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),tM={style:{"text-align":"left"}},nM=e("code",null,"DefinitionEventBridgeConfig",-1),oM=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),sM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to subscribe for")],-1),lM=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),dM={style:{"text-align":"left"}},aM=e("code",null,"EBMessageType",-1),iM=e("td",{style:{"text-align":"left"}},"the message type",-1),cM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"parameter?"),t(": "),e("code",null,"ParameterType"),t(" ; "),e("code",null,"payload?"),t(": "),e("code",null,"PayloadType"),t(" }")]),e("td",{style:{"text-align":"left"}},"the message payload")],-1),rM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")]),e("td",{style:{"text-align":"left"}},"-")],-1),uM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),hM=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),_M={style:{"text-align":"left"}},pM=e("code",null,"PrincipalId",-1),fM=e("td",{style:{"text-align":"left"}},"the principal id",-1),gM=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),mM={style:{"text-align":"left"}},yM=e("code",null,"instanceId?",-1),bM=e("code",null,"InstanceId",-1),xM=e("code",null,"serviceName?",-1),vM=e("code",null,"string",-1),SM=e("code",null,"serviceTarget?",-1),TM=e("code",null,"string",-1),kM=e("code",null,"serviceVersion?",-1),CM=e("code",null,"string",-1),PM=e("td",{style:{"text-align":"left"}},"the consumer address of the message",-1),wM=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),MM={style:{"text-align":"left"}},IM=e("code",null,"InstanceId",-1),EM=e("td",{style:{"text-align":"left"}},"-",-1),FM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),DM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),RM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),BM=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),NM={style:{"text-align":"left"}},LM=e("code",null,"instanceId?",-1),OM=e("code",null,"InstanceId",-1),AM=e("code",null,"serviceName?",-1),HM=e("code",null,"string",-1),jM=e("code",null,"serviceTarget?",-1),GM=e("code",null,"string",-1),qM=e("code",null,"serviceVersion?",-1),VM=e("code",null,"string",-1),zM=e("td",{style:{"text-align":"left"}},"the producer address of the message",-1),ZM=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),UM={style:{"text-align":"left"}},QM=e("code",null,"InstanceId",-1),KM=e("td",{style:{"text-align":"left"}},"-",-1),WM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),$M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),YM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),JM=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriber")],-1),XM={style:{"text-align":"left"}},eI=e("code",null,"EBMessageAddress",-1),tI=e("td",{style:{"text-align":"left"}},"the address of the subscription (service name, version and subscription name)",-1),nI=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),oI={style:{"text-align":"left"}},sI=e("code",null,"TenantId",-1),lI=e("td",{style:{"text-align":"left"}},"the tenant id",-1),dI=e("h4",{id:"defined-in-145",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-145","aria-hidden":"true"},"#"),t(" Defined in")],-1),aI={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/Subscription.ts#L13",target:"_blank",rel:"noopener noreferrer"},iI=e("hr",null,null,-1),cI=e("h3",{id:"subscriptionafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionafterguardhook","aria-hidden":"true"},"#"),t(" SubscriptionAfterGuardHook")],-1),rI=e("strong",null,"SubscriptionAfterGuardHook",-1),uI=e("code",null,"ServiceClassType",-1),hI=e("code",null,"FunctionResultType",-1),_I=e("code",null,"FunctionPayloadOutputType",-1),pI=e("code",null,"FunctionParameterType",-1),fI=e("code",null,"this",-1),gI=e("code",null,"ServiceClassType",-1),mI=e("code",null,"context",-1),yI=e("code",null,"SubscriptionFunctionContext",-1),bI=e("code",null,"result",-1),xI=e("code",null,"Readonly",-1),vI=e("code",null,"FunctionResultType",-1),SI=e("code",null,"payload",-1),TI=e("code",null,"Readonly",-1),kI=e("code",null,"FunctionPayloadOutputType",-1),CI=e("code",null,"parameter",-1),PI=e("code",null,"Readonly",-1),wI=e("code",null,"FunctionParameterType",-1),MI=e("code",null,"Promise",-1),II=e("code",null,"void",-1),EI=e("h4",{id:"type-parameters-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-38","aria-hidden":"true"},"#"),t(" Type parameters")],-1),FI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),DI=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),RI={style:{"text-align":"left"}},BI=e("code",null,"ServiceClass",-1),NI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),LI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadOutputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),OI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParameterType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),AI=d('<h4 id="type-declaration-42" tabindex="-1"><a class="header-anchor" href="#type-declaration-42" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-44" tabindex="-1"><a class="header-anchor" href="#parameters-44" aria-hidden="true">#</a> Parameters</h5>',4),HI=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),jI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),GI=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),qI={style:{"text-align":"left"}},VI=e("code",null,"SubscriptionFunctionContext",-1),zI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),ZI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadOutputType"),t(">")])],-1),UI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParameterType"),t(">")])],-1),QI=e("h5",{id:"returns-51",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-51","aria-hidden":"true"},"#"),t(" Returns")],-1),KI=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),WI=e("h4",{id:"defined-in-146",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-146","aria-hidden":"true"},"#"),t(" Defined in")],-1),$I={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},YI=e("hr",null,null,-1),JI=e("h3",{id:"subscriptionbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionbeforeguardhook","aria-hidden":"true"},"#"),t(" SubscriptionBeforeGuardHook")],-1),XI=e("strong",null,"SubscriptionBeforeGuardHook",-1),eE=e("code",null,"ServiceClassType",-1),tE=e("code",null,"FunctionPayloadType",-1),nE=e("code",null,"FunctionParamsType",-1),oE=e("code",null,"this",-1),sE=e("code",null,"ServiceClassType",-1),lE=e("code",null,"context",-1),dE=e("code",null,"SubscriptionFunctionContext",-1),aE=e("code",null,"payload",-1),iE=e("code",null,"Readonly",-1),cE=e("code",null,"FunctionPayloadType",-1),rE=e("code",null,"parameter",-1),uE=e("code",null,"Readonly",-1),hE=e("code",null,"FunctionParamsType",-1),_E=e("code",null,"Promise",-1),pE=e("code",null,"void",-1),fE=e("h4",{id:"type-parameters-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-39","aria-hidden":"true"},"#"),t(" Type parameters")],-1),gE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),mE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),yE={style:{"text-align":"left"}},bE=e("code",null,"ServiceClass",-1),xE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),vE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),SE=d('<h4 id="type-declaration-43" tabindex="-1"><a class="header-anchor" href="#type-declaration-43" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-45" tabindex="-1"><a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a> Parameters</h5>',4),TE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),CE=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),PE={style:{"text-align":"left"}},wE=e("code",null,"SubscriptionFunctionContext",-1),ME=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),IE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),EE=e("h5",{id:"returns-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-52","aria-hidden":"true"},"#"),t(" Returns")],-1),FE=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),DE=e("h4",{id:"defined-in-147",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-147","aria-hidden":"true"},"#"),t(" Defined in")],-1),RE={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},BE=d('<hr><h3 id="subscriptiondefinition" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinition" aria-hidden="true">#</a> SubscriptionDefinition</h3><p>Ƭ <strong>SubscriptionDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a subscription provided by some service.</p><h4 id="type-parameters-40" tabindex="-1"><a class="header-anchor" href="#type-parameters-40" aria-hidden="true">#</a> Type parameters</h4>',5),NE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),LE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),OE={style:{"text-align":"left"}},AE=e("code",null,"ServiceClass",-1),HE=e("code",null,"ServiceClass",-1),jE=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),GE={style:{"text-align":"left"}},qE=e("code",null,"SubscriptionDefinitionMetadataBase",-1),VE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),zE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),ZE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),UE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),QE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),KE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),WE=e("h4",{id:"type-declaration-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-44","aria-hidden":"true"},"#"),t(" Type declaration")],-1),$E=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),YE=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),JE={style:{"text-align":"left"}},XE=e("code",null,"SubscriptionFunction",-1),eF=e("code",null,"ServiceClassType",-1),tF=e("code",null,"MessagePayloadType",-1),nF=e("code",null,"MessageParamsType",-1),oF=e("code",null,"FunctionPayloadType",-1),sF=e("code",null,"FunctionParamsType",-1),lF=e("code",null,"FunctionResultType",-1),dF=e("td",{style:{"text-align":"left"}},"the subscription function",-1),aF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name to be used for custom message if the subscription functions returns value")],-1),iF=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),cF={style:{"text-align":"left"}},rF=e("code",null,"DefinitionEventBridgeConfig",-1),uF=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),hF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"filter forevent name")],-1),_F=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),pF={style:{"text-align":"left"}},fF=e("code",null,"afterGuard?",-1),gF=e("code",null,"Record",-1),mF=e("code",null,"string",-1),yF=e("code",null,"SubscriptionAfterGuardHook",-1),bF=e("code",null,"ServiceClassType",-1),xF=e("code",null,"FunctionResultType",-1),vF=e("code",null,"FunctionPayloadType",-1),SF=e("code",null,"FunctionParamsType",-1),TF=e("code",null,"beforeGuard?",-1),kF=e("code",null,"Record",-1),CF=e("code",null,"string",-1),PF=e("code",null,"SubscriptionBeforeGuardHook",-1),wF=e("code",null,"ServiceClassType",-1),MF=e("code",null,"FunctionPayloadType",-1),IF=e("code",null,"FunctionParamsType",-1),EF=e("code",null,"transformInput?",-1),FF=e("code",null,"transformFunction",-1),DF=e("code",null,"SubscriptionTransformInputHook",-1),RF=e("code",null,"ServiceClassType",-1),BF=e("code",null,"MessagePayloadType",-1),NF=e("code",null,"MessageParamsType",-1),LF=e("code",null,"transformInputSchema",-1),OF=e("code",null,"z.ZodType",-1),AF=e("code",null,"transformParameterSchema",-1),HF=e("code",null,"z.ZodType",-1),jF=e("code",null,"transformOutput?",-1),GF=e("code",null,"transformFunction",-1),qF=e("code",null,"SubscriptionTransformOutputHook",-1),VF=e("code",null,"ServiceClassType",-1),zF=e("code",null,"FunctionResultType",-1),ZF=e("code",null,"FunctionParamsType",-1),UF=e("code",null,"any",-1),QF=e("code",null,"transformOutputSchema",-1),KF=e("code",null,"z.ZodType",-1),WF=e("td",{style:{"text-align":"left"}},"hooks of subscription",-1),$F=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),YF={style:{"text-align":"left"}},JF=e("code",null,"Record",-1),XF=e("code",null,"string",-1),eD=e("code",null,"SubscriptionAfterGuardHook",-1),tD=e("code",null,"ServiceClassType",-1),nD=e("code",null,"FunctionResultType",-1),oD=e("code",null,"FunctionPayloadType",-1),sD=e("code",null,"FunctionParamsType",-1),lD=e("td",{style:{"text-align":"left"}},"-",-1),dD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),aD={style:{"text-align":"left"}},iD=e("code",null,"Record",-1),cD=e("code",null,"string",-1),rD=e("code",null,"SubscriptionBeforeGuardHook",-1),uD=e("code",null,"ServiceClassType",-1),hD=e("code",null,"FunctionPayloadType",-1),_D=e("code",null,"FunctionParamsType",-1),pD=e("td",{style:{"text-align":"left"}},"-",-1),fD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),gD={style:{"text-align":"left"}},mD=e("code",null,"transformFunction",-1),yD=e("code",null,"SubscriptionTransformInputHook",-1),bD=e("code",null,"ServiceClassType",-1),xD=e("code",null,"MessagePayloadType",-1),vD=e("code",null,"MessageParamsType",-1),SD=e("code",null,"transformInputSchema",-1),TD=e("code",null,"z.ZodType",-1),kD=e("code",null,"transformParameterSchema",-1),CD=e("code",null,"z.ZodType",-1),PD=e("td",{style:{"text-align":"left"}},"-",-1),wD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),MD={style:{"text-align":"left"}},ID=e("code",null,"SubscriptionTransformInputHook",-1),ED=e("code",null,"ServiceClassType",-1),FD=e("code",null,"MessagePayloadType",-1),DD=e("code",null,"MessageParamsType",-1),RD=e("td",{style:{"text-align":"left"}},"-",-1),BD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),ND=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),LD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),OD={style:{"text-align":"left"}},AD=e("code",null,"transformFunction",-1),HD=e("code",null,"SubscriptionTransformOutputHook",-1),jD=e("code",null,"ServiceClassType",-1),GD=e("code",null,"FunctionResultType",-1),qD=e("code",null,"FunctionParamsType",-1),VD=e("code",null,"any",-1),zD=e("code",null,"transformOutputSchema",-1),ZD=e("code",null,"z.ZodType",-1),UD=e("td",{style:{"text-align":"left"}},"-",-1),QD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),KD={style:{"text-align":"left"}},WD=e("code",null,"SubscriptionTransformOutputHook",-1),$D=e("code",null,"ServiceClassType",-1),YD=e("code",null,"FunctionResultType",-1),JD=e("code",null,"FunctionParamsType",-1),XD=e("code",null,"any",-1),eR=e("td",{style:{"text-align":"left"}},"-",-1),tR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),nR=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),oR={style:{"text-align":"left"}},sR=e("code",null,"EBMessageType",-1),lR=e("td",{style:{"text-align":"left"}},"filter for message type",-1),dR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the subscription")],-1),aR=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),iR={style:{"text-align":"left"}},cR=e("code",null,"PrincipalId",-1),rR=e("td",{style:{"text-align":"left"}},"filter for principal id",-1),uR=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),hR={style:{"text-align":"left"}},_R=e("code",null,"instanceId?",-1),pR=e("code",null,"InstanceId",-1),fR=e("code",null,"serviceName?",-1),gR=e("code",null,"string",-1),mR=e("code",null,"serviceTarget?",-1),yR=e("code",null,"string",-1),bR=e("code",null,"serviceVersion?",-1),xR=e("code",null,"string",-1),vR=e("td",{style:{"text-align":"left"}},"filter for messages consumed by given receiver",-1),SR=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),TR={style:{"text-align":"left"}},kR=e("code",null,"InstanceId",-1),CR=e("td",{style:{"text-align":"left"}},"-",-1),PR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),wR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),MR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),IR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),ER={style:{"text-align":"left"}},FR=e("code",null,"instanceId?",-1),DR=e("code",null,"InstanceId",-1),RR=e("code",null,"serviceName?",-1),BR=e("code",null,"string",-1),NR=e("code",null,"serviceTarget?",-1),LR=e("code",null,"string",-1),OR=e("code",null,"serviceVersion?",-1),AR=e("code",null,"string",-1),HR=e("td",{style:{"text-align":"left"}},"filter for messages produced by given sender",-1),jR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),GR={style:{"text-align":"left"}},qR=e("code",null,"InstanceId",-1),VR=e("td",{style:{"text-align":"left"}},"-",-1),zR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),ZR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),UR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),QR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the subscription")],-1),KR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the subscription")],-1),WR=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),$R={style:{"text-align":"left"}},YR=e("code",null,"TenantId",-1),JR=e("td",{style:{"text-align":"left"}},"filter for tenant id",-1),XR=e("h4",{id:"defined-in-148",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-148","aria-hidden":"true"},"#"),t(" Defined in")],-1),eB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinition.ts#L21",target:"_blank",rel:"noopener noreferrer"},tB=e("hr",null,null,-1),nB=e("h3",{id:"subscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunction","aria-hidden":"true"},"#"),t(" SubscriptionFunction")],-1),oB=e("strong",null,"SubscriptionFunction",-1),sB=e("code",null,"ServiceClassType",-1),lB=e("code",null,"MessagePayloadType",-1),dB=e("code",null,"MessageParamsType",-1),aB=e("code",null,"FunctionPayloadType",-1),iB=e("code",null,"FunctionParamsType",-1),cB=e("code",null,"FunctionResultType",-1),rB=e("code",null,"this",-1),uB=e("code",null,"ServiceClassType",-1),hB=e("code",null,"context",-1),_B=e("code",null,"SubscriptionFunctionContext",-1),pB=e("code",null,"payload",-1),fB=e("code",null,"Readonly",-1),gB=e("code",null,"FunctionPayloadType",-1),mB=e("code",null,"parameter",-1),yB=e("code",null,"Readonly",-1),bB=e("code",null,"FunctionParamsType",-1),xB=e("code",null,"Promise",-1),vB=e("code",null,"FunctionResultType",-1),SB=e("h4",{id:"type-parameters-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-41","aria-hidden":"true"},"#"),t(" Type parameters")],-1),TB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kB=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),CB={style:{"text-align":"left"}},PB=e("code",null,"ServiceClass",-1),wB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),MB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),IB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),EB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),FB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),DB=d('<h4 id="type-declaration-45" tabindex="-1"><a class="header-anchor" href="#type-declaration-45" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-46" tabindex="-1"><a class="header-anchor" href="#parameters-46" aria-hidden="true">#</a> Parameters</h5>',4),RB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),BB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),NB=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),LB={style:{"text-align":"left"}},OB=e("code",null,"SubscriptionFunctionContext",-1),AB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),HB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),jB=e("h5",{id:"returns-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-53","aria-hidden":"true"},"#"),t(" Returns")],-1),GB=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),qB=e("h4",{id:"defined-in-149",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-149","aria-hidden":"true"},"#"),t(" Defined in")],-1),VB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunction.ts#L8",target:"_blank",rel:"noopener noreferrer"},zB=e("hr",null,null,-1),ZB=e("h3",{id:"subscriptionfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionFunctionContext")],-1),UB=e("strong",null,"SubscriptionFunctionContext",-1),QB=e("code",null,"Prettify",-1),KB=e("code",null,"ContextBase",-1),WB=e("code",null,"SubscriptionFunctionContextEnhancements",-1),$B=e("p",null,"The subscription function context which will be passed into subscription function.",-1),YB=e("h4",{id:"defined-in-150",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-150","aria-hidden":"true"},"#"),t(" Defined in")],-1),JB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},XB=d('<hr><h3 id="subscriptionfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontextenhancements" aria-hidden="true">#</a> SubscriptionFunctionContextEnhancements</h3><p>Ƭ <strong>SubscriptionFunctionContextEnhancements</strong>: <code>Object</code></p><p>It provides the original command message. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-declaration-46" tabindex="-1"><a class="header-anchor" href="#type-declaration-46" aria-hidden="true">#</a> Type declaration</h4>',6),eN=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),tN=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),nN={style:{"text-align":"left"}},oN=e("code",null,"EmitCustomMessageFunction",-1),sN=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),lN=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),dN={style:{"text-align":"left"}},aN=e("code",null,"InvokeFunction",-1),iN=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),cN=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),rN={style:{"text-align":"left"}},uN=e("code",null,"Readonly",-1),hN=e("code",null,"EBMessage",-1),_N=e("td",{style:{"text-align":"left"}},"the original message",-1),pN=e("h4",{id:"defined-in-151",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-151","aria-hidden":"true"},"#"),t(" Defined in")],-1),fN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},gN=e("hr",null,null,-1),mN=e("h3",{id:"subscriptiontransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionTransformFunctionContext")],-1),yN=e("strong",null,"SubscriptionTransformFunctionContext",-1),bN=e("code",null,"Prettify",-1),xN=e("code",null,"ContextBase",-1),vN=e("code",null,"message",-1),SN=e("code",null,"Readonly",-1),TN=e("code",null,"EBMessage",-1),kN=e("h4",{id:"defined-in-152",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-152","aria-hidden":"true"},"#"),t(" Defined in")],-1),CN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},PN=e("hr",null,null,-1),wN=e("h3",{id:"subscriptiontransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransforminputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformInputHook")],-1),MN=e("strong",null,"SubscriptionTransformInputHook",-1),IN=e("code",null,"ServiceClassType",-1),EN=e("code",null,"PayloadOutput",-1),FN=e("code",null,"ParamsOutput",-1),DN=e("code",null,"PayloadInput",-1),RN=e("code",null,"ParamsInput",-1),BN=e("code",null,"this",-1),NN=e("code",null,"ServiceClassType",-1),LN=e("code",null,"context",-1),ON=e("code",null,"SubscriptionTransformFunctionContext",-1),AN=e("code",null,"payload",-1),HN=e("code",null,"Readonly",-1),jN=e("code",null,"PayloadInput",-1),GN=e("code",null,"parameter",-1),qN=e("code",null,"Readonly",-1),VN=e("code",null,"ParamsInput",-1),zN=e("code",null,"Promise",-1),ZN=e("code",null,"parameter",-1),UN=e("code",null,"Readonly",-1),QN=e("code",null,"ParamsOutput",-1),KN=e("code",null,"payload",-1),WN=e("code",null,"Readonly",-1),$N=e("code",null,"PayloadOutput",-1),YN=d('<h4 id="type-parameters-42" tabindex="-1"><a class="header-anchor" href="#type-parameters-42" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-47" tabindex="-1"><a class="header-anchor" href="#type-declaration-47" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h5 id="parameters-47" tabindex="-1"><a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a> Parameters</h5>',5),JN=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),XN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),eL=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),tL={style:{"text-align":"left"}},nL=e("code",null,"SubscriptionTransformFunctionContext",-1),oL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),sL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),lL=d('<h5 id="returns-54" tabindex="-1"><a class="header-anchor" href="#returns-54" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-153" tabindex="-1"><a class="header-anchor" href="#defined-in-153" aria-hidden="true">#</a> Defined in</h4>',3),dL={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformInputHook.ts#L6",target:"_blank",rel:"noopener noreferrer"},aL=e("hr",null,null,-1),iL=e("h3",{id:"subscriptiontransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformoutputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformOutputHook")],-1),cL=e("strong",null,"SubscriptionTransformOutputHook",-1),rL=e("code",null,"ServiceClassType",-1),uL=e("code",null,"MessageResultType",-1),hL=e("code",null,"MessageParamsType",-1),_L=e("code",null,"ResponseOutput",-1),pL=e("code",null,"this",-1),fL=e("code",null,"ServiceClassType",-1),gL=e("code",null,"context",-1),mL=e("code",null,"SubscriptionTransformFunctionContext",-1),yL=e("code",null,"payload",-1),bL=e("code",null,"Readonly",-1),xL=e("code",null,"MessageResultType",-1),vL=e("code",null,"parameter",-1),SL=e("code",null,"Readonly",-1),TL=e("code",null,"MessageParamsType",-1),kL=e("code",null,"Promise",-1),CL=e("code",null,"ResponseOutput",-1),PL=d('<h4 id="type-parameters-43" tabindex="-1"><a class="header-anchor" href="#type-parameters-43" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-48" tabindex="-1"><a class="header-anchor" href="#type-declaration-48" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-48" tabindex="-1"><a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a> Parameters</h5>',6),wL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ML=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),IL=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),EL={style:{"text-align":"left"}},FL=e("code",null,"SubscriptionTransformFunctionContext",-1),DL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),RL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),BL=e("h5",{id:"returns-55",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-55","aria-hidden":"true"},"#"),t(" Returns")],-1),NL=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),LL=e("h4",{id:"defined-in-154",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-154","aria-hidden":"true"},"#"),t(" Defined in")],-1),OL={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformOutputHook.ts#L8",target:"_blank",rel:"noopener noreferrer"},AL=d('<h2 id="unit-test-helper-1" tabindex="-1"><a class="header-anchor" href="#unit-test-helper-1" aria-hidden="true">#</a> Unit test helper</h2><h3 id="getcommandcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandcontextmock" aria-hidden="true">#</a> getCommandContextMock</h3><p>▸ <strong>getCommandContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command function context</p><h4 id="type-parameters-44" tabindex="-1"><a class="header-anchor" href="#type-parameters-44" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-49" tabindex="-1"><a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-56" tabindex="-1"><a class="header-anchor" href="#returns-56" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),HL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),jL=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),GL={style:{"text-align":"left"}},qL=e("code",null,"configs",-1),VL=e("code",null,"getConfig",-1),zL=e("code",null,"ConfigGetterFunction",-1),ZL=e("code",null,"removeConfig",-1),UL=e("code",null,"ConfigDeleteFunction",-1),QL=e("code",null,"setConfig",-1),KL=e("code",null,"ConfigSetterFunction",-1),WL=e("code",null,"emit",-1),$L=e("code",null,"EmitCustomMessageFunction",-1),YL=e("code",null,"invoke",-1),JL=e("code",null,"InvokeFunction",-1),XL=e("code",null,"logger",-1),eO=e("code",null,"Logger",-1),tO=e("code",null,"message",-1),nO=e("code",null,"Readonly",-1),oO=e("code",null,"secrets",-1),sO=e("code",null,"getSecret",-1),lO=e("code",null,"SecretGetterFunction",-1),dO=e("code",null,"removeSecret",-1),aO=e("code",null,"SecretDeleteFunction",-1),iO=e("code",null,"setSecret",-1),cO=e("code",null,"SecretSetterFunction",-1),rO=e("code",null,"startActiveSpan",-1),uO=e("code",null,"name",-1),hO=e("code",null,"string",-1),_O=e("code",null,"opts",-1),pO=e("code",null,"SpanOptions",-1),fO=e("code",null,"context",-1),gO=e("code",null,"undefined",-1),mO=e("code",null,"Context",-1),yO=e("code",null,"fn",-1),bO=e("code",null,"span",-1),xO=e("code",null,"Span",-1),vO=e("code",null,"Promise",-1),SO=e("code",null,"F",-1),TO=e("code",null,"Promise",-1),kO=e("code",null,"F",-1),CO=e("code",null,"states",-1),PO=e("code",null,"getState",-1),wO=e("code",null,"StateGetterFunction",-1),MO=e("code",null,"removeState",-1),IO=e("code",null,"StateDeleteFunction",-1),EO=e("code",null,"setState",-1),FO=e("code",null,"StateSetterFunction",-1),DO=e("code",null,"wrapInSpan",-1),RO=e("code",null,"name",-1),BO=e("code",null,"string",-1),NO=e("code",null,"opts",-1),LO=e("code",null,"SpanOptions",-1),OO=e("code",null,"fn",-1),AO=e("code",null,"span",-1),HO=e("code",null,"Span",-1),jO=e("code",null,"Promise",-1),GO=e("code",null,"F",-1),qO=e("code",null,"context?",-1),VO=e("code",null,"Context",-1),zO=e("code",null,"Promise",-1),ZO=e("code",null,"F",-1),UO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),QO={style:{"text-align":"left"}},KO=e("code",null,"getConfig",-1),WO=e("code",null,"ConfigGetterFunction",-1),$O=e("code",null,"removeConfig",-1),YO=e("code",null,"ConfigDeleteFunction",-1),JO=e("code",null,"setConfig",-1),XO=e("code",null,"ConfigSetterFunction",-1),eA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),tA={style:{"text-align":"left"}},nA=e("code",null,"ConfigGetterFunction",-1),oA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),sA={style:{"text-align":"left"}},lA=e("code",null,"ConfigDeleteFunction",-1),dA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),aA={style:{"text-align":"left"}},iA=e("code",null,"ConfigSetterFunction",-1),cA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),rA={style:{"text-align":"left"}},uA=e("code",null,"EmitCustomMessageFunction",-1),hA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),_A={style:{"text-align":"left"}},pA=e("code",null,"InvokeFunction",-1),fA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),gA={style:{"text-align":"left"}},mA=e("code",null,"Logger",-1),yA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }>")])],-1),bA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),xA={style:{"text-align":"left"}},vA=e("code",null,"getSecret",-1),SA=e("code",null,"SecretGetterFunction",-1),TA=e("code",null,"removeSecret",-1),kA=e("code",null,"SecretDeleteFunction",-1),CA=e("code",null,"setSecret",-1),PA=e("code",null,"SecretSetterFunction",-1),wA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),MA={style:{"text-align":"left"}},IA=e("code",null,"SecretGetterFunction",-1),EA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),FA={style:{"text-align":"left"}},DA=e("code",null,"SecretDeleteFunction",-1),RA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),BA={style:{"text-align":"left"}},NA=e("code",null,"SecretSetterFunction",-1),LA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),OA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),AA={style:{"text-align":"left"}},HA=e("code",null,"getState",-1),jA=e("code",null,"StateGetterFunction",-1),GA=e("code",null,"removeState",-1),qA=e("code",null,"StateDeleteFunction",-1),VA=e("code",null,"setState",-1),zA=e("code",null,"StateSetterFunction",-1),ZA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),UA={style:{"text-align":"left"}},QA=e("code",null,"StateGetterFunction",-1),KA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),WA={style:{"text-align":"left"}},$A=e("code",null,"StateDeleteFunction",-1),YA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),JA={style:{"text-align":"left"}},XA=e("code",null,"StateSetterFunction",-1),eH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),tH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),nH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),oH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),sH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),lH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),dH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),aH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),iH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),cH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),rH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),uH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),hH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),_H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),pH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),fH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),gH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),mH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),yH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),bH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),xH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),vH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),SH=e("h4",{id:"defined-in-155",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-155","aria-hidden":"true"},"#"),t(" Defined in")],-1),TH={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},kH=e("hr",null,null,-1),CH=e("h3",{id:"getcommanderrormessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommanderrormessagemock","aria-hidden":"true"},"#"),t(" getCommandErrorMessageMock")],-1),PH=e("strong",null,"getCommandErrorMessageMock",-1),wH=e("code",null,"error?",-1),MH=e("code",null,"input?",-1),IH=e("code",null,"commandMessage?",-1),EH=e("code",null,"Readonly",-1),FH=e("code",null,"contentEncoding",-1),DH=e("code",null,'"utf-8"',-1),RH=e("code",null,"contentType",-1),BH=e("code",null,'"application/json"',-1),NH=e("code",null,"correlationId",-1),LH=e("code",null,"string",-1),OH=e("code",null,"eventName?",-1),AH=e("code",null,"string",-1),HH=e("code",null,"id",-1),jH=e("code",null,"string",-1),GH=e("code",null,"isHandledError",-1),qH=e("code",null,"boolean",-1),VH=e("code",null,"messageType",-1),zH=e("code",null,"CommandErrorResponse",-1),ZH=e("code",null,"otp?",-1),UH=e("code",null,"string",-1),QH=e("code",null,"payload",-1),KH=e("code",null,"data?",-1),WH=e("code",null,"unknown",-1),$H=e("code",null,"message",-1),YH=e("code",null,"string",-1),JH=e("code",null,"status",-1),XH=e("code",null,"StatusCode",-1),ej=e("code",null,"principalId?",-1),tj=e("code",null,"string",-1),nj=e("code",null,"receiver",-1),oj=e("code",null,"sender",-1),sj=e("code",null,"tenantId?",-1),lj=e("code",null,"string",-1),dj=e("code",null,"timestamp",-1),aj=e("code",null,"number",-1),ij=e("code",null,"traceId?",-1),cj=e("code",null,"string",-1),rj=e("p",null,"A function that returns a mocked command error response message",-1),uj=e("h4",{id:"parameters-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-50","aria-hidden":"true"},"#"),t(" Parameters")],-1),hj=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),_j=e("td",{style:{"text-align":"left"}},[e("code",null,"error?")],-1),pj={style:{"text-align":"left"}},fj=e("code",null,"HandledError",-1),gj=e("code",null,"UnhandledError",-1),mj=e("td",{style:{"text-align":"left"}},"-",-1),yj=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),bj={style:{"text-align":"left"}},xj=e("code",null,"Partial",-1),vj=e("code",null,"contentEncoding",-1),Sj=e("code",null,'"utf-8"',-1),Tj=e("code",null,"contentType",-1),kj=e("code",null,'"application/json"',-1),Cj=e("code",null,"correlationId",-1),Pj=e("code",null,"string",-1),wj=e("code",null,"eventName?",-1),Mj=e("code",null,"string",-1),Ij=e("code",null,"id",-1),Ej=e("code",null,"string",-1),Fj=e("code",null,"isHandledError",-1),Dj=e("code",null,"boolean",-1),Rj=e("code",null,"messageType",-1),Bj=e("code",null,"CommandErrorResponse",-1),Nj=e("code",null,"otp?",-1),Lj=e("code",null,"string",-1),Oj=e("code",null,"payload",-1),Aj=e("code",null,"data?",-1),Hj=e("code",null,"unknown",-1),jj=e("code",null,"message",-1),Gj=e("code",null,"string",-1),qj=e("code",null,"status",-1),Vj=e("code",null,"StatusCode",-1),zj=e("code",null,"principalId?",-1),Zj=e("code",null,"string",-1),Uj=e("code",null,"receiver",-1),Qj=e("code",null,"sender",-1),Kj=e("code",null,"tenantId?",-1),Wj=e("code",null,"string",-1),$j=e("code",null,"timestamp",-1),Yj=e("code",null,"number",-1),Jj=e("code",null,"traceId?",-1),Xj=e("code",null,"string",-1),eG=e("td",{style:{"text-align":"left"}},"-",-1),tG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),nG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),oG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),sG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),lG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),dG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),aG=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),iG={style:{"text-align":"left"}},cG=e("code",null,"Command",-1),rG=e("td",{style:{"text-align":"left"}},"-",-1),uG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),hG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),_G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),pG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),fG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),gG=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),mG={style:{"text-align":"left"}},yG=e("code",null,"EBMessageAddress",-1),bG=e("td",{style:{"text-align":"left"}},"-",-1),xG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),vG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.tenantId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),SG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),TG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),kG=e("h4",{id:"returns-57",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-57","aria-hidden":"true"},"#"),t(" Returns")],-1),CG=e("code",null,"Readonly",-1),PG=e("code",null,"contentEncoding",-1),wG=e("code",null,'"utf-8"',-1),MG=e("code",null,"contentType",-1),IG=e("code",null,'"application/json"',-1),EG=e("code",null,"correlationId",-1),FG=e("code",null,"string",-1),DG=e("code",null,"eventName?",-1),RG=e("code",null,"string",-1),BG=e("code",null,"id",-1),NG=e("code",null,"string",-1),LG=e("code",null,"isHandledError",-1),OG=e("code",null,"boolean",-1),AG=e("code",null,"messageType",-1),HG=e("code",null,"CommandErrorResponse",-1),jG=e("code",null,"otp?",-1),GG=e("code",null,"string",-1),qG=e("code",null,"payload",-1),VG=e("code",null,"data?",-1),zG=e("code",null,"unknown",-1),ZG=e("code",null,"message",-1),UG=e("code",null,"string",-1),QG=e("code",null,"status",-1),KG=e("code",null,"StatusCode",-1),WG=e("code",null,"principalId?",-1),$G=e("code",null,"string",-1),YG=e("code",null,"receiver",-1),JG=e("code",null,"sender",-1),XG=e("code",null,"tenantId?",-1),eq=e("code",null,"string",-1),tq=e("code",null,"timestamp",-1),nq=e("code",null,"number",-1),oq=e("code",null,"traceId?",-1),sq=e("code",null,"string",-1),lq=e("h4",{id:"defined-in-156",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-156","aria-hidden":"true"},"#"),t(" Defined in")],-1),dq={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandErrorMessage.mock.ts#L16",target:"_blank",rel:"noopener noreferrer"},aq=e("hr",null,null,-1),iq=e("h3",{id:"getcommandmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandmessagemock","aria-hidden":"true"},"#"),t(" getCommandMessageMock")],-1),cq=e("strong",null,"getCommandMessageMock",-1),rq=e("code",null,"Payload",-1),uq=e("code",null,"Parameter",-1),hq=e("code",null,"input?",-1),_q=e("code",null,"Readonly",-1),pq=e("code",null,"contentEncoding",-1),fq=e("code",null,"string",-1),gq=e("code",null,"contentType",-1),mq=e("code",null,"string",-1),yq=e("code",null,"correlationId",-1),bq=e("code",null,"string",-1),xq=e("code",null,"eventName?",-1),vq=e("code",null,"string",-1),Sq=e("code",null,"id",-1),Tq=e("code",null,"string",-1),kq=e("code",null,"messageType",-1),Cq=e("code",null,"Command",-1),Pq=e("code",null,"otp?",-1),wq=e("code",null,"string",-1),Mq=e("code",null,"payload",-1),Iq=e("code",null,"parameter",-1),Eq=e("code",null,"Parameter",-1),Fq=e("code",null,"payload",-1),Dq=e("code",null,"Payload",-1),Rq=e("code",null,"principalId?",-1),Bq=e("code",null,"string",-1),Nq=e("code",null,"receiver",-1),Lq=e("code",null,"EBMessageAddress",-1),Oq=e("code",null,"sender",-1),Aq=e("code",null,"tenantId?",-1),Hq=e("code",null,"string",-1),jq=e("code",null,"timestamp",-1),Gq=e("code",null,"number",-1),qq=e("code",null,"traceId?",-1),Vq=e("code",null,"string",-1),zq=d('<p>A function that returns a mocked command message.</p><h4 id="type-parameters-45" tabindex="-1"><a class="header-anchor" href="#type-parameters-45" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>Parameter</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-51" tabindex="-1"><a class="header-anchor" href="#parameters-51" aria-hidden="true">#</a> Parameters</h4>',4),Zq=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Uq=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),Qq={style:{"text-align":"left"}},Kq=e("code",null,"Partial",-1),Wq=e("code",null,"contentEncoding",-1),$q=e("code",null,"string",-1),Yq=e("code",null,"contentType",-1),Jq=e("code",null,"string",-1),Xq=e("code",null,"correlationId",-1),eV=e("code",null,"string",-1),tV=e("code",null,"eventName?",-1),nV=e("code",null,"string",-1),oV=e("code",null,"id",-1),sV=e("code",null,"string",-1),lV=e("code",null,"messageType",-1),dV=e("code",null,"Command",-1),aV=e("code",null,"otp?",-1),iV=e("code",null,"string",-1),cV=e("code",null,"payload",-1),rV=e("code",null,"parameter",-1),uV=e("code",null,"Parameter",-1),hV=e("code",null,"payload",-1),_V=e("code",null,"Payload",-1),pV=e("code",null,"principalId?",-1),fV=e("code",null,"string",-1),gV=e("code",null,"receiver",-1),mV=e("code",null,"EBMessageAddress",-1),yV=e("code",null,"sender",-1),bV=e("code",null,"tenantId?",-1),xV=e("code",null,"string",-1),vV=e("code",null,"timestamp",-1),SV=e("code",null,"number",-1),TV=e("code",null,"traceId?",-1),kV=e("code",null,"string",-1),CV=e("code",null,"payload?",-1),PV=e("code",null,"parameter?",-1),wV=e("code",null,"Parameter",-1),MV=e("code",null,"payload?",-1),IV=e("code",null,"Payload",-1),EV=e("h4",{id:"returns-58",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-58","aria-hidden":"true"},"#"),t(" Returns")],-1),FV=e("code",null,"Readonly",-1),DV=e("code",null,"contentEncoding",-1),RV=e("code",null,"string",-1),BV=e("code",null,"contentType",-1),NV=e("code",null,"string",-1),LV=e("code",null,"correlationId",-1),OV=e("code",null,"string",-1),AV=e("code",null,"eventName?",-1),HV=e("code",null,"string",-1),jV=e("code",null,"id",-1),GV=e("code",null,"string",-1),qV=e("code",null,"messageType",-1),VV=e("code",null,"Command",-1),zV=e("code",null,"otp?",-1),ZV=e("code",null,"string",-1),UV=e("code",null,"payload",-1),QV=e("code",null,"parameter",-1),KV=e("code",null,"Parameter",-1),WV=e("code",null,"payload",-1),$V=e("code",null,"Payload",-1),YV=e("code",null,"principalId?",-1),JV=e("code",null,"string",-1),XV=e("code",null,"receiver",-1),ez=e("code",null,"EBMessageAddress",-1),tz=e("code",null,"sender",-1),nz=e("code",null,"tenantId?",-1),oz=e("code",null,"string",-1),sz=e("code",null,"timestamp",-1),lz=e("code",null,"number",-1),dz=e("code",null,"traceId?",-1),az=e("code",null,"string",-1),iz=e("h4",{id:"defined-in-157",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-157","aria-hidden":"true"},"#"),t(" Defined in")],-1),cz={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},rz=e("hr",null,null,-1),uz=e("h3",{id:"getcommandsuccessmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandsuccessmessagemock","aria-hidden":"true"},"#"),t(" getCommandSuccessMessageMock")],-1),hz=e("strong",null,"getCommandSuccessMessageMock",-1),_z=e("code",null,"PayloadType",-1),pz=e("code",null,"payload",-1),fz=e("code",null,"input?",-1),gz=e("code",null,"commandMessage?",-1),mz=e("code",null,"Readonly",-1),yz=e("code",null,"contentEncoding",-1),bz=e("code",null,"string",-1),xz=e("code",null,"contentType",-1),vz=e("code",null,"string",-1),Sz=e("code",null,"correlationId",-1),Tz=e("code",null,"string",-1),kz=e("code",null,"eventName?",-1),Cz=e("code",null,"string",-1),Pz=e("code",null,"id",-1),wz=e("code",null,"string",-1),Mz=e("code",null,"messageType",-1),Iz=e("code",null,"CommandSuccessResponse",-1),Ez=e("code",null,"otp?",-1),Fz=e("code",null,"string",-1),Dz=e("code",null,"payload",-1),Rz=e("code",null,"PayloadType",-1),Bz=e("code",null,"principalId?",-1),Nz=e("code",null,"string",-1),Lz=e("code",null,"receiver",-1),Oz=e("code",null,"sender",-1),Az=e("code",null,"tenantId?",-1),Hz=e("code",null,"string",-1),jz=e("code",null,"timestamp",-1),Gz=e("code",null,"number",-1),qz=e("code",null,"traceId?",-1),Vz=e("code",null,"string",-1),zz=d('<p>A function that returns a mocked command success response message.</p><h4 id="type-parameters-46" tabindex="-1"><a class="header-anchor" href="#type-parameters-46" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-52" tabindex="-1"><a class="header-anchor" href="#parameters-52" aria-hidden="true">#</a> Parameters</h4>',4),Zz=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Uz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Qz=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),Kz={style:{"text-align":"left"}},Wz=e("code",null,"Partial",-1),$z=e("code",null,"contentEncoding",-1),Yz=e("code",null,"string",-1),Jz=e("code",null,"contentType",-1),Xz=e("code",null,"string",-1),eZ=e("code",null,"correlationId",-1),tZ=e("code",null,"string",-1),nZ=e("code",null,"eventName?",-1),oZ=e("code",null,"string",-1),sZ=e("code",null,"id",-1),lZ=e("code",null,"string",-1),dZ=e("code",null,"messageType",-1),aZ=e("code",null,"CommandSuccessResponse",-1),iZ=e("code",null,"otp?",-1),cZ=e("code",null,"string",-1),rZ=e("code",null,"payload",-1),uZ=e("code",null,"PayloadType",-1),hZ=e("code",null,"principalId?",-1),_Z=e("code",null,"string",-1),pZ=e("code",null,"receiver",-1),fZ=e("code",null,"sender",-1),gZ=e("code",null,"tenantId?",-1),mZ=e("code",null,"string",-1),yZ=e("code",null,"timestamp",-1),bZ=e("code",null,"number",-1),xZ=e("code",null,"traceId?",-1),vZ=e("code",null,"string",-1),SZ=e("td",{style:{"text-align":"left"}},"-",-1),TZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),kZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),CZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),PZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),wZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),MZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),IZ=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),EZ={style:{"text-align":"left"}},FZ=e("code",null,"Command",-1),DZ=e("td",{style:{"text-align":"left"}},"-",-1),RZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),BZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),NZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),LZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),OZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),AZ=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),HZ={style:{"text-align":"left"}},jZ=e("code",null,"EBMessageAddress",-1),GZ=e("td",{style:{"text-align":"left"}},"-",-1),qZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),VZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.tenantId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),zZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),ZZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),UZ=e("h4",{id:"returns-59",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-59","aria-hidden":"true"},"#"),t(" Returns")],-1),QZ=e("code",null,"Readonly",-1),KZ=e("code",null,"contentEncoding",-1),WZ=e("code",null,"string",-1),$Z=e("code",null,"contentType",-1),YZ=e("code",null,"string",-1),JZ=e("code",null,"correlationId",-1),XZ=e("code",null,"string",-1),eU=e("code",null,"eventName?",-1),tU=e("code",null,"string",-1),nU=e("code",null,"id",-1),oU=e("code",null,"string",-1),sU=e("code",null,"messageType",-1),lU=e("code",null,"CommandSuccessResponse",-1),dU=e("code",null,"otp?",-1),aU=e("code",null,"string",-1),iU=e("code",null,"payload",-1),cU=e("code",null,"PayloadType",-1),rU=e("code",null,"principalId?",-1),uU=e("code",null,"string",-1),hU=e("code",null,"receiver",-1),_U=e("code",null,"sender",-1),pU=e("code",null,"tenantId?",-1),fU=e("code",null,"string",-1),gU=e("code",null,"timestamp",-1),mU=e("code",null,"number",-1),yU=e("code",null,"traceId?",-1),bU=e("code",null,"string",-1),xU=e("h4",{id:"defined-in-158",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-158","aria-hidden":"true"},"#"),t(" Defined in")],-1),vU={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandSuccessMessage.mock.ts#L9",target:"_blank",rel:"noopener noreferrer"},SU=d('<hr><h3 id="getcommandtransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandtransformcontextmock" aria-hidden="true">#</a> getCommandTransformContextMock</h3><p>▸ <strong>getCommandTransformContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command transform function context</p><h4 id="type-parameters-47" tabindex="-1"><a class="header-anchor" href="#type-parameters-47" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-53" tabindex="-1"><a class="header-anchor" href="#parameters-53" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-60" tabindex="-1"><a class="header-anchor" href="#returns-60" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),TU=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),CU={style:{"text-align":"left"}},PU=e("code",null,"configs",-1),wU=e("code",null,"getConfig",-1),MU=e("code",null,"ConfigGetterFunction",-1),IU=e("code",null,"removeConfig",-1),EU=e("code",null,"ConfigDeleteFunction",-1),FU=e("code",null,"setConfig",-1),DU=e("code",null,"ConfigSetterFunction",-1),RU=e("code",null,"logger",-1),BU=e("code",null,"Logger",-1),NU=e("code",null,"message",-1),LU=e("code",null,"Readonly",-1),OU=e("code",null,"secrets",-1),AU=e("code",null,"getSecret",-1),HU=e("code",null,"SecretGetterFunction",-1),jU=e("code",null,"removeSecret",-1),GU=e("code",null,"SecretDeleteFunction",-1),qU=e("code",null,"setSecret",-1),VU=e("code",null,"SecretSetterFunction",-1),zU=e("code",null,"startActiveSpan",-1),ZU=e("code",null,"name",-1),UU=e("code",null,"string",-1),QU=e("code",null,"opts",-1),KU=e("code",null,"SpanOptions",-1),WU=e("code",null,"context",-1),$U=e("code",null,"undefined",-1),YU=e("code",null,"Context",-1),JU=e("code",null,"fn",-1),XU=e("code",null,"span",-1),eQ=e("code",null,"Span",-1),tQ=e("code",null,"Promise",-1),nQ=e("code",null,"F",-1),oQ=e("code",null,"Promise",-1),sQ=e("code",null,"F",-1),lQ=e("code",null,"states",-1),dQ=e("code",null,"getState",-1),aQ=e("code",null,"StateGetterFunction",-1),iQ=e("code",null,"removeState",-1),cQ=e("code",null,"StateDeleteFunction",-1),rQ=e("code",null,"setState",-1),uQ=e("code",null,"StateSetterFunction",-1),hQ=e("code",null,"wrapInSpan",-1),_Q=e("code",null,"name",-1),pQ=e("code",null,"string",-1),fQ=e("code",null,"opts",-1),gQ=e("code",null,"SpanOptions",-1),mQ=e("code",null,"fn",-1),yQ=e("code",null,"span",-1),bQ=e("code",null,"Span",-1),xQ=e("code",null,"Promise",-1),vQ=e("code",null,"F",-1),SQ=e("code",null,"context?",-1),TQ=e("code",null,"Context",-1),kQ=e("code",null,"Promise",-1),CQ=e("code",null,"F",-1),PQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),wQ={style:{"text-align":"left"}},MQ=e("code",null,"getConfig",-1),IQ=e("code",null,"ConfigGetterFunction",-1),EQ=e("code",null,"removeConfig",-1),FQ=e("code",null,"ConfigDeleteFunction",-1),DQ=e("code",null,"setConfig",-1),RQ=e("code",null,"ConfigSetterFunction",-1),BQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),NQ={style:{"text-align":"left"}},LQ=e("code",null,"ConfigGetterFunction",-1),OQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),AQ={style:{"text-align":"left"}},HQ=e("code",null,"ConfigDeleteFunction",-1),jQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),GQ={style:{"text-align":"left"}},qQ=e("code",null,"ConfigSetterFunction",-1),VQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),zQ={style:{"text-align":"left"}},ZQ=e("code",null,"Logger",-1),UQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }>")])],-1),QQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),KQ={style:{"text-align":"left"}},WQ=e("code",null,"getSecret",-1),$Q=e("code",null,"SecretGetterFunction",-1),YQ=e("code",null,"removeSecret",-1),JQ=e("code",null,"SecretDeleteFunction",-1),XQ=e("code",null,"setSecret",-1),eK=e("code",null,"SecretSetterFunction",-1),tK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),nK={style:{"text-align":"left"}},oK=e("code",null,"SecretGetterFunction",-1),sK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),lK={style:{"text-align":"left"}},dK=e("code",null,"SecretDeleteFunction",-1),aK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),iK={style:{"text-align":"left"}},cK=e("code",null,"SecretSetterFunction",-1),rK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),uK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),hK={style:{"text-align":"left"}},_K=e("code",null,"getState",-1),pK=e("code",null,"StateGetterFunction",-1),fK=e("code",null,"removeState",-1),gK=e("code",null,"StateDeleteFunction",-1),mK=e("code",null,"setState",-1),yK=e("code",null,"StateSetterFunction",-1),bK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),xK={style:{"text-align":"left"}},vK=e("code",null,"StateGetterFunction",-1),SK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),TK={style:{"text-align":"left"}},kK=e("code",null,"StateDeleteFunction",-1),CK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),PK={style:{"text-align":"left"}},wK=e("code",null,"StateSetterFunction",-1),MK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),IK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),EK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),BK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KK=e("h4",{id:"defined-in-159",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-159","aria-hidden":"true"},"#"),t(" Defined in")],-1),WK={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandTransformContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},$K=e("hr",null,null,-1),YK=e("h3",{id:"getcustommessagemessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcustommessagemessagemock","aria-hidden":"true"},"#"),t(" getCustomMessageMessageMock")],-1),JK=e("strong",null,"getCustomMessageMessageMock",-1),XK=e("code",null,"PayloadType",-1),eW=e("code",null,"eventName",-1),tW=e("code",null,"payload",-1),nW=e("code",null,"input?",-1),oW=e("code",null,"Readonly",-1),sW=e("code",null,"contentEncoding",-1),lW=e("code",null,"string",-1),dW=e("code",null,"contentType",-1),aW=e("code",null,"string",-1),iW=e("code",null,"correlationId?",-1),cW=e("code",null,"string",-1),rW=e("code",null,"eventName",-1),uW=e("code",null,"string",-1),hW=e("code",null,"id",-1),_W=e("code",null,"string",-1),pW=e("code",null,"messageType",-1),fW=e("code",null,"CustomMessage",-1),gW=e("code",null,"otp?",-1),mW=e("code",null,"string",-1),yW=e("code",null,"payload?",-1),bW=e("code",null,"PayloadType",-1),xW=e("code",null,"principalId?",-1),vW=e("code",null,"string",-1),SW=e("code",null,"receiver?",-1),TW=e("code",null,"EBMessageAddress",-1),kW=e("code",null,"sender",-1),CW=e("code",null,"tenantId?",-1),PW=e("code",null,"string",-1),wW=e("code",null,"timestamp",-1),MW=e("code",null,"number",-1),IW=e("code",null,"traceId?",-1),EW=e("code",null,"string",-1),FW=d('<p>A function that returns a mocked custom message.</p><h4 id="type-parameters-48" tabindex="-1"><a class="header-anchor" href="#type-parameters-48" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-54" tabindex="-1"><a class="header-anchor" href="#parameters-54" aria-hidden="true">#</a> Parameters</h4>',4),DW=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),RW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),BW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),NW=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),LW={style:{"text-align":"left"}},OW=e("code",null,"Partial",-1),AW=e("code",null,"contentEncoding",-1),HW=e("code",null,"string",-1),jW=e("code",null,"contentType",-1),GW=e("code",null,"string",-1),qW=e("code",null,"correlationId?",-1),VW=e("code",null,"string",-1),zW=e("code",null,"eventName",-1),ZW=e("code",null,"string",-1),UW=e("code",null,"id",-1),QW=e("code",null,"string",-1),KW=e("code",null,"messageType",-1),WW=e("code",null,"CustomMessage",-1),$W=e("code",null,"otp?",-1),YW=e("code",null,"string",-1),JW=e("code",null,"payload?",-1),XW=e("code",null,"PayloadType",-1),e$=e("code",null,"principalId?",-1),t$=e("code",null,"string",-1),n$=e("code",null,"receiver?",-1),o$=e("code",null,"EBMessageAddress",-1),s$=e("code",null,"sender",-1),l$=e("code",null,"tenantId?",-1),d$=e("code",null,"string",-1),a$=e("code",null,"timestamp",-1),i$=e("code",null,"number",-1),c$=e("code",null,"traceId?",-1),r$=e("code",null,"string",-1),u$=e("h4",{id:"returns-61",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-61","aria-hidden":"true"},"#"),t(" Returns")],-1),h$=e("code",null,"Readonly",-1),_$=e("code",null,"contentEncoding",-1),p$=e("code",null,"string",-1),f$=e("code",null,"contentType",-1),g$=e("code",null,"string",-1),m$=e("code",null,"correlationId?",-1),y$=e("code",null,"string",-1),b$=e("code",null,"eventName",-1),x$=e("code",null,"string",-1),v$=e("code",null,"id",-1),S$=e("code",null,"string",-1),T$=e("code",null,"messageType",-1),k$=e("code",null,"CustomMessage",-1),C$=e("code",null,"otp?",-1),P$=e("code",null,"string",-1),w$=e("code",null,"payload?",-1),M$=e("code",null,"PayloadType",-1),I$=e("code",null,"principalId?",-1),E$=e("code",null,"string",-1),F$=e("code",null,"receiver?",-1),D$=e("code",null,"EBMessageAddress",-1),R$=e("code",null,"sender",-1),B$=e("code",null,"tenantId?",-1),N$=e("code",null,"string",-1),L$=e("code",null,"timestamp",-1),O$=e("code",null,"number",-1),A$=e("code",null,"traceId?",-1),H$=e("code",null,"string",-1),j$=e("h4",{id:"defined-in-160",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-160","aria-hidden":"true"},"#"),t(" Defined in")],-1),G$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCustomMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},q$=d('<hr><h3 id="geteventbridgemock" tabindex="-1"><a class="header-anchor" href="#geteventbridgemock" aria-hidden="true">#</a> getEventBridgeMock</h3><p>▸ <strong>getEventBridgeMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the eventBridge and stubs the methods</p><h4 id="parameters-55" tabindex="-1"><a class="header-anchor" href="#parameters-55" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-62" tabindex="-1"><a class="header-anchor" href="#returns-62" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>EventBridge mocked</p>',9),V$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),z$=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),Z$={style:{"text-align":"left"}},U$=e("code",null,"EventBridge",-1),Q$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">>")])],-1),K$=e("h4",{id:"defined-in-161",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-161","aria-hidden":"true"},"#"),t(" Defined in")],-1),W$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getEventBridge.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},$$=d('<hr><h3 id="getloggermock" tabindex="-1"><a class="header-anchor" href="#getloggermock" aria-hidden="true">#</a> getLoggerMock</h3><p>▸ <strong>getLoggerMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the logger and methods are stubs</p><h4 id="parameters-56" tabindex="-1"><a class="header-anchor" href="#parameters-56" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-63" tabindex="-1"><a class="header-anchor" href="#returns-63" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>logger mocked</p>',9),Y$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),J$=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),X$={style:{"text-align":"left"}},eY=e("code",null,"Logger",-1),tY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),nY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),oY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),sY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),lY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),dY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),aY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),iY=e("h4",{id:"defined-in-162",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-162","aria-hidden":"true"},"#"),t(" Defined in")],-1),cY={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},rY=d('<hr><h3 id="getsubscriptioncontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptioncontextmock" aria-hidden="true">#</a> getSubscriptionContextMock</h3><p>▸ <strong>getSubscriptionContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription function context</p><h4 id="parameters-57" tabindex="-1"><a class="header-anchor" href="#parameters-57" aria-hidden="true">#</a> Parameters</h4>',5),uY=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),hY=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),_Y={style:{"text-align":"left"}},pY=e("code",null,"EBMessage",-1),fY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),gY=e("h4",{id:"returns-64",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-64","aria-hidden":"true"},"#"),t(" Returns")],-1),mY=e("p",null,[e("code",null,"Object")],-1),yY=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),bY=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),xY={style:{"text-align":"left"}},vY=e("code",null,"configs",-1),SY=e("code",null,"getConfig",-1),TY=e("code",null,"ConfigGetterFunction",-1),kY=e("code",null,"removeConfig",-1),CY=e("code",null,"ConfigDeleteFunction",-1),PY=e("code",null,"setConfig",-1),wY=e("code",null,"ConfigSetterFunction",-1),MY=e("code",null,"emit",-1),IY=e("code",null,"EmitCustomMessageFunction",-1),EY=e("code",null,"invoke",-1),FY=e("code",null,"InvokeFunction",-1),DY=e("code",null,"logger",-1),RY=e("code",null,"Logger",-1),BY=e("code",null,"message",-1),NY=e("code",null,"Readonly",-1),LY=e("code",null,"EBMessage",-1),OY=e("code",null,"secrets",-1),AY=e("code",null,"getSecret",-1),HY=e("code",null,"SecretGetterFunction",-1),jY=e("code",null,"removeSecret",-1),GY=e("code",null,"SecretDeleteFunction",-1),qY=e("code",null,"setSecret",-1),VY=e("code",null,"SecretSetterFunction",-1),zY=e("code",null,"startActiveSpan",-1),ZY=e("code",null,"name",-1),UY=e("code",null,"string",-1),QY=e("code",null,"opts",-1),KY=e("code",null,"SpanOptions",-1),WY=e("code",null,"context",-1),$Y=e("code",null,"undefined",-1),YY=e("code",null,"Context",-1),JY=e("code",null,"fn",-1),XY=e("code",null,"span",-1),eJ=e("code",null,"Span",-1),tJ=e("code",null,"Promise",-1),nJ=e("code",null,"F",-1),oJ=e("code",null,"Promise",-1),sJ=e("code",null,"F",-1),lJ=e("code",null,"states",-1),dJ=e("code",null,"getState",-1),aJ=e("code",null,"StateGetterFunction",-1),iJ=e("code",null,"removeState",-1),cJ=e("code",null,"StateDeleteFunction",-1),rJ=e("code",null,"setState",-1),uJ=e("code",null,"StateSetterFunction",-1),hJ=e("code",null,"wrapInSpan",-1),_J=e("code",null,"name",-1),pJ=e("code",null,"string",-1),fJ=e("code",null,"opts",-1),gJ=e("code",null,"SpanOptions",-1),mJ=e("code",null,"fn",-1),yJ=e("code",null,"span",-1),bJ=e("code",null,"Span",-1),xJ=e("code",null,"Promise",-1),vJ=e("code",null,"F",-1),SJ=e("code",null,"context?",-1),TJ=e("code",null,"Context",-1),kJ=e("code",null,"Promise",-1),CJ=e("code",null,"F",-1),PJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),wJ={style:{"text-align":"left"}},MJ=e("code",null,"getConfig",-1),IJ=e("code",null,"ConfigGetterFunction",-1),EJ=e("code",null,"removeConfig",-1),FJ=e("code",null,"ConfigDeleteFunction",-1),DJ=e("code",null,"setConfig",-1),RJ=e("code",null,"ConfigSetterFunction",-1),BJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),NJ={style:{"text-align":"left"}},LJ=e("code",null,"ConfigGetterFunction",-1),OJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),AJ={style:{"text-align":"left"}},HJ=e("code",null,"ConfigDeleteFunction",-1),jJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),GJ={style:{"text-align":"left"}},qJ=e("code",null,"ConfigSetterFunction",-1),VJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),zJ={style:{"text-align":"left"}},ZJ=e("code",null,"EmitCustomMessageFunction",-1),UJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),QJ={style:{"text-align":"left"}},KJ=e("code",null,"InvokeFunction",-1),WJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),$J={style:{"text-align":"left"}},YJ=e("code",null,"Logger",-1),JJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),XJ={style:{"text-align":"left"}},eX=e("code",null,"Readonly",-1),tX=e("code",null,"EBMessage",-1),nX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),oX={style:{"text-align":"left"}},sX=e("code",null,"getSecret",-1),lX=e("code",null,"SecretGetterFunction",-1),dX=e("code",null,"removeSecret",-1),aX=e("code",null,"SecretDeleteFunction",-1),iX=e("code",null,"setSecret",-1),cX=e("code",null,"SecretSetterFunction",-1),rX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),uX={style:{"text-align":"left"}},hX=e("code",null,"SecretGetterFunction",-1),_X=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),pX={style:{"text-align":"left"}},fX=e("code",null,"SecretDeleteFunction",-1),gX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),mX={style:{"text-align":"left"}},yX=e("code",null,"SecretSetterFunction",-1),bX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),xX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),vX={style:{"text-align":"left"}},SX=e("code",null,"getState",-1),TX=e("code",null,"StateGetterFunction",-1),kX=e("code",null,"removeState",-1),CX=e("code",null,"StateDeleteFunction",-1),PX=e("code",null,"setState",-1),wX=e("code",null,"StateSetterFunction",-1),MX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),IX={style:{"text-align":"left"}},EX=e("code",null,"StateGetterFunction",-1),FX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),DX={style:{"text-align":"left"}},RX=e("code",null,"StateDeleteFunction",-1),BX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),NX={style:{"text-align":"left"}},LX=e("code",null,"StateSetterFunction",-1),OX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),AX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),HX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),ZX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),$X=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),JX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),XX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),eee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),tee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),nee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),oee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),see=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),lee=e("h4",{id:"defined-in-163",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-163","aria-hidden":"true"},"#"),t(" Defined in")],-1),dee={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"},aee=d('<hr><h3 id="getsubscriptiontransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptiontransformcontextmock" aria-hidden="true">#</a> getSubscriptionTransformContextMock</h3><p>▸ <strong>getSubscriptionTransformContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription transform function context</p><h4 id="parameters-58" tabindex="-1"><a class="header-anchor" href="#parameters-58" aria-hidden="true">#</a> Parameters</h4>',5),iee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),cee=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),ree={style:{"text-align":"left"}},uee=e("code",null,"EBMessage",-1),hee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),_ee=e("h4",{id:"returns-65",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-65","aria-hidden":"true"},"#"),t(" Returns")],-1),pee=e("p",null,[e("code",null,"Object")],-1),fee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),gee=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),mee={style:{"text-align":"left"}},yee=e("code",null,"configs",-1),bee=e("code",null,"getConfig",-1),xee=e("code",null,"ConfigGetterFunction",-1),vee=e("code",null,"removeConfig",-1),See=e("code",null,"ConfigDeleteFunction",-1),Tee=e("code",null,"setConfig",-1),kee=e("code",null,"ConfigSetterFunction",-1),Cee=e("code",null,"logger",-1),Pee=e("code",null,"Logger",-1),wee=e("code",null,"message",-1),Mee=e("code",null,"Readonly",-1),Iee=e("code",null,"EBMessage",-1),Eee=e("code",null,"secrets",-1),Fee=e("code",null,"getSecret",-1),Dee=e("code",null,"SecretGetterFunction",-1),Ree=e("code",null,"removeSecret",-1),Bee=e("code",null,"SecretDeleteFunction",-1),Nee=e("code",null,"setSecret",-1),Lee=e("code",null,"SecretSetterFunction",-1),Oee=e("code",null,"startActiveSpan",-1),Aee=e("code",null,"name",-1),Hee=e("code",null,"string",-1),jee=e("code",null,"opts",-1),Gee=e("code",null,"SpanOptions",-1),qee=e("code",null,"context",-1),Vee=e("code",null,"undefined",-1),zee=e("code",null,"Context",-1),Zee=e("code",null,"fn",-1),Uee=e("code",null,"span",-1),Qee=e("code",null,"Span",-1),Kee=e("code",null,"Promise",-1),Wee=e("code",null,"F",-1),$ee=e("code",null,"Promise",-1),Yee=e("code",null,"F",-1),Jee=e("code",null,"states",-1),Xee=e("code",null,"getState",-1),ete=e("code",null,"StateGetterFunction",-1),tte=e("code",null,"removeState",-1),nte=e("code",null,"StateDeleteFunction",-1),ote=e("code",null,"setState",-1),ste=e("code",null,"StateSetterFunction",-1),lte=e("code",null,"wrapInSpan",-1),dte=e("code",null,"name",-1),ate=e("code",null,"string",-1),ite=e("code",null,"opts",-1),cte=e("code",null,"SpanOptions",-1),rte=e("code",null,"fn",-1),ute=e("code",null,"span",-1),hte=e("code",null,"Span",-1),_te=e("code",null,"Promise",-1),pte=e("code",null,"F",-1),fte=e("code",null,"context?",-1),gte=e("code",null,"Context",-1),mte=e("code",null,"Promise",-1),yte=e("code",null,"F",-1),bte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),xte={style:{"text-align":"left"}},vte=e("code",null,"getConfig",-1),Ste=e("code",null,"ConfigGetterFunction",-1),Tte=e("code",null,"removeConfig",-1),kte=e("code",null,"ConfigDeleteFunction",-1),Cte=e("code",null,"setConfig",-1),Pte=e("code",null,"ConfigSetterFunction",-1),wte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),Mte={style:{"text-align":"left"}},Ite=e("code",null,"ConfigGetterFunction",-1),Ete=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),Fte={style:{"text-align":"left"}},Dte=e("code",null,"ConfigDeleteFunction",-1),Rte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),Bte={style:{"text-align":"left"}},Nte=e("code",null,"ConfigSetterFunction",-1),Lte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),Ote={style:{"text-align":"left"}},Ate=e("code",null,"Logger",-1),Hte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),jte={style:{"text-align":"left"}},Gte=e("code",null,"Readonly",-1),qte=e("code",null,"EBMessage",-1),Vte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),zte={style:{"text-align":"left"}},Zte=e("code",null,"getSecret",-1),Ute=e("code",null,"SecretGetterFunction",-1),Qte=e("code",null,"removeSecret",-1),Kte=e("code",null,"SecretDeleteFunction",-1),Wte=e("code",null,"setSecret",-1),$te=e("code",null,"SecretSetterFunction",-1),Yte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),Jte={style:{"text-align":"left"}},Xte=e("code",null,"SecretGetterFunction",-1),ene=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),tne={style:{"text-align":"left"}},nne=e("code",null,"SecretDeleteFunction",-1),one=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),sne={style:{"text-align":"left"}},lne=e("code",null,"SecretSetterFunction",-1),dne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),ane=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),ine={style:{"text-align":"left"}},cne=e("code",null,"getState",-1),rne=e("code",null,"StateGetterFunction",-1),une=e("code",null,"removeState",-1),hne=e("code",null,"StateDeleteFunction",-1),_ne=e("code",null,"setState",-1),pne=e("code",null,"StateSetterFunction",-1),fne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),gne={style:{"text-align":"left"}},mne=e("code",null,"StateGetterFunction",-1),yne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),bne={style:{"text-align":"left"}},xne=e("code",null,"StateDeleteFunction",-1),vne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),Sne={style:{"text-align":"left"}},Tne=e("code",null,"StateSetterFunction",-1),kne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),Cne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),Pne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),wne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Mne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ine=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),Ene=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Fne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Dne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Rne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Bne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Nne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Lne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),One=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ane=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Hne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Gne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Vne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zne=e("h4",{id:"defined-in-164",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-164","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zne={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionTransformContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"};function Une(Qne,Kne){const o=a("RouterLink"),l=a("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / @purista/core")]),h,_,p,f,g,e("p",null,[t("It contains the builders, classes & types and some helper functions. For easier testing of commands and subscriptions, the package contains different mock creation helper based on "),e("a",m,[t("jest"),n(l)]),t(" and "),e("a",y,[t("sinon"),n(l)])]),e("p",null,[t("Learn PURIST at "),e("a",b,[t("purista.dev"),n(l)])]),x,v,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[t("EBMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.EventBridgeEventNames.html"},{default:s(()=>[t("EventBridgeEventNames")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanName.html"},{default:s(()=>[t("PuristaSpanName")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanTag.html"},{default:s(()=>[t("PuristaSpanTag")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[t("StatusCode")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StoreType.html"},{default:s(()=>[t("StoreType")]),_:1})])]),S,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultLogger.html"},{default:s(()=>[t("DefaultLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[t("HandledError")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HttpClient.html"},{default:s(()=>[t("HttpClient")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[t("Logger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[t("UnhandledError")]),_:1})])]),T,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_core.IEmitter.html"},{default:s(()=>[t("IEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ILogger.html"},{default:s(()=>[t("ILogger")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.OpenApiZodAny.html"},{default:s(()=>[t("OpenApiZodAny")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.RestClient.html"},{default:s(()=>[t("RestClient")]),_:1})])]),k,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#authcredentials"},{default:s(()=>[t("AuthCredentials")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[t("BrokerHeaderCommandMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandresponsemsg"},{default:s(()=>[t("BrokerHeaderCommandResponseMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[t("BrokerHeaderCustomMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[t("Command")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[t("CommandDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[t("CommandDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[t("Complete")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#compressionmethod"},{default:s(()=>[t("CompressionMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[t("ContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[t("ContextBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[t("CorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultconfigstoreconfig"},{default:s(()=>[t("DefaultConfigStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:s(()=>[t("DefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultsecretstoreconfig"},{default:s(()=>[t("DefaultSecretStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultstatestoreconfig"},{default:s(()=>[t("DefaultStateStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[t("DefinitionEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[t("EBMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[t("EBMessageAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[t("EBMessageBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[t("EBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[t("EBMessageSenderAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[t("EmitCustomMessageFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#errorresponsepayload"},{default:s(()=>[t("ErrorResponsePayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[t("EventBridgeAdapterEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:s(()=>[t("EventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[t("EventBridgeCustomEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[t("EventBridgeEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[t("EventKey")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[t("EventMap")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientconfig"},{default:s(()=>[t("HttpClientConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientrequestoptions"},{default:s(()=>[t("HttpClientRequestOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:s(()=>[t("HttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeoutpayload"},{default:s(()=>[t("InfoInvokeTimeoutPayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[t("InfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[t("InfoMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[t("InfoServiceBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[t("InfoSubscriptionError")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[t("InstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[t("InvokeFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#logfnparamtype"},{default:s(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[t("LogLevelName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggeroptions"},{default:s(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggerstubs"},{default:s(()=>[t("LoggerStubs")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#newable"},{default:s(()=>[t("Newable")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:s(()=>[t("PendigInvocation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[t("Prettify")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[t("PrincipalId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[t("QueryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretstorecachemap"},{default:s(()=>[t("SecretStoreCacheMap")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceevents"},{default:s(()=>[t("ServiceEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[t("ServiceInfoType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[t("ShutdownEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#storebaseconfig"},{default:s(()=>[t("StoreBaseConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[t("SubscriptionDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[t("SubscriptionDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[t("SubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[t("SupportedHttpMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[t("TenantId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[t("TraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[t("addPrefixToObject")]),_:1})])]),C,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#min_content_size_for_compression"},{default:s(()=>[t("MIN_CONTENT_SIZE_FOR_COMPRESSION")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfovalidator"},{default:s(()=>[t("ServiceInfoValidator")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetypes"},{default:s(()=>[t("infoMessageTypes")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#puristaversion"},{default:s(()=>[t("puristaVersion")]),_:1})])]),P,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#extendapi"},{default:s(()=>[t("extendApi")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#generateschema"},{default:s(()=>[t("generateSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandfunctionwithvalidation"},{default:s(()=>[t("getCommandFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaulteventbridgeconfig"},{default:s(()=>[t("getDefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaultloglevel"},{default:s(()=>[t("getDefaultLogLevel")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewsubscriptionstorageentry"},{default:s(()=>[t("getNewSubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionfunctionwithvalidation"},{default:s(()=>[t("getSubscriptionFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gettimeoutpromise"},{default:s(()=>[t("getTimeoutPromise")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultconfigstore"},{default:s(()=>[t("initDefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultsecretstore"},{default:s(()=>[t("initDefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultstatestore"},{default:s(()=>[t("initDefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initlogger"},{default:s(()=>[t("initLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscustommessage"},{default:s(()=>[t("isCustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ishttpexposedservicemeta"},{default:s(()=>[t("isHttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfomessage"},{default:s(()=>[t("isInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfoservicefunctionadded"},{default:s(()=>[t("isInfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ismessagematchingsubscription"},{default:s(()=>[t("isMessageMatchingSubscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#throwifnotvalidmessage"},{default:s(()=>[t("throwIfNotValidMessage")]),_:1})])]),w,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[t("CommandDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[t("CommandAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[t("CommandBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[t("CommandDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[t("CommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[t("CommandFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[t("CommandFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[t("CommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[t("CommandTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[t("CommandTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[t("CommandTransformOutputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommand"},{default:s(()=>[t("isCommand")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommanderrorresponse"},{default:s(()=>[t("isCommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandresponse"},{default:s(()=>[t("isCommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandsuccessresponse"},{default:s(()=>[t("isCommandSuccessResponse")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:s(()=>[t("DefaultEventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:s(()=>[t("EventBridgeBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[t("EventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[t("EventBridgeEventsBasic")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandqueuename"},{default:s(()=>[t("getCommandQueueName")]),_:1})])]),I,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttocamelcase"},{default:s(()=>[t("convertToCamelCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttokebabcase"},{default:s(()=>[t("convertToKebabCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttopascalcase"},{default:s(()=>[t("convertToPascalCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttosnakecase"},{default:s(()=>[t("convertToSnakeCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createerrorresponse"},{default:s(()=>[t("createErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createinfomessage"},{default:s(()=>[t("createInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createsuccessresponse"},{default:s(()=>[t("createSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#deserializeotp"},{default:s(()=>[t("deserializeOtp")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcleanedmessage"},{default:s(()=>[t("getCleanedMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geterrormessageforcode"},{default:s(()=>[t("getErrorMessageForCode")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewcorrelationid"},{default:s(()=>[t("getNewCorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewebmessageid"},{default:s(()=>[t("getNewEBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewinstanceid"},{default:s(()=>[t("getNewInstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewtraceid"},{default:s(()=>[t("getNewTraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionqueuename"},{default:s(()=>[t("getSubscriptionQueueName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getuniqueid"},{default:s(()=>[t("getUniqueId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gracefulshutdown"},{default:s(()=>[t("gracefulShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isdevelop"},{default:s(()=>[t("isDevelop")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serializeotp"},{default:s(()=>[t("serializeOtp")]),_:1})])]),E,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.ServiceEventsNames.html"},{default:s(()=>[t("ServiceEventsNames")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[t("Service")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.ServiceBuilder.html"},{default:s(()=>[t("ServiceBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[t("ServiceClass")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[t("ServiceConstructorInput")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[t("ServiceEventsInternal")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.ConfigStoreBaseClass.html"},{default:s(()=>[t("ConfigStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[t("DefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[t("DefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[t("DefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.SecretStoreBaseClass.html"},{default:s(()=>[t("SecretStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.StateStoreBaseClass.html"},{default:s(()=>[t("StateStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[t("ConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[t("SecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[t("StateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[t("ConfigDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[t("ConfigGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[t("ConfigSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[t("SecretDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[t("SecretGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[t("SecretSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[t("StateSetterFunction")]),_:1})])]),D,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:s(()=>[t("SubscriptionDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscription"},{default:s(()=>[t("Subscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[t("SubscriptionAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[t("SubscriptionBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[t("SubscriptionDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[t("SubscriptionFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[t("SubscriptionFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[t("SubscriptionFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[t("SubscriptionTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[t("SubscriptionTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[t("SubscriptionTransformOutputHook")]),_:1})])]),R,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandcontextmock"},{default:s(()=>[t("getCommandContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommanderrormessagemock"},{default:s(()=>[t("getCommandErrorMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandmessagemock"},{default:s(()=>[t("getCommandMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandsuccessmessagemock"},{default:s(()=>[t("getCommandSuccessMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandtransformcontextmock"},{default:s(()=>[t("getCommandTransformContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcustommessagemessagemock"},{default:s(()=>[t("getCustomMessageMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geteventbridgemock"},{default:s(()=>[t("getEventBridgeMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getloggermock"},{default:s(()=>[t("getLoggerMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptioncontextmock"},{default:s(()=>[t("getSubscriptionContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptiontransformcontextmock"},{default:s(()=>[t("getSubscriptionTransformContextMock")]),_:1})])]),B,e("p",null,[e("a",N,[t("HttpClient/types/AuthCredentials.ts:4"),n(l)])]),L,O,e("p",null,[t("Ƭ "),A,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[H]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[j]),_:1}),t(" & { "),G,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[q]),_:1}),t(" ; "),V,t(": "),z,t(" ; "),Z,t(": "),U,t(" ; "),Q,t(": "),K,t(" }>")]),W,e("p",null,[e("a",$,[t("core/types/BrokerHeaderCommandMsg.ts:5"),n(l)])]),Y,J,e("p",null,[t("Ƭ "),X,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ee]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[te]),_:1}),t(" & { "),ne,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[oe]),_:1}),t(" }>")]),se,e("p",null,[e("a",le,[t("core/types/BrokerHeaderCommandResponseMsg.ts:5"),n(l)])]),de,ae,ie,ce,e("table",null,[re,e("tbody",null,[ue,e("tr",null,[he,e("td",_e,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[pe]),_:1})])]),e("tr",null,[fe,e("td",ge,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[me]),_:1})])]),e("tr",null,[ye,e("td",be,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[xe]),_:1})])]),ve,Se,Te,e("tr",null,[ke,e("td",Ce,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[Pe]),_:1})])])])]),we,e("p",null,[e("a",Me,[t("core/types/BrokerHeaderCustomMsg.ts:6"),n(l)])]),Ie,Ee,e("p",null,[t("Ƭ "),Fe,t("<"),De,t(", "),Re,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Be]),_:1}),t("<{ "),Ne,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Le]),_:1}),t(" ; "),Oe,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Ae]),_:1}),t(" ; "),He,t(": { "),je,t(": "),Ge,t(" ; "),qe,t(": "),Ve,t(" } ; "),ze,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Ze]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ue]),_:1}),t(">")]),Qe,e("p",null,[e("a",Ke,[t("core/types/commandType/Command.ts:18"),n(l)])]),We,$e,e("p",null,[t("Ƭ "),Ye,t("<"),Je,t(">: "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Xe]),_:1}),t("<"),et,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[tt]),_:1}),t(", "),nt,t(", "),ot,t(", "),st,t(", "),lt,t(", "),dt,t(", "),at,t(">[]")]),it,e("table",null,[ct,e("tbody",null,[e("tr",null,[rt,e("td",ut,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[ht]),_:1})])])])]),_t,e("p",null,[e("a",pt,[t("core/types/commandType/CommandDefinitionList.ts:12"),n(l)])]),ft,gt,mt,yt,e("table",null,[bt,e("tbody",null,[e("tr",null,[xt,e("td",vt,[t("{ "),St,t(": "),Tt,t(" ; "),kt,t(": "),Ct,t(" ; "),Pt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[wt]),_:1}),t(" ; "),Mt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[It]),_:1}),t(" ; "),Et,t(": "),Ft,t(" ; "),Dt,t(": "),Rt,t(" ; "),Bt,t(": "),Nt,t(" ; "),Lt,t(": "),Ot,t(" }")])]),At,Ht,e("tr",null,[jt,e("td",Gt,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[qt]),_:1})])]),e("tr",null,[Vt,e("td",zt,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Zt]),_:1})])]),Ut,Qt,Kt,Wt])]),$t,e("p",null,[e("a",Yt,[t("core/types/commandType/CommandDefinitionMetadataBase.ts:5"),n(l)])]),Jt,e("p",null,[e("a",Xt,[t("core/types/Complete.ts:20"),n(l)])]),en,e("p",null,[e("a",tn,[t("core/HttpServer/types/CompressionMethod.ts:1"),n(l)])]),nn,e("p",null,[e("a",on,[t("core/types/ContentType.ts:6"),n(l)])]),sn,ln,dn,an,cn,e("table",null,[rn,e("tbody",null,[e("tr",null,[un,e("td",hn,[t("{ "),_n,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[pn]),_:1}),t(" ; "),fn,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[gn]),_:1}),t(" ; "),mn,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[yn]),_:1}),t(" }")]),bn]),e("tr",null,[xn,e("td",vn,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Sn]),_:1})]),Tn]),e("tr",null,[kn,e("td",Cn,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[Pn]),_:1})]),wn]),e("tr",null,[Mn,e("td",In,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[En]),_:1})]),Fn]),e("tr",null,[Dn,e("td",Rn,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Bn]),_:1})]),Nn]),e("tr",null,[Ln,e("td",On,[t("{ "),An,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Hn]),_:1}),t(" ; "),jn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Gn]),_:1}),t(" ; "),qn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Vn]),_:1}),t(" }")]),zn]),e("tr",null,[Zn,e("td",Un,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Qn]),_:1})]),Kn]),e("tr",null,[Wn,e("td",$n,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Yn]),_:1})]),Jn]),e("tr",null,[Xn,e("td",eo,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[to]),_:1})]),no]),oo,e("tr",null,[so,e("td",lo,[t("{ "),ao,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[io]),_:1}),t(" ; "),co,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[ro]),_:1}),t(" ; "),uo,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ho]),_:1}),t(" }")]),_o]),e("tr",null,[po,e("td",fo,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[go]),_:1})]),mo]),e("tr",null,[yo,e("td",bo,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[xo]),_:1})]),vo]),e("tr",null,[So,e("td",To,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ko]),_:1})]),Co]),Po])]),wo,e("p",null,[e("a",Mo,[t("core/types/ContextBase.ts:12"),n(l)])]),Io,Eo,Fo,Do,Ro,e("p",null,[e("a",Bo,[t("core/types/CorrelationId.ts:2"),n(l)])]),No,Lo,e("p",null,[t("Ƭ "),Oo,t("<"),Ao,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Ho]),_:1}),t("<{ "),jo,t(": "),Go,t(" ; "),qo,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[Vo]),_:1}),t(" ; "),zo,t(": "),Zo,t(" ; "),Uo,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Qo]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ko]),_:1}),t(">")]),Wo,e("p",null,[e("a",$o,[t("core/types/CustomMessage.ts:11"),n(l)])]),Yo,e("p",null,[e("a",Jo,[t("DefaultConfigStore/types/DefaultConfigStoreConfig.ts:1"),n(l)])]),Xo,e("p",null,[e("a",es,[t("DefaultEventBridge/types/DefaultEventBridgeConfig.ts:4"),n(l)])]),ts,e("p",null,[e("a",ns,[t("DefaultSecretStore/types/DefaultSecretStoreConfig.ts:1"),n(l)])]),os,e("p",null,[e("a",ss,[t("DefaultStateStore/types/DefaultStateStoreConfig.ts:1"),n(l)])]),ls,e("p",null,[e("a",ds,[t("core/types/DefinitionEventBridgeConfig.ts:6"),n(l)])]),as,is,e("p",null,[t("Ƭ "),cs,t(": "),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[rs]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[us]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[hs]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[_s]),_:1})]),ps,fs,e("p",null,[e("a",gs,[t("core/types/EBMessage.ts:8"),n(l)])]),ms,ys,bs,xs,vs,e("table",null,[Ss,e("tbody",null,[e("tr",null,[Ts,e("td",ks,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[Cs]),_:1})]),Ps]),ws,Ms,Is])]),Es,e("p",null,[e("a",Fs,[t("core/types/EBMessageAddress.ts:6"),n(l)])]),Ds,Rs,Bs,Ns,Ls,e("table",null,[Os,e("tbody",null,[As,e("tr",null,[Hs,e("td",js,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Gs]),_:1})]),qs]),e("tr",null,[Vs,e("td",zs,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Zs]),_:1})]),Us]),Qs,e("tr",null,[Ks,e("td",Ws,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[$s]),_:1})]),Ys]),Js,e("tr",null,[Xs,e("td",el,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[tl]),_:1})]),nl]),e("tr",null,[ol,e("td",sl,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[ll]),_:1})]),dl]),e("tr",null,[al,e("td",il,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[cl]),_:1})]),rl]),ul,e("tr",null,[hl,e("td",_l,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[pl]),_:1})]),fl])])]),gl,e("p",null,[e("a",ml,[t("core/types/EBMessageBase.ts:12"),n(l)])]),yl,bl,xl,vl,Sl,e("p",null,[e("a",Tl,[t("core/types/EBMessageId.ts:4"),n(l)])]),kl,Cl,e("p",null,[t("Ƭ "),Pl,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[wl]),_:1}),t("<"),Ml,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Il]),_:1}),t(", "),El,t("> & "),Fl,t("<"),Dl,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Rl]),_:1}),t(", "),Bl,t(">>>")]),Nl,Ll,e("p",null,[e("a",Ol,[t("core/types/EBMessageSenderAddress.ts:7"),n(l)])]),Al,Hl,e("p",null,[t("Ƭ "),jl,t(": <Payload>("),Gl,t(": "),ql,t(", "),Vl,t(": "),zl,t(", "),Zl,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ul]),_:1}),t(", "),Ql,t(": "),Kl,t(") => "),Wl,t("<"),$l,t(">")]),Yl,e("table",null,[Jl,e("tbody",null,[Xl,ed,e("tr",null,[td,e("td",nd,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[od]),_:1})])]),sd])]),ld,e("p",null,[e("a",dd,[t("core/types/EmitCustomMessageFunction.ts:10"),n(l)])]),ad,id,cd,rd,ud,e("table",null,[hd,e("tbody",null,[_d,pd,e("tr",null,[fd,e("td",gd,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[md]),_:1})]),yd]),e("tr",null,[bd,e("td",xd,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[vd]),_:1})]),Sd])])]),Td,e("p",null,[e("a",kd,[t("core/types/ErrorResponsePayload.ts:7"),n(l)])]),Cd,e("p",null,[e("a",Pd,[t("core/EventBridge/types/EventBridgeEvents.ts:42"),n(l)])]),wd,Md,e("p",null,[t("Ƭ "),Id,t("<"),Ed,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Fd]),_:1}),t("<{ "),Dd,t(": "),Rd,t(" ; "),Bd,t(": "),Nd,t(" ; "),Ld,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Od]),_:1}),t(" ; "),Ad,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Hd]),_:1}),t(" ; "),jd,t(": "),Gd,t(" } & "),qd,t(">")]),Vd,e("p",null,[e("a",zd,[t("core/EventBridge/types/EventBridgeConfig.ts:10"),n(l)])]),Zd,e("p",null,[e("a",Ud,[t("core/EventBridge/types/EventBridgeEvents.ts:37"),n(l)])]),Qd,Kd,e("p",null,[t("Ƭ "),Wd,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$d]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[Yd]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Jd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[Xd]),_:1}),t(", "),ea,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[ta]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[na]),_:1}),t(", "),oa,t(">>")]),sa,e("p",null,[e("a",la,[t("core/EventBridge/types/EventBridgeEvents.ts:47"),n(l)])]),da,e("table",null,[aa,e("tbody",null,[e("tr",null,[ia,e("td",ca,[t("extends "),n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[ra]),_:1})])])])]),ua,e("p",null,[e("a",ha,[t("core/types/GenericEventEmitter.ts:5"),n(l)])]),_a,e("p",null,[e("a",pa,[t("core/types/GenericEventEmitter.ts:3"),n(l)])]),fa,ga,e("p",null,[t("Ƭ "),ma,t("<"),ya,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ba]),_:1}),t("<{ "),xa,t(": "),va,t(" ; "),Sa,t(": { "),Ta,t(": "),ka,t(" ; "),Ca,t(": "),Pa,t(" } ; "),wa,t(": "),Ma,t(" ; "),Ia,t(": "),Ea,t("<"),Fa,t(", "),Da,t("> ; "),Ra,t(": "),Ba,t(" ; "),Na,t(": "),La,t(" ; "),Oa,t(": "),Aa,t(" ; "),Ha,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[ja]),_:1}),t(" ; "),Ga,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[qa]),_:1}),t(" ; "),Va,t(": "),za,t(" ; "),Za,t(": "),Ua,t(" } & "),Qa,t(">")]),Ka,e("p",null,[e("a",Wa,[t("HttpClient/types/HttpClientConfig.ts:9"),n(l)])]),$a,e("p",null,[e("a",Ya,[t("HttpClient/types/HttpClientRequestOptions.ts:4"),n(l)])]),Ja,Xa,e("p",null,[t("Ƭ "),ei,t("<"),ti,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ni]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[oi]),_:1}),t(" & { "),si,t(": { "),li,t(": { "),di,t(": "),ai,t(" | "),ii,t(" | "),ci,t(" | "),ri,t(" | "),ui,t(" ; "),hi,t(": { "),_i,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[pi]),_:1}),t("[] ; "),fi,t(": "),gi,t(" ; "),mi,t(": "),yi,t(" ; "),bi,t(": "),xi,t(" ; "),vi,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Si]),_:1}),t("<"),Ti,t(">[] ; "),ki,t(": "),Ci,t(" ; "),Pi,t(": "),wi,t("[] } ; "),Mi,t(": "),Ii,t(" } } }>")]),Ei,e("p",null,[e("a",Fi,[t("core/HttpServer/types/HttpExposedServiceMeta.ts:4"),n(l)])]),Di,Ri,e("p",null,[t("Ƭ "),Bi,t(": { "),Ni,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Li]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Oi]),_:1})]),Ai,e("p",null,[e("a",Hi,[t("core/types/infoType/InfoInvokeTimeout.ts:22"),n(l)])]),ji,Gi,qi,Vi,e("table",null,[zi,e("tbody",null,[e("tr",null,[Zi,e("td",Ui,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Qi]),_:1})])]),Ki,Wi,$i,Yi,Ji,Xi,ec,tc,nc,e("tr",null,[oc,e("td",sc,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[lc]),_:1})])])])]),dc,e("p",null,[e("a",ac,[t("core/types/infoType/InfoInvokeTimeout.ts:6"),n(l)])]),ic,cc,e("p",null,[t("Ƭ "),rc,t(": "),n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[uc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[hc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[_c]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[pc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[fc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[gc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[mc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[yc]),_:1})]),bc,e("p",null,[e("a",xc,[t("core/types/infoType/InfoMessage.ts:11"),n(l)])]),vc,Sc,e("p",null,[t("Ƭ "),Tc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[kc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[Cc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[Pc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[wc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[Mc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Ic]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Ec]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Fc]),_:1})]),Dc,e("p",null,[e("a",Rc,[t("core/types/infoType/InfoMessage.ts:21"),n(l)])]),Bc,Nc,e("p",null,[t("Ƭ "),Lc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Oc]),_:1}),t("<{ "),Ac,t(": "),Hc,t(" ; "),jc,t(": "),Gc,t(" ; "),qc,t(": "),Vc,t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[zc]),_:1}),t(">")]),Zc,e("p",null,[e("a",Uc,[t("core/types/infoType/InfoServiceBase.ts:4"),n(l)])]),Qc,Kc,e("p",null,[t("Ƭ "),Wc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$c]),_:1}),t("<{ "),Yc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[Jc]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Xc]),_:1}),t(">")]),er,e("p",null,[e("a",tr,[t("core/types/infoType/InfoServiceDrain.ts:5"),n(l)])]),nr,or,e("p",null,[t("Ƭ "),sr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[lr]),_:1}),t("<{ "),dr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[ar]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[ir]),_:1}),t(">")]),cr,e("p",null,[e("a",rr,[t("core/types/infoType/InfoServiceFunctionAdded.ts:5"),n(l)])]),ur,hr,e("p",null,[t("Ƭ "),_r,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[pr]),_:1}),t("<{ "),fr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[gr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[mr]),_:1}),t(">")]),yr,e("p",null,[e("a",br,[t("core/types/infoType/InfoServiceInit.ts:5"),n(l)])]),xr,vr,e("p",null,[t("Ƭ "),Sr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Tr]),_:1}),t("<{ "),kr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[Cr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Pr]),_:1}),t(">")]),wr,e("p",null,[e("a",Mr,[t("core/types/infoType/InfoServiceNotReady.ts:5"),n(l)])]),Ir,Er,e("p",null,[t("Ƭ "),Fr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Dr]),_:1}),t("<{ "),Rr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[Br]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Nr]),_:1}),t(">")]),Lr,e("p",null,[e("a",Or,[t("core/types/infoType/InfoServiceReady.ts:5"),n(l)])]),Ar,Hr,e("p",null,[t("Ƭ "),jr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Gr]),_:1}),t("<{ "),qr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Vr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[zr]),_:1}),t(">")]),Zr,e("p",null,[e("a",Ur,[t("core/types/infoType/InfoServiceShutdown.ts:5"),n(l)])]),Qr,Kr,e("p",null,[t("Ƭ "),Wr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$r]),_:1}),t("<{ "),Yr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Jr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Xr]),_:1}),t(">")]),eu,e("p",null,[e("a",tu,[t("core/types/infoType/InfoSubscriptionError.ts:5"),n(l)])]),nu,ou,su,lu,du,e("p",null,[e("a",au,[t("core/types/InstanceId.ts:2"),n(l)])]),iu,cu,e("p",null,[t("Ƭ "),ru,t(": <InvokeResponseType, PayloadType, ParameterType>("),uu,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[hu]),_:1}),t(", "),_u,t(": "),pu,t(", "),fu,t(": "),gu,t(") => "),mu,t("<"),yu,t(">")]),bu,e("table",null,[xu,e("tbody",null,[e("tr",null,[vu,e("td",Su,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Tu]),_:1})])]),ku,Cu])]),Pu,e("p",null,[e("a",wu,[t("core/types/InvokeFunction.ts:21"),n(l)])]),Mu,e("p",null,[e("a",Iu,[t("core/types/Logger.ts:19"),n(l)])]),Eu,e("p",null,[e("a",Fu,[t("core/types/LogLevelName.ts:1"),n(l)])]),Du,Ru,Bu,Nu,e("table",null,[Lu,e("tbody",null,[Ou,e("tr",null,[Au,e("td",Hu,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[ju]),_:1})])]),Gu,e("tr",null,[qu,e("td",Vu,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[zu]),_:1})])]),Zu,Uu,Qu,Ku,e("tr",null,[Wu,e("td",$u,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[Yu]),_:1})])]),e("tr",null,[Ju,e("td",Xu,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[eh]),_:1})])])])]),th,e("p",null,[e("a",nh,[t("core/types/Logger.ts:6"),n(l)])]),oh,e("p",null,[e("a",sh,[t("mocks/getLogger.mock.ts:41"),n(l)])]),lh,dh,e("p",null,[t("Ƭ "),ah,t("<"),ih,t(", "),ch,t(">: ("),rh,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[uh]),_:1}),t("<"),hh,t(">) => "),_h]),ph,e("table",null,[fh,e("tbody",null,[e("tr",null,[gh,e("td",mh,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[yh]),_:1}),t("<"),bh,t(">")])])])]),xh,vh,Sh,e("p",null,[e("a",Th,[t("ServiceBuilder/ServiceBuilder.impl.ts:28"),n(l)])]),kh,Ch,Ph,wh,e("table",null,[Mh,e("tbody",null,[e("tr",null,[Ih,e("td",Eh,[t("("),Fh,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[Dh]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[Rh]),_:1}),t(") => "),Bh])]),Nh])]),Lh,e("p",null,[e("a",Oh,[t("DefaultEventBridge/types/PendingInvocations.ts:3"),n(l)])]),Ah,e("p",null,[e("a",Hh,[t("core/types/Prettify.ts:1"),n(l)])]),jh,Gh,qh,Vh,zh,e("p",null,[e("a",Zh,[t("core/types/PrincipalId.ts:2"),n(l)])]),Uh,e("p",null,[e("a",Qh,[t("core/HttpServer/types/QueryParameter.ts:1"),n(l)])]),Kh,e("p",null,[e("a",Wh,[t("core/SecretStore/types/SecretStoreCacheMap.ts:1"),n(l)])]),$h,Yh,e("p",null,[t("Ƭ "),Jh,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[Xh]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[e_]),_:1}),t("<"),t_,t(", "),n_,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[o_]),_:1}),t("<"),s_,t(", "),l_,t(">")]),d_,a_,i_,e("p",null,[e("a",c_,[t("core/types/ServiceEvents.ts:98"),n(l)])]),r_,e("p",null,[e("a",u_,[t("core/types/infoType/ServiceInfoType.ts:4"),n(l)])]),h_,e("p",null,[e("a",__,[t("helper/types/ShutdownEntry.ts:4"),n(l)])]),p_,f_,e("p",null,[t("Ƭ "),g_,t("<"),m_,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[y_]),_:1}),t("<{ "),b_,t(": "),x_,t(" ; "),v_,t(": "),S_,t(" ; "),T_,t(": "),k_,t(" ; "),C_,t(": "),P_,t(" ; "),w_,t(": "),M_,t(" ; "),I_,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[E_]),_:1}),t(" ; "),F_,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[D_]),_:1}),t(" } & "),R_,t(">")]),B_,e("p",null,[e("a",N_,[t("core/types/StoreBaseConfig.ts:8"),n(l)])]),L_,O_,e("p",null,[t("Ƭ "),A_,t("<"),H_,t(">: "),n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[j_]),_:1}),t("<"),G_,t(", "),q_,t(", "),V_,t(", "),z_,t(", "),Z_,t(">[]")]),U_,e("table",null,[Q_,e("tbody",null,[e("tr",null,[K_,e("td",W_,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[$_]),_:1})])])])]),Y_,e("p",null,[e("a",J_,[t("core/types/subscription/SubscriptionDefinitionList.ts:11"),n(l)])]),X_,ep,tp,np,e("table",null,[op,e("tbody",null,[e("tr",null,[sp,e("td",lp,[t("{ "),dp,t(": "),ap,t(" ; "),ip,t(": "),cp,t(" ; "),rp,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[up]),_:1}),t(" ; "),hp,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[_p]),_:1}),t(" ; "),pp,t(": "),fp,t(" ; "),gp,t(": "),mp,t(" ; "),yp,t(": "),bp,t(" }")])]),xp,vp,e("tr",null,[Sp,e("td",Tp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[kp]),_:1})])]),e("tr",null,[Cp,e("td",Pp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[wp]),_:1})])]),Mp,Ip,Ep])]),Fp,e("p",null,[e("a",Dp,[t("core/types/subscription/SubscriptionDefinitionMetadataBase.ts:5"),n(l)])]),Rp,Bp,Np,Lp,e("table",null,[Op,e("tbody",null,[e("tr",null,[Ap,e("td",Hp,[t("("),jp,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Gp]),_:1}),t(") => "),qp,t("<"),Vp,t("<"),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[zp]),_:1}),t(", "),Zp,t(" | "),Up,t("> | "),Qp,t(">")])]),Kp,Wp,e("tr",null,[$p,e("td",Yp,[t("("),Jp,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[Xp]),_:1}),t(") => "),e1])]),t1,n1,o1,s1,l1,d1,a1,i1,c1,r1])]),u1,e("p",null,[e("a",h1,[t("DefaultEventBridge/types/SubscriptionStorageEntry.ts:3"),n(l)])]),_1,e("p",null,[e("a",p1,[t("core/HttpServer/types/SupportedHttpMethod.ts:2"),n(l)])]),f1,g1,m1,y1,b1,e("p",null,[e("a",x1,[t("core/types/TenantId.ts:2"),n(l)])]),v1,S1,T1,k1,C1,e("p",null,[e("a",P1,[t("core/types/TraceId.ts:4"),n(l)])]),w1,e("p",null,[e("a",M1,[t("helper/getTimeoutPromise.impl.ts:9"),n(l)])]),I1,E1,e("p",null,[t("▸ "),F1,t("("),D1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[R1]),_:1})]),B1,e("table",null,[N1,e("tbody",null,[L1,e("tr",null,[O1,e("td",A1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[H1]),_:1})])])])]),j1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[G1]),_:1})]),q1,e("p",null,[e("a",V1,[t("DefaultConfigStore/initDefaultConfigStore.impl.ts:4"),n(l)])]),z1,Z1,e("p",null,[t("▸ "),U1,t("("),Q1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[K1]),_:1})]),W1,e("table",null,[$1,e("tbody",null,[Y1,e("tr",null,[J1,e("td",X1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[ef]),_:1})])])])]),tf,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[nf]),_:1})]),of,e("p",null,[e("a",sf,[t("DefaultSecretStore/initDefaultSecretStore.impl.ts:4"),n(l)])]),lf,df,e("p",null,[t("▸ "),af,t("("),cf,t("): "),n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[rf]),_:1})]),uf,e("table",null,[hf,e("tbody",null,[_f,e("tr",null,[pf,e("td",ff,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[gf]),_:1})])])])]),mf,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[yf]),_:1})]),bf,e("p",null,[e("a",xf,[t("DefaultStateStore/initDefaultStateStore.impl.ts:4"),n(l)])]),vf,Sf,e("p",null,[t("▸ "),Tf,t("("),kf,t(", "),Cf,t("): "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Pf]),_:1})]),wf,Mf,e("table",null,[If,e("tbody",null,[e("tr",null,[Ef,e("td",Ff,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Df]),_:1})])]),Rf])]),Bf,e("p",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Nf]),_:1})]),Lf,e("p",null,[e("a",Of,[t("DefaultLogger/initLogger.impl.ts:13"),n(l)])]),Af,Hf,jf,Gf,qf,e("table",null,[Vf,e("tbody",null,[e("tr",null,[zf,e("td",Zf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Uf]),_:1})]),Qf])])]),Kf,Wf,$f,Yf,e("p",null,[e("a",Jf,[t("core/types/isCustomMessage.impl.ts:10"),n(l)])]),Xf,e("p",null,[e("a",eg,[t("core/HttpServer/types/isHttpExposedServiceMeta.impl.ts:8"),n(l)])]),tg,ng,og,sg,e("table",null,[lg,e("tbody",null,[e("tr",null,[dg,e("td",ag,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[ig]),_:1})])])])]),cg,rg,ug,e("p",null,[e("a",hg,[t("core/types/infoType/isInfoMessage.impl.ts:4"),n(l)])]),_g,pg,fg,gg,e("table",null,[mg,e("tbody",null,[e("tr",null,[yg,e("td",bg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[xg]),_:1})])])])]),vg,Sg,Tg,e("p",null,[e("a",kg,[t("core/types/infoType/isInfoServiceFunctionAdded.impl.ts:5"),n(l)])]),Cg,e("table",null,[Pg,e("tbody",null,[e("tr",null,[wg,e("td",Mg,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Ig]),_:1})])]),e("tr",null,[Eg,e("td",Fg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Dg]),_:1})])]),e("tr",null,[Rg,e("td",Bg,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[Ng]),_:1})])])])]),Lg,Og,Ag,e("p",null,[e("a",Hg,[t("DefaultEventBridge/isMessageMatchingSubscription.impl.ts:4"),n(l)])]),jg,e("p",null,[e("a",Gg,[t("helper/throwIfNotValidMessage.impl.ts:10"),n(l)])]),qg,e("table",null,[Vg,e("tbody",null,[e("tr",null,[zg,e("td",Zg,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Ug]),_:1})])]),Qg,Kg,Wg,$g,Yg,Jg])]),Xg,e("p",null,[e("a",em,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:31"),n(l)])]),tm,e("p",null,[t("Ƭ "),nm,t("<"),om,t(", "),sm,t(", "),lm,t(", "),dm,t(", "),am,t(", "),im,t(">: ("),cm,t(": "),rm,t(", "),um,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[hm]),_:1}),t("<"),_m,t(", "),pm,t(">, "),fm,t(": "),gm,t("<"),mm,t(">, "),ym,t(": "),bm,t("<"),xm,t(">, "),vm,t(": "),Sm,t("<"),Tm,t(">) => "),km,t("<"),Cm,t(">")]),Pm,e("table",null,[wm,e("tbody",null,[e("tr",null,[Mm,e("td",Im,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Em]),_:1})])]),Fm,Dm,Rm,Bm,Nm])]),Lm,e("table",null,[Om,e("tbody",null,[Am,e("tr",null,[Hm,e("td",jm,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Gm]),_:1}),t("<"),qm,t(", "),Vm,t(">")])]),zm,Zm,Um])]),Qm,Km,Wm,e("p",null,[e("a",$m,[t("core/types/commandType/CommandAfterGuardHook.ts:10"),n(l)])]),Ym,Jm,e("p",null,[t("Ƭ "),Xm,t("<"),ey,t(", "),ty,t(", "),ny,t(", "),oy,t(", "),sy,t(">: ("),ly,t(": "),dy,t(", "),ay,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[iy]),_:1}),t("<"),cy,t(", "),ry,t(">, "),uy,t(": "),hy,t("<"),_y,t(">, "),py,t(": "),fy,t("<"),gy,t(">) => "),my,t("<"),yy,t(">")]),by,e("table",null,[xy,e("tbody",null,[e("tr",null,[vy,e("td",Sy,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Ty]),_:1})])]),ky,Cy,Py,wy])]),My,e("table",null,[Iy,e("tbody",null,[Ey,e("tr",null,[Fy,e("td",Dy,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Ry]),_:1}),t("<"),By,t(", "),Ny,t(">")])]),Ly,Oy])]),Ay,Hy,jy,e("p",null,[e("a",Gy,[t("core/types/commandType/CommandBeforeGuardHook.ts:11"),n(l)])]),qy,e("table",null,[Vy,e("tbody",null,[e("tr",null,[zy,e("td",Zy,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Uy]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Qy]),_:1})])]),e("tr",null,[Ky,e("td",Wy,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[$y]),_:1})])]),Yy,Jy,Xy,eb,tb,nb])]),ob,e("table",null,[sb,e("tbody",null,[e("tr",null,[lb,e("td",db,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[ab]),_:1}),t("<"),ib,t(", "),cb,t(", "),rb,t(", "),ub,t(", "),hb,t(", "),_b,t(">")]),pb]),fb,gb,e("tr",null,[mb,e("td",yb,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[bb]),_:1})]),xb]),vb,e("tr",null,[Sb,e("td",Tb,[t("{ "),kb,t(": "),Cb,t("<"),Pb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[wb]),_:1}),t("<"),Mb,t(", "),Ib,t(", "),Eb,t(", "),Fb,t(", "),Db,t(", "),Rb,t(">> ; "),Bb,t(": "),Nb,t("<"),Lb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[Ob]),_:1}),t("<"),Ab,t(", "),Hb,t(", "),jb,t(", "),Gb,t(", "),qb,t(">> ; "),Vb,t(": { "),zb,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Zb]),_:1}),t("<"),Ub,t(", "),Qb,t(", "),Kb,t("> ; "),Wb,t(": "),$b,t(" ; "),Yb,t(": "),Jb,t(" } ; "),Xb,t(": { "),ex,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[tx]),_:1}),t("<"),nx,t(", "),ox,t(", "),sx,t(", "),lx,t(", "),dx,t("> ; "),ax,t(": "),ix,t(" } }")]),cx]),e("tr",null,[rx,e("td",ux,[hx,t("<"),_x,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[px]),_:1}),t("<"),fx,t(", "),gx,t(", "),mx,t(", "),yx,t(", "),bx,t(", "),xx,t(">>")]),vx]),e("tr",null,[Sx,e("td",Tx,[kx,t("<"),Cx,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[Px]),_:1}),t("<"),wx,t(", "),Mx,t(", "),Ix,t(", "),Ex,t(", "),Fx,t(">>")]),Dx]),e("tr",null,[Rx,e("td",Bx,[t("{ "),Nx,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Lx]),_:1}),t("<"),Ox,t(", "),Ax,t(", "),Hx,t("> ; "),jx,t(": "),Gx,t(" ; "),qx,t(": "),Vx,t(" }")]),zx]),e("tr",null,[Zx,e("td",Ux,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Qx]),_:1}),t("<"),Kx,t(", "),Wx,t(", "),$x,t(">")]),Yx]),Jx,Xx,e("tr",null,[e3,e("td",t3,[t("{ "),n3,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[o3]),_:1}),t("<"),s3,t(", "),l3,t(", "),d3,t(", "),a3,t(", "),i3,t("> ; "),c3,t(": "),r3,t(" }")]),u3]),e("tr",null,[h3,e("td",_3,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[p3]),_:1}),t("<"),f3,t(", "),g3,t(", "),m3,t(", "),y3,t(", "),b3,t(">")]),x3]),v3,S3])]),T3,e("p",null,[e("a",k3,[t("core/types/commandType/CommandDefinition.ts:17"),n(l)])]),C3,P3,e("p",null,[t("Ƭ "),w3,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[M3]),_:1}),t("<{ "),I3,t(": "),E3,t(" ; "),F3,t(": "),D3,t(" ; "),R3,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[B3]),_:1}),t(" ; "),N3,t(": "),L3,t(" ; "),O3,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[A3]),_:1}),t(" ; "),H3,t(": { "),j3,t(": "),G3,t(" ; "),q3,t(": "),V3,t(" ; "),z3,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Z3]),_:1}),t(" } ; "),U3,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[Q3]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[K3]),_:1}),t(">")]),W3,$3,e("p",null,[e("a",Y3,[t("core/types/commandType/CommandErrorResponse.ts:13"),n(l)])]),J3,X3,e("p",null,[t("Ƭ "),ev,t("<"),tv,t(", "),nv,t(", "),ov,t(", "),sv,t(", "),lv,t(", "),dv,t(">: ("),av,t(": "),iv,t(", "),cv,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[rv]),_:1}),t("<"),uv,t(", "),hv,t(">, "),_v,t(": "),pv,t("<"),fv,t(">, "),gv,t(": "),mv,t("<"),yv,t(">) => "),bv,t("<"),xv,t(">")]),vv,e("table",null,[Sv,e("tbody",null,[e("tr",null,[Tv,e("td",kv,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Cv]),_:1})])]),Pv,wv,Mv,Iv,Ev])]),Fv,e("table",null,[Dv,e("tbody",null,[Rv,e("tr",null,[Bv,e("td",Nv,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Lv]),_:1}),t("<"),Ov,t(", "),Av,t(">")])]),Hv,jv])]),Gv,qv,Vv,e("p",null,[e("a",zv,[t("core/types/commandType/CommandFunction.ts:9"),n(l)])]),Zv,Uv,e("p",null,[t("Ƭ "),Qv,t("<"),Kv,t(", "),Wv,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$v]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[Yv]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[Jv]),_:1}),t("<"),Xv,t(", "),e2,t(">>")]),t2,e("p",null,[e("a",n2,[t("core/types/commandType/CommandFunctionContext.ts:47"),n(l)])]),o2,e("table",null,[s2,e("tbody",null,[e("tr",null,[l2,e("td",d2,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[a2]),_:1})]),i2]),e("tr",null,[c2,e("td",r2,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[u2]),_:1})]),h2]),e("tr",null,[_2,e("td",p2,[f2,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[g2]),_:1}),t("<"),m2,t(", "),y2,t(">>")]),b2])])]),x2,e("p",null,[e("a",v2,[t("core/types/commandType/CommandFunctionContext.ts:16"),n(l)])]),S2,T2,e("p",null,[t("Ƭ "),k2,t("<"),C2,t(">: "),n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[P2]),_:1}),t("<"),w2,t("> | "),n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[M2]),_:1})]),I2,e("p",null,[e("a",E2,[t("core/types/commandType/CommandResponse.ts:9"),n(l)])]),F2,D2,e("p",null,[t("Ƭ "),R2,t("<"),B2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[N2]),_:1}),t("<{ "),L2,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[O2]),_:1}),t(" ; "),A2,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[H2]),_:1}),t(" ; "),j2,t(": "),G2,t(" ; "),q2,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[V2]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[z2]),_:1}),t(">")]),Z2,e("p",null,[e("a",U2,[t("core/types/commandType/CommandSuccessResponse.ts:13"),n(l)])]),Q2,K2,e("p",null,[t("Ƭ "),W2,t("<"),$2,t(", "),Y2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[J2]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[X2]),_:1}),t(" & { "),e4,t(": "),t4,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[n4]),_:1}),t("<"),o4,t(", "),s4,t(">> }>")]),l4,e("p",null,[e("a",d4,[t("core/types/commandType/CommandTransformFunctionContext.ts:8"),n(l)])]),a4,i4,e("p",null,[t("Ƭ "),c4,t("<"),r4,t(", "),u4,t(", "),h4,t(", "),_4,t(", "),p4,t(">: ("),f4,t(": "),g4,t(", "),m4,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[y4]),_:1}),t("<"),b4,t(", "),x4,t(">, "),v4,t(": "),S4,t("<"),T4,t(">, "),k4,t(": "),C4,t("<"),P4,t(">) => "),w4,t("<{ "),M4,t(": "),I4,t("<"),E4,t("> ; "),F4,t(": "),D4,t("<"),R4,t("> }>")]),B4,e("table",null,[N4,e("tbody",null,[L4,e("tr",null,[O4,e("td",A4,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[H4]),_:1}),t("<"),j4,t(", "),G4,t(">")])]),q4,V4])]),z4,e("p",null,[e("a",Z4,[t("core/types/commandType/CommandTransformInputHook.ts:12"),n(l)])]),U4,Q4,e("p",null,[t("Ƭ "),K4,t("<"),W4,t(", "),$4,t(", "),Y4,t(", "),J4,t(", "),X4,t(">: ("),eS,t(": "),tS,t(", "),nS,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[oS]),_:1}),t("<"),sS,t(", "),lS,t(">, "),dS,t(": "),aS,t("<"),iS,t(">, "),cS,t(": "),rS,t("<"),uS,t(">) => "),hS,t("<"),_S,t(">")]),pS,e("table",null,[fS,e("tbody",null,[gS,e("tr",null,[mS,e("td",yS,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[bS]),_:1}),t("<"),xS,t(", "),vS,t(">")])]),SS,TS])]),kS,CS,PS,e("p",null,[e("a",wS,[t("core/types/commandType/CommandTransformOutputHook.ts:7"),n(l)])]),MS,IS,ES,FS,DS,e("table",null,[RS,e("tbody",null,[e("tr",null,[BS,e("td",NS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[LS]),_:1})])])])]),OS,AS,HS,jS,e("p",null,[e("a",GS,[t("core/types/commandType/isCommand.impl.ts:12"),n(l)])]),qS,e("p",null,[e("a",VS,[t("core/types/commandType/isCommandErrorResponse.impl.ts:12"),n(l)])]),zS,ZS,US,QS,KS,e("table",null,[WS,e("tbody",null,[e("tr",null,[$S,e("td",YS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[JS]),_:1})])])])]),XS,eT,tT,nT,e("p",null,[e("a",oT,[t("core/types/commandType/isCommandResponse.impl.ts:12"),n(l)])]),sT,lT,dT,aT,iT,e("table",null,[cT,e("tbody",null,[e("tr",null,[rT,e("td",uT,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[hT]),_:1})])])])]),_T,pT,fT,gT,e("p",null,[e("a",mT,[t("core/types/commandType/isCommandSuccessResponse.impl.ts:12"),n(l)])]),yT,e("p",null,[e("a",bT,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:61"),n(l)])]),xT,e("p",null,[e("a",vT,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:17"),n(l)])]),ST,TT,kT,e("p",null,[e("a",CT,[t("core/EventBridge/types/EventBridge.ts:19"),n(l)])]),PT,wT,MT,IT,e("table",null,[ET,e("tbody",null,[FT,DT,RT,e("tr",null,[BT,e("td",NT,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[LT]),_:1}),t(" | "),OT]),AT]),HT])]),jT,e("p",null,[e("a",GT,[t("core/EventBridge/types/EventBridgeEvents.ts:20"),n(l)])]),qT,VT,zT,ZT,e("table",null,[UT,e("tbody",null,[e("tr",null,[QT,e("td",KT,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[WT]),_:1})])])])]),$T,YT,JT,e("p",null,[e("a",XT,[t("core/helper/getCommandQueueName.impl.ts:10"),n(l)])]),e5,e("p",null,[e("a",t5,[t("helper/string/convertToCamelCase.impl.ts:9"),n(l)])]),n5,e("p",null,[e("a",o5,[t("helper/string/convertToKebabCase.impl.ts:9"),n(l)])]),s5,e("p",null,[e("a",l5,[t("helper/string/convertToPascalCase.impl.ts:9"),n(l)])]),d5,e("p",null,[e("a",a5,[t("helper/string/convertToSnakeCase.impl.ts:9"),n(l)])]),i5,c5,e("p",null,[t("▸ "),r5,t("("),u5,t(", "),h5,t(", "),_5,t(", "),p5,t("): "),f5,t("<"),g5,t("<{ "),m5,t(": "),y5,t(" ; "),b5,t(": "),x5,t(" ; "),v5,t(": "),S5,t(" ; "),T5,t(": "),k5,t(" ; "),C5,t(": "),P5,t(" ; "),w5,t(": "),M5,t(" ; "),I5,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[E5]),_:1}),t(" ; "),F5,t(": "),D5,t(" ; "),R5,t(": { "),B5,t(": "),N5,t(" ; "),L5,t(": "),O5,t(" ; "),A5,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[H5]),_:1}),t(" } ; "),j5,t(": "),G5,t(" ; "),q5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),V5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),z5,t(": "),Z5,t(" ; "),U5,t(": "),Q5,t(" ; "),K5,t(": "),W5,t(" }, "),$5,t(">>")]),Y5,J5,e("table",null,[X5,e("tbody",null,[ek,e("tr",null,[tk,e("td",nk,[ok,t("<{ "),sk,t(": "),lk,t(" ; "),dk,t(": "),ak,t(" ; "),ik,t(": "),ck,t(" ; "),rk,t(": "),uk,t(" ; "),hk,t(": "),_k,t(" ; "),pk,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[fk]),_:1}),t(" ; "),gk,t(": "),mk,t(" ; "),yk,t(": { "),bk,t(": "),xk,t(" ; "),vk,t(": "),Sk,t(" } ; "),Tk,t(": "),kk,t(" ; "),Ck,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Pk]),_:1}),t(" ; "),wk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Mk,t(": "),Ik,t(" ; "),Ek,t(": "),Fk,t(" ; "),Dk,t(": "),Rk,t(" }>")]),Bk]),e("tr",null,[Nk,e("td",Lk,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Ok]),_:1})]),Ak]),Hk])]),jk,e("p",null,[Gk,t("<"),qk,t("<{ "),Vk,t(": "),zk,t(" ; "),Zk,t(": "),Uk,t(" ; "),Qk,t(": "),Kk,t(" ; "),Wk,t(": "),$k,t(" ; "),Yk,t(": "),Jk,t(" ; "),Xk,t(": "),e9,t(" ; "),t9,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[n9]),_:1}),t(" ; "),o9,t(": "),s9,t(" ; "),l9,t(": { "),d9,t(": "),a9,t(" ; "),i9,t(": "),c9,t(" ; "),r9,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[u9]),_:1}),t(" } ; "),h9,t(": "),_9,t(" ; "),p9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),f9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),g9,t(": "),m9,t(" ; "),y9,t(": "),b9,t(" ; "),x9,t(": "),v9,t(" }, "),S9,t(">>")]),T9,k9,e("p",null,[e("a",C9,[t("core/helper/createErrorResponse.impl.ts:18"),n(l)])]),P9,w9,e("p",null,[t("▸ "),M9,t("("),I9,t(", "),E9,t(", "),F9,t("): "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[D9]),_:1})]),R9,e("table",null,[B9,e("tbody",null,[e("tr",null,[N9,e("td",L9,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[O9]),_:1})]),A9]),H9,j9,G9,q9,V9,e("tr",null,[z9,e("td",Z9,[U9,t("<"),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[Q9]),_:1}),t(">")]),K9])])]),W9,e("p",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[$9]),_:1})]),Y9,e("p",null,[e("a",J9,[t("core/helper/createInfoMessage.impl.ts:14"),n(l)])]),X9,e6,e("p",null,[t("▸ "),t6,t("<"),n6,t(">("),o6,t(", "),s6,t(", "),l6,t(", "),d6,t(", "),a6,t(", "),i6,t("): "),c6,t("<{ "),r6,t(": "),u6,t(" ; "),h6,t(": "),_6,t(" ; "),p6,t(": "),f6,t(" ; "),g6,t(": "),m6,t(" ; "),y6,t(": "),b6,t(" ; "),x6,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[v6]),_:1}),t(" ; "),S6,t(": "),T6,t(" ; "),k6,t(": "),C6,t(" ; "),P6,t(": "),w6,t(" ; "),M6,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),I6,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),E6,t(": "),F6,t(" ; "),D6,t(": "),R6,t(" ; "),B6,t(": "),N6,t(" }>")]),L6,e("table",null,[O6,e("tbody",null,[A6,e("tr",null,[H6,e("td",j6,[G6,t("<{ "),q6,t(": "),V6,t(" ; "),z6,t(": "),Z6,t(" ; "),U6,t(": "),Q6,t(" ; "),K6,t(": "),W6,t(" ; "),$6,t(": "),Y6,t(" ; "),J6,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[X6]),_:1}),t(" ; "),e0,t(": "),t0,t(" ; "),n0,t(": { "),o0,t(": "),s0,t(" ; "),l0,t(": "),d0,t(" } ; "),a0,t(": "),i0,t(" ; "),c0,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[r0]),_:1}),t(" ; "),u0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),h0,t(": "),_0,t(" ; "),p0,t(": "),f0,t(" ; "),g0,t(": "),m0,t(" }>")]),y0]),b0,x0,v0,S0])]),T0,e("p",null,[k0,t("<{ "),C0,t(": "),P0,t(" ; "),w0,t(": "),M0,t(" ; "),I0,t(": "),E0,t(" ; "),F0,t(": "),D0,t(" ; "),R0,t(": "),B0,t(" ; "),N0,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[L0]),_:1}),t(" ; "),O0,t(": "),A0,t(" ; "),H0,t(": "),j0,t(" ; "),G0,t(": "),q0,t(" ; "),V0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),z0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Z0,t(": "),U0,t(" ; "),Q0,t(": "),K0,t(" ; "),W0,t(": "),$0,t(" }>")]),Y0,e("p",null,[e("a",J0,[t("core/helper/createSuccessResponse.impl.ts:15"),n(l)])]),X0,e("table",null,[e7,e("tbody",null,[e("tr",null,[t7,e("td",n7,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[o7]),_:1})])]),s7])]),l7,d7,a7,e("p",null,[e("a",i7,[t("core/helper/serializeOtp.impl.ts:26"),n(l)])]),c7,e("table",null,[r7,e("tbody",null,[e("tr",null,[u7,e("td",h7,[_7,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[p7]),_:1}),t(">")]),f7]),g7])]),m7,y7,b7,e("p",null,[e("a",x7,[t("core/helper/getCleanedMessage.impl.ts:15"),n(l)])]),v7,S7,T7,k7,e("table",null,[C7,e("tbody",null,[e("tr",null,[P7,e("td",w7,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[M7]),_:1})])])])]),I7,E7,F7,e("p",null,[e("a",D7,[t("core/helper/getErrorMessageForCode.impl.ts:10"),n(l)])]),R7,e("p",null,[e("a",B7,[t("core/helper/getNewCorrelationId.impl.ts:10"),n(l)])]),N7,e("p",null,[e("a",L7,[t("core/helper/getNewEBMessageId.impl.ts:11"),n(l)])]),O7,e("p",null,[e("a",A7,[t("core/helper/getNewInstanceId.impl.ts:9"),n(l)])]),H7,e("p",null,[e("a",j7,[t("core/helper/getNewTraceId.impl.ts:9"),n(l)])]),G7,q7,V7,z7,e("table",null,[Z7,e("tbody",null,[e("tr",null,[U7,e("td",Q7,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[K7]),_:1})])])])]),W7,$7,Y7,e("p",null,[e("a",J7,[t("core/helper/getSubscriptionQueueName.impl.ts:10"),n(l)])]),X7,e("p",null,[e("a",e8,[t("core/helper/getUniqueId.impl.ts:11"),n(l)])]),t8,e("table",null,[n8,e("tbody",null,[e("tr",null,[o8,e("td",s8,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[l8]),_:1})]),d8,a8]),e("tr",null,[i8,e("td",c8,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[r8]),_:1}),t("[]")]),u8,h8]),_8])]),p8,e("p",null,[e("a",f8,[t("helper/gracefulShutdown.impl.ts:36"),n(l)])]),g8,e("p",null,[e("a",m8,[t("core/helper/isDevelop.impl.ts:6"),n(l)])]),y8,e("p",null,[e("a",b8,[t("core/helper/serializeOtp.impl.ts:11"),n(l)])]),x8,v8,S8,T8,e("p",null,[e("a",k8,[t("core/types/ServiceEvents.ts:11"),n(l)])]),C8,e("p",null,[e("a",P8,[t("core/Service/Service.impl.ts:76"),n(l)])]),w8,e("table",null,[M8,e("tbody",null,[I8,E8,e("tr",null,[F8,e("td",D8,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[R8]),_:1}),t(" = "),n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[B8]),_:1}),t("<"),N8,t(">")])])])]),L8,e("p",null,[e("a",O8,[t("ServiceBuilder/ServiceBuilder.impl.ts:38"),n(l)])]),A8,e("p",null,[e("a",H8,[t("core/types/ServiceClass.ts:11"),n(l)])]),j8,e("table",null,[G8,e("tbody",null,[e("tr",null,[q8,e("td",V8,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[z8]),_:1}),t("<"),Z8,t(">")]),U8]),Q8,e("tr",null,[K8,e("td",W8,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[$8]),_:1})]),Y8]),e("tr",null,[J8,e("td",X8,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[eC]),_:1})]),tC]),e("tr",null,[nC,e("td",oC,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[sC]),_:1})]),lC]),e("tr",null,[dC,e("td",aC,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[iC]),_:1})]),cC]),e("tr",null,[rC,e("td",uC,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[hC]),_:1})]),_C]),pC,e("tr",null,[fC,e("td",gC,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[mC]),_:1})]),yC]),e("tr",null,[bC,e("td",xC,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[vC]),_:1}),t("<"),SC,t(">")]),TC])])]),kC,e("p",null,[e("a",CC,[t("core/types/ServiceConstructorInput.ts:15"),n(l)])]),PC,e("table",null,[wC,e("tbody",null,[MC,IC,e("tr",null,[EC,e("td",FC,[t("{ "),DC,t(": "),RC,t(" ; "),BC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[NC]),_:1}),t(" ; "),LC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[OC]),_:1}),t(" }")]),AC]),HC,e("tr",null,[jC,e("td",GC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[qC]),_:1})]),VC]),e("tr",null,[zC,e("td",ZC,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[UC]),_:1})]),QC]),e("tr",null,[KC,e("td",WC,[t("{ "),$C,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[YC]),_:1}),t(" ; "),JC,t(": "),XC,t(" ; "),eP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[tP]),_:1}),t(" }")]),nP]),e("tr",null,[oP,e("td",sP,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[lP]),_:1})]),dP]),aP,e("tr",null,[iP,e("td",cP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[rP]),_:1})]),uP]),hP,_P,pP,e("tr",null,[fP,e("td",gP,[t("{ "),mP,t(": "),yP,t(" ; "),bP,t(": "),xP,t(" ; "),vP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[SP]),_:1}),t(" }")]),TP]),kP,CP,e("tr",null,[PP,e("td",wP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[MP]),_:1})]),IP]),e("tr",null,[EP,e("td",FP,[t("{ "),DP,t(": "),RP,t(" ; "),BP,t(": "),NP,t(" ; "),LP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[OP]),_:1}),t(" }")]),AP]),HP,jP,e("tr",null,[GP,e("td",qP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[VP]),_:1})]),zP])])]),ZP,e("p",null,[e("a",UP,[t("core/types/ServiceEvents.ts:54"),n(l)])]),QP,e("p",null,[e("a",KP,[t("core/ConfigStore/ConfigStoreBaseClass.impl.ts:11"),n(l)])]),WP,e("p",null,[e("a",$P,[t("DefaultConfigStore/DefaultConfigStore.impl.ts:25"),n(l)])]),YP,e("p",null,[e("a",JP,[t("DefaultSecretStore/DefaultSecretStore.impl.ts:33"),n(l)])]),XP,ew,tw,e("p",null,[e("a",nw,[t("DefaultStateStore/DefaultStateStore.impl.ts:11"),n(l)])]),ow,e("p",null,[e("a",sw,[t("core/SecretStore/SecretStoreBaseClass.impl.ts:11"),n(l)])]),lw,e("p",null,[e("a",dw,[t("core/StateStore/StateStoreBaseClass.impl.ts:11"),n(l)])]),aw,iw,cw,e("p",null,[e("a",rw,[t("core/ConfigStore/types/ConfigStore.ts:10"),n(l)])]),uw,hw,_w,e("p",null,[e("a",pw,[t("core/SecretStore/types/SecretStore.ts:9"),n(l)])]),fw,gw,mw,e("p",null,[e("a",yw,[t("core/StateStore/types/StateStore.ts:10"),n(l)])]),bw,e("p",null,[e("a",xw,[t("core/ConfigStore/types/ConfigDeleteFunction.ts:2"),n(l)])]),vw,e("p",null,[e("a",Sw,[t("core/ConfigStore/types/ConfigGetterFunction.ts:2"),n(l)])]),Tw,e("p",null,[e("a",kw,[t("core/ConfigStore/types/ConfigSetterFunction.ts:2"),n(l)])]),Cw,e("p",null,[e("a",Pw,[t("core/SecretStore/types/SecretDeleteFunction.ts:2"),n(l)])]),ww,e("p",null,[e("a",Mw,[t("core/SecretStore/types/SecretGetterFunction.ts:2"),n(l)])]),Iw,e("p",null,[e("a",Ew,[t("core/SecretStore/types/SecretSetterFunction.ts:2"),n(l)])]),Fw,e("p",null,[e("a",Dw,[t("core/StateStore/types/StateDeleteFunction.ts:2"),n(l)])]),Rw,e("p",null,[e("a",Bw,[t("core/StateStore/types/StateGetterFunction.ts:2"),n(l)])]),Nw,e("p",null,[e("a",Lw,[t("core/StateStore/types/StateSetterFunction.ts:2"),n(l)])]),Ow,e("table",null,[Aw,e("tbody",null,[e("tr",null,[Hw,e("td",jw,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Gw]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[qw]),_:1})])]),Vw,zw,Zw,Uw,Qw,Kw])]),Ww,e("p",null,[e("a",$w,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:31"),n(l)])]),Yw,e("table",null,[Jw,e("tbody",null,[Xw,e("tr",null,[eM,e("td",tM,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[nM]),_:1})]),oM]),sM,e("tr",null,[lM,e("td",dM,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[aM]),_:1})]),iM]),cM,rM,uM,e("tr",null,[hM,e("td",_M,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[pM]),_:1})]),fM]),e("tr",null,[gM,e("td",mM,[t("{ "),yM,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[bM]),_:1}),t(" ; "),xM,t(": "),vM,t(" ; "),SM,t(": "),TM,t(" ; "),kM,t(": "),CM,t(" }")]),PM]),e("tr",null,[wM,e("td",MM,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[IM]),_:1})]),EM]),FM,DM,RM,e("tr",null,[BM,e("td",NM,[t("{ "),LM,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[OM]),_:1}),t(" ; "),AM,t(": "),HM,t(" ; "),jM,t(": "),GM,t(" ; "),qM,t(": "),VM,t(" }")]),zM]),e("tr",null,[ZM,e("td",UM,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[QM]),_:1})]),KM]),WM,$M,YM,e("tr",null,[JM,e("td",XM,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[eI]),_:1})]),tI]),e("tr",null,[nI,e("td",oI,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[sI]),_:1})]),lI])])]),dI,e("p",null,[e("a",aI,[t("core/types/subscription/Subscription.ts:13"),n(l)])]),iI,cI,e("p",null,[t("Ƭ "),rI,t("<"),uI,t(", "),hI,t(", "),_I,t(", "),pI,t(">: ("),fI,t(": "),gI,t(", "),mI,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[yI]),_:1}),t(", "),bI,t(": "),xI,t("<"),vI,t(">, "),SI,t(": "),TI,t("<"),kI,t(">, "),CI,t(": "),PI,t("<"),wI,t(">) => "),MI,t("<"),II,t(">")]),EI,e("table",null,[FI,e("tbody",null,[e("tr",null,[DI,e("td",RI,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[BI]),_:1})])]),NI,LI,OI])]),AI,e("table",null,[HI,e("tbody",null,[jI,e("tr",null,[GI,e("td",qI,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[VI]),_:1})])]),zI,ZI,UI])]),QI,KI,WI,e("p",null,[e("a",$I,[t("core/types/subscription/SubscriptionAfterGuardHook.ts:10"),n(l)])]),YI,JI,e("p",null,[t("Ƭ "),XI,t("<"),eE,t(", "),tE,t(", "),nE,t(">: ("),oE,t(": "),sE,t(", "),lE,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[dE]),_:1}),t(", "),aE,t(": "),iE,t("<"),cE,t(">, "),rE,t(": "),uE,t("<"),hE,t(">) => "),_E,t("<"),pE,t(">")]),fE,e("table",null,[gE,e("tbody",null,[e("tr",null,[mE,e("td",yE,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[bE]),_:1})])]),xE,vE])]),SE,e("table",null,[TE,e("tbody",null,[kE,e("tr",null,[CE,e("td",PE,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[wE]),_:1})])]),ME,IE])]),EE,FE,DE,e("p",null,[e("a",RE,[t("core/types/subscription/SubscriptionBeforeGuardHook.ts:11"),n(l)])]),BE,e("table",null,[NE,e("tbody",null,[e("tr",null,[LE,e("td",OE,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[AE]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[HE]),_:1})])]),e("tr",null,[jE,e("td",GE,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[qE]),_:1})])]),VE,zE,ZE,UE,QE,KE])]),WE,e("table",null,[$E,e("tbody",null,[e("tr",null,[YE,e("td",JE,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[XE]),_:1}),t("<"),eF,t(", "),tF,t(", "),nF,t(", "),oF,t(", "),sF,t(", "),lF,t(">")]),dF]),aF,e("tr",null,[iF,e("td",cF,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[rF]),_:1})]),uF]),hF,e("tr",null,[_F,e("td",pF,[t("{ "),fF,t(": "),gF,t("<"),mF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[yF]),_:1}),t("<"),bF,t(", "),xF,t(", "),vF,t(", "),SF,t(">> ; "),TF,t(": "),kF,t("<"),CF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[PF]),_:1}),t("<"),wF,t(", "),MF,t(", "),IF,t(">> ; "),EF,t(": { "),FF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[DF]),_:1}),t("<"),RF,t(", "),BF,t(", "),NF,t("> ; "),LF,t(": "),OF,t(" ; "),AF,t(": "),HF,t(" } ; "),jF,t(": { "),GF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[qF]),_:1}),t("<"),VF,t(", "),zF,t(", "),ZF,t(", "),UF,t("> ; "),QF,t(": "),KF,t(" } }")]),WF]),e("tr",null,[$F,e("td",YF,[JF,t("<"),XF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[eD]),_:1}),t("<"),tD,t(", "),nD,t(", "),oD,t(", "),sD,t(">>")]),lD]),e("tr",null,[dD,e("td",aD,[iD,t("<"),cD,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[rD]),_:1}),t("<"),uD,t(", "),hD,t(", "),_D,t(">>")]),pD]),e("tr",null,[fD,e("td",gD,[t("{ "),mD,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[yD]),_:1}),t("<"),bD,t(", "),xD,t(", "),vD,t("> ; "),SD,t(": "),TD,t(" ; "),kD,t(": "),CD,t(" }")]),PD]),e("tr",null,[wD,e("td",MD,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[ID]),_:1}),t("<"),ED,t(", "),FD,t(", "),DD,t(">")]),RD]),BD,ND,e("tr",null,[LD,e("td",OD,[t("{ "),AD,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[HD]),_:1}),t("<"),jD,t(", "),GD,t(", "),qD,t(", "),VD,t("> ; "),zD,t(": "),ZD,t(" }")]),UD]),e("tr",null,[QD,e("td",KD,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[WD]),_:1}),t("<"),$D,t(", "),YD,t(", "),JD,t(", "),XD,t(">")]),eR]),tR,e("tr",null,[nR,e("td",oR,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[sR]),_:1})]),lR]),dR,e("tr",null,[aR,e("td",iR,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[cR]),_:1})]),rR]),e("tr",null,[uR,e("td",hR,[t("{ "),_R,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[pR]),_:1}),t(" ; "),fR,t(": "),gR,t(" ; "),mR,t(": "),yR,t(" ; "),bR,t(": "),xR,t(" }")]),vR]),e("tr",null,[SR,e("td",TR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[kR]),_:1})]),CR]),PR,wR,MR,e("tr",null,[IR,e("td",ER,[t("{ "),FR,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[DR]),_:1}),t(" ; "),RR,t(": "),BR,t(" ; "),NR,t(": "),LR,t(" ; "),OR,t(": "),AR,t(" }")]),HR]),e("tr",null,[jR,e("td",GR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[qR]),_:1})]),VR]),zR,ZR,UR,QR,KR,e("tr",null,[WR,e("td",$R,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[YR]),_:1})]),JR])])]),XR,e("p",null,[e("a",eB,[t("core/types/subscription/SubscriptionDefinition.ts:21"),n(l)])]),tB,nB,e("p",null,[t("Ƭ "),oB,t("<"),sB,t(", "),lB,t(", "),dB,t(", "),aB,t(", "),iB,t(", "),cB,t(">: ("),rB,t(": "),uB,t(", "),hB,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[_B]),_:1}),t(", "),pB,t(": "),fB,t("<"),gB,t(">, "),mB,t(": "),yB,t("<"),bB,t(">) => "),xB,t("<"),vB,t(">")]),SB,e("table",null,[TB,e("tbody",null,[e("tr",null,[kB,e("td",CB,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[PB]),_:1})])]),wB,MB,IB,EB,FB])]),DB,e("table",null,[RB,e("tbody",null,[BB,e("tr",null,[NB,e("td",LB,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[OB]),_:1})])]),AB,HB])]),jB,GB,qB,e("p",null,[e("a",VB,[t("core/types/subscription/SubscriptionFunction.ts:8"),n(l)])]),zB,ZB,e("p",null,[t("Ƭ "),UB,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[QB]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[KB]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[WB]),_:1}),t(">")]),$B,YB,e("p",null,[e("a",JB,[t("core/types/subscription/SubscriptionFunctionContext.ts:47"),n(l)])]),XB,e("table",null,[eN,e("tbody",null,[e("tr",null,[tN,e("td",nN,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[oN]),_:1})]),sN]),e("tr",null,[lN,e("td",dN,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[aN]),_:1})]),iN]),e("tr",null,[cN,e("td",rN,[uN,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[hN]),_:1}),t(">")]),_N])])]),pN,e("p",null,[e("a",fN,[t("core/types/subscription/SubscriptionFunctionContext.ts:16"),n(l)])]),gN,mN,e("p",null,[t("Ƭ "),yN,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[bN]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[xN]),_:1}),t(" & { "),vN,t(": "),SN,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[TN]),_:1}),t("> }>")]),kN,e("p",null,[e("a",CN,[t("core/types/subscription/SubscriptionTransformFunctionContext.ts:8"),n(l)])]),PN,wN,e("p",null,[t("Ƭ "),MN,t("<"),IN,t(", "),EN,t(", "),FN,t(", "),DN,t(", "),RN,t(">: ("),BN,t(": "),NN,t(", "),LN,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[ON]),_:1}),t(", "),AN,t(": "),HN,t("<"),jN,t(">, "),GN,t(": "),qN,t("<"),VN,t(">) => "),zN,t("<{ "),ZN,t(": "),UN,t("<"),QN,t("> ; "),KN,t(": "),WN,t("<"),$N,t("> }>")]),YN,e("table",null,[JN,e("tbody",null,[XN,e("tr",null,[eL,e("td",tL,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[nL]),_:1})])]),oL,sL])]),lL,e("p",null,[e("a",dL,[t("core/types/subscription/SubscriptionTransformInputHook.ts:6"),n(l)])]),aL,iL,e("p",null,[t("Ƭ "),cL,t("<"),rL,t(", "),uL,t(", "),hL,t(", "),_L,t(">: ("),pL,t(": "),fL,t(", "),gL,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[mL]),_:1}),t(", "),yL,t(": "),bL,t("<"),xL,t(">, "),vL,t(": "),SL,t("<"),TL,t(">) => "),kL,t("<"),CL,t(">")]),PL,e("table",null,[wL,e("tbody",null,[ML,e("tr",null,[IL,e("td",EL,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[FL]),_:1})])]),DL,RL])]),BL,NL,LL,e("p",null,[e("a",OL,[t("core/types/subscription/SubscriptionTransformOutputHook.ts:8"),n(l)])]),AL,e("table",null,[HL,e("tbody",null,[e("tr",null,[jL,e("td",GL,[t("{ "),qL,t(": { "),VL,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[zL]),_:1}),t(" ; "),ZL,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[UL]),_:1}),t(" ; "),QL,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[KL]),_:1}),t(" } ; "),WL,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[$L]),_:1}),t(" ; "),YL,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[JL]),_:1}),t(" ; "),XL,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[eO]),_:1}),t(" ; "),tO,t(": "),nO,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }> ; "),oO,t(": { "),sO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[lO]),_:1}),t(" ; "),dO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[aO]),_:1}),t(" ; "),iO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[cO]),_:1}),t(" } ; "),rO,t(": <F>("),uO,t(": "),hO,t(", "),_O,t(": "),pO,t(", "),fO,t(": "),gO,t(" | "),mO,t(", "),yO,t(": ("),bO,t(": "),xO,t(") => "),vO,t("<"),SO,t(">) => "),TO,t("<"),kO,t("> ; "),CO,t(": { "),PO,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[wO]),_:1}),t(" ; "),MO,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[IO]),_:1}),t(" ; "),EO,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[FO]),_:1}),t(" } ; "),DO,t(": <F>("),RO,t(": "),BO,t(", "),NO,t(": "),LO,t(", "),OO,t(": ("),AO,t(": "),HO,t(") => "),jO,t("<"),GO,t(">, "),qO,t(": "),VO,t(") => "),zO,t("<"),ZO,t("> }")])]),e("tr",null,[UO,e("td",QO,[t("{ "),KO,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[WO]),_:1}),t(" ; "),$O,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[YO]),_:1}),t(" ; "),JO,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[XO]),_:1}),t(" }")])]),e("tr",null,[eA,e("td",tA,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[nA]),_:1})])]),e("tr",null,[oA,e("td",sA,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[lA]),_:1})])]),e("tr",null,[dA,e("td",aA,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[iA]),_:1})])]),e("tr",null,[cA,e("td",rA,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[uA]),_:1})])]),e("tr",null,[hA,e("td",_A,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[pA]),_:1})])]),e("tr",null,[fA,e("td",gA,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[mA]),_:1})])]),yA,e("tr",null,[bA,e("td",xA,[t("{ "),vA,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[SA]),_:1}),t(" ; "),TA,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[kA]),_:1}),t(" ; "),CA,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[PA]),_:1}),t(" }")])]),e("tr",null,[wA,e("td",MA,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[IA]),_:1})])]),e("tr",null,[EA,e("td",FA,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[DA]),_:1})])]),e("tr",null,[RA,e("td",BA,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[NA]),_:1})])]),LA,e("tr",null,[OA,e("td",AA,[t("{ "),HA,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[jA]),_:1}),t(" ; "),GA,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[qA]),_:1}),t(" ; "),VA,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[zA]),_:1}),t(" }")])]),e("tr",null,[ZA,e("td",UA,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[QA]),_:1})])]),e("tr",null,[KA,e("td",WA,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[$A]),_:1})])]),e("tr",null,[YA,e("td",JA,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[XA]),_:1})])]),eH,tH,nH,oH,sH,lH,dH,aH,iH,cH,rH,uH,hH,_H,pH,fH,gH,mH,yH,bH,xH,vH])]),SH,e("p",null,[e("a",TH,[t("mocks/getCommandContext.mock.ts:12"),n(l)])]),kH,CH,e("p",null,[t("▸ "),PH,t("("),wH,t(", "),MH,t(", "),IH,t("): "),EH,t("<{ "),FH,t(": "),DH,t(" ; "),RH,t(": "),BH,t(" ; "),NH,t(": "),LH,t(" ; "),OH,t(": "),AH,t(" ; "),HH,t(": "),jH,t(" ; "),GH,t(": "),qH,t(" ; "),VH,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[zH]),_:1}),t(" ; "),ZH,t(": "),UH,t(" ; "),QH,t(": { "),KH,t(": "),WH,t(" ; "),$H,t(": "),YH,t(" ; "),JH,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[XH]),_:1}),t(" } ; "),ej,t(": "),tj,t(" ; "),nj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),oj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),sj,t(": "),lj,t(" ; "),dj,t(": "),aj,t(" ; "),ij,t(": "),cj,t(" }>")]),rj,uj,e("table",null,[hj,e("tbody",null,[e("tr",null,[_j,e("td",pj,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[fj]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[gj]),_:1})]),mj]),e("tr",null,[yj,e("td",bj,[xj,t("<{ "),vj,t(": "),Sj,t(" ; "),Tj,t(": "),kj,t(" ; "),Cj,t(": "),Pj,t(" ; "),wj,t(": "),Mj,t(" ; "),Ij,t(": "),Ej,t(" ; "),Fj,t(": "),Dj,t(" ; "),Rj,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[Bj]),_:1}),t(" ; "),Nj,t(": "),Lj,t(" ; "),Oj,t(": { "),Aj,t(": "),Hj,t(" ; "),jj,t(": "),Gj,t(" ; "),qj,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Vj]),_:1}),t(" } ; "),zj,t(": "),Zj,t(" ; "),Uj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Qj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Kj,t(": "),Wj,t(" ; "),$j,t(": "),Yj,t(" ; "),Jj,t(": "),Xj,t(" }>")]),eG]),tG,nG,oG,sG,lG,dG,e("tr",null,[aG,e("td",iG,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[cG]),_:1})]),rG]),uG,hG,_G,pG,fG,e("tr",null,[gG,e("td",mG,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[yG]),_:1})]),bG]),xG,vG,SG,TG])]),kG,e("p",null,[CG,t("<{ "),PG,t(": "),wG,t(" ; "),MG,t(": "),IG,t(" ; "),EG,t(": "),FG,t(" ; "),DG,t(": "),RG,t(" ; "),BG,t(": "),NG,t(" ; "),LG,t(": "),OG,t(" ; "),AG,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[HG]),_:1}),t(" ; "),jG,t(": "),GG,t(" ; "),qG,t(": { "),VG,t(": "),zG,t(" ; "),ZG,t(": "),UG,t(" ; "),QG,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[KG]),_:1}),t(" } ; "),WG,t(": "),$G,t(" ; "),YG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),JG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),XG,t(": "),eq,t(" ; "),tq,t(": "),nq,t(" ; "),oq,t(": "),sq,t(" }>")]),lq,e("p",null,[e("a",dq,[t("mocks/messages/getCommandErrorMessage.mock.ts:16"),n(l)])]),aq,iq,e("p",null,[t("▸ "),cq,t("<"),rq,t(", "),uq,t(">("),hq,t("): "),_q,t("<{ "),pq,t(": "),fq,t(" ; "),gq,t(": "),mq,t(" ; "),yq,t(": "),bq,t(" ; "),xq,t(": "),vq,t(" ; "),Sq,t(": "),Tq,t(" ; "),kq,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Cq]),_:1}),t(" ; "),Pq,t(": "),wq,t(" ; "),Mq,t(": { "),Iq,t(": "),Eq,t(" ; "),Fq,t(": "),Dq,t(" } ; "),Rq,t(": "),Bq,t(" ; "),Nq,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Lq]),_:1}),t(" ; "),Oq,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Aq,t(": "),Hq,t(" ; "),jq,t(": "),Gq,t(" ; "),qq,t(": "),Vq,t(" }>")]),zq,e("table",null,[Zq,e("tbody",null,[e("tr",null,[Uq,e("td",Qq,[Kq,t("<{ "),Wq,t(": "),$q,t(" ; "),Yq,t(": "),Jq,t(" ; "),Xq,t(": "),eV,t(" ; "),tV,t(": "),nV,t(" ; "),oV,t(": "),sV,t(" ; "),lV,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[dV]),_:1}),t(" ; "),aV,t(": "),iV,t(" ; "),cV,t(": { "),rV,t(": "),uV,t(" ; "),hV,t(": "),_V,t(" } ; "),pV,t(": "),fV,t(" ; "),gV,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[mV]),_:1}),t(" ; "),yV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),bV,t(": "),xV,t(" ; "),vV,t(": "),SV,t(" ; "),TV,t(": "),kV,t(" }> & { "),CV,t(": { "),PV,t(": "),wV,t(" ; "),MV,t(": "),IV,t(" } }")])])])]),EV,e("p",null,[FV,t("<{ "),DV,t(": "),RV,t(" ; "),BV,t(": "),NV,t(" ; "),LV,t(": "),OV,t(" ; "),AV,t(": "),HV,t(" ; "),jV,t(": "),GV,t(" ; "),qV,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[VV]),_:1}),t(" ; "),zV,t(": "),ZV,t(" ; "),UV,t(": { "),QV,t(": "),KV,t(" ; "),WV,t(": "),$V,t(" } ; "),YV,t(": "),JV,t(" ; "),XV,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[ez]),_:1}),t(" ; "),tz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),nz,t(": "),oz,t(" ; "),sz,t(": "),lz,t(" ; "),dz,t(": "),az,t(" }>")]),iz,e("p",null,[e("a",cz,[t("mocks/messages/getCommandMessage.mock.ts:15"),n(l)])]),rz,uz,e("p",null,[t("▸ "),hz,t("<"),_z,t(">("),pz,t(", "),fz,t(", "),gz,t("): "),mz,t("<{ "),yz,t(": "),bz,t(" ; "),xz,t(": "),vz,t(" ; "),Sz,t(": "),Tz,t(" ; "),kz,t(": "),Cz,t(" ; "),Pz,t(": "),wz,t(" ; "),Mz,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[Iz]),_:1}),t(" ; "),Ez,t(": "),Fz,t(" ; "),Dz,t(": "),Rz,t(" ; "),Bz,t(": "),Nz,t(" ; "),Lz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Oz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Az,t(": "),Hz,t(" ; "),jz,t(": "),Gz,t(" ; "),qz,t(": "),Vz,t(" }>")]),zz,e("table",null,[Zz,e("tbody",null,[Uz,e("tr",null,[Qz,e("td",Kz,[Wz,t("<{ "),$z,t(": "),Yz,t(" ; "),Jz,t(": "),Xz,t(" ; "),eZ,t(": "),tZ,t(" ; "),nZ,t(": "),oZ,t(" ; "),sZ,t(": "),lZ,t(" ; "),dZ,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[aZ]),_:1}),t(" ; "),iZ,t(": "),cZ,t(" ; "),rZ,t(": "),uZ,t(" ; "),hZ,t(": "),_Z,t(" ; "),pZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),fZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),gZ,t(": "),mZ,t(" ; "),yZ,t(": "),bZ,t(" ; "),xZ,t(": "),vZ,t(" }>")]),SZ]),TZ,kZ,CZ,PZ,wZ,MZ,e("tr",null,[IZ,e("td",EZ,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[FZ]),_:1})]),DZ]),RZ,BZ,NZ,LZ,OZ,e("tr",null,[AZ,e("td",HZ,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[jZ]),_:1})]),GZ]),qZ,VZ,zZ,ZZ])]),UZ,e("p",null,[QZ,t("<{ "),KZ,t(": "),WZ,t(" ; "),$Z,t(": "),YZ,t(" ; "),JZ,t(": "),XZ,t(" ; "),eU,t(": "),tU,t(" ; "),nU,t(": "),oU,t(" ; "),sU,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[lU]),_:1}),t(" ; "),dU,t(": "),aU,t(" ; "),iU,t(": "),cU,t(" ; "),rU,t(": "),uU,t(" ; "),hU,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),_U,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),pU,t(": "),fU,t(" ; "),gU,t(": "),mU,t(" ; "),yU,t(": "),bU,t(" }>")]),xU,e("p",null,[e("a",vU,[t("mocks/messages/getCommandSuccessMessage.mock.ts:9"),n(l)])]),SU,e("table",null,[TU,e("tbody",null,[e("tr",null,[kU,e("td",CU,[t("{ "),PU,t(": { "),wU,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[MU]),_:1}),t(" ; "),IU,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[EU]),_:1}),t(" ; "),FU,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[DU]),_:1}),t(" } ; "),RU,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[BU]),_:1}),t(" ; "),NU,t(": "),LU,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }> ; "),OU,t(": { "),AU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[HU]),_:1}),t(" ; "),jU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[GU]),_:1}),t(" ; "),qU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[VU]),_:1}),t(" } ; "),zU,t(": <F>("),ZU,t(": "),UU,t(", "),QU,t(": "),KU,t(", "),WU,t(": "),$U,t(" | "),YU,t(", "),JU,t(": ("),XU,t(": "),eQ,t(") => "),tQ,t("<"),nQ,t(">) => "),oQ,t("<"),sQ,t("> ; "),lQ,t(": { "),dQ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[aQ]),_:1}),t(" ; "),iQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[cQ]),_:1}),t(" ; "),rQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[uQ]),_:1}),t(" } ; "),hQ,t(": <F>("),_Q,t(": "),pQ,t(", "),fQ,t(": "),gQ,t(", "),mQ,t(": ("),yQ,t(": "),bQ,t(") => "),xQ,t("<"),vQ,t(">, "),SQ,t(": "),TQ,t(") => "),kQ,t("<"),CQ,t("> }")])]),e("tr",null,[PQ,e("td",wQ,[t("{ "),MQ,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[IQ]),_:1}),t(" ; "),EQ,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[FQ]),_:1}),t(" ; "),DQ,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[RQ]),_:1}),t(" }")])]),e("tr",null,[BQ,e("td",NQ,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[LQ]),_:1})])]),e("tr",null,[OQ,e("td",AQ,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[HQ]),_:1})])]),e("tr",null,[jQ,e("td",GQ,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[qQ]),_:1})])]),e("tr",null,[VQ,e("td",zQ,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[ZQ]),_:1})])]),UQ,e("tr",null,[QQ,e("td",KQ,[t("{ "),WQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[$Q]),_:1}),t(" ; "),YQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[JQ]),_:1}),t(" ; "),XQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[eK]),_:1}),t(" }")])]),e("tr",null,[tK,e("td",nK,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[oK]),_:1})])]),e("tr",null,[sK,e("td",lK,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[dK]),_:1})])]),e("tr",null,[aK,e("td",iK,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[cK]),_:1})])]),rK,e("tr",null,[uK,e("td",hK,[t("{ "),_K,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[pK]),_:1}),t(" ; "),fK,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[gK]),_:1}),t(" ; "),mK,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[yK]),_:1}),t(" }")])]),e("tr",null,[bK,e("td",xK,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[vK]),_:1})])]),e("tr",null,[SK,e("td",TK,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[kK]),_:1})])]),e("tr",null,[CK,e("td",PK,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[wK]),_:1})])]),MK,IK,EK,FK,DK,RK,BK,NK,LK,OK,AK,HK,jK,GK,qK,VK,zK,ZK,UK,QK])]),KK,e("p",null,[e("a",WK,[t("mocks/getCommandTransformContext.mock.ts:12"),n(l)])]),$K,YK,e("p",null,[t("▸ "),JK,t("<"),XK,t(">("),eW,t(", "),tW,t(", "),nW,t("): "),oW,t("<{ "),sW,t(": "),lW,t(" ; "),dW,t(": "),aW,t(" ; "),iW,t(": "),cW,t(" ; "),rW,t(": "),uW,t(" ; "),hW,t(": "),_W,t(" ; "),pW,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[fW]),_:1}),t(" ; "),gW,t(": "),mW,t(" ; "),yW,t(": "),bW,t(" ; "),xW,t(": "),vW,t(" ; "),SW,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[TW]),_:1}),t(" ; "),kW,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),CW,t(": "),PW,t(" ; "),wW,t(": "),MW,t(" ; "),IW,t(": "),EW,t(" }>")]),FW,e("table",null,[DW,e("tbody",null,[RW,BW,e("tr",null,[NW,e("td",LW,[OW,t("<{ "),AW,t(": "),HW,t(" ; "),jW,t(": "),GW,t(" ; "),qW,t(": "),VW,t(" ; "),zW,t(": "),ZW,t(" ; "),UW,t(": "),QW,t(" ; "),KW,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[WW]),_:1}),t(" ; "),$W,t(": "),YW,t(" ; "),JW,t(": "),XW,t(" ; "),e$,t(": "),t$,t(" ; "),n$,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[o$]),_:1}),t(" ; "),s$,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),l$,t(": "),d$,t(" ; "),a$,t(": "),i$,t(" ; "),c$,t(": "),r$,t(" }>")])])])]),u$,e("p",null,[h$,t("<{ "),_$,t(": "),p$,t(" ; "),f$,t(": "),g$,t(" ; "),m$,t(": "),y$,t(" ; "),b$,t(": "),x$,t(" ; "),v$,t(": "),S$,t(" ; "),T$,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[k$]),_:1}),t(" ; "),C$,t(": "),P$,t(" ; "),w$,t(": "),M$,t(" ; "),I$,t(": "),E$,t(" ; "),F$,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[D$]),_:1}),t(" ; "),R$,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),B$,t(": "),N$,t(" ; "),L$,t(": "),O$,t(" ; "),A$,t(": "),H$,t(" }>")]),j$,e("p",null,[e("a",G$,[t("mocks/messages/getCustomMessage.mock.ts:15"),n(l)])]),q$,e("table",null,[V$,e("tbody",null,[e("tr",null,[z$,e("td",Z$,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[U$]),_:1})])]),Q$])]),K$,e("p",null,[e("a",W$,[t("mocks/getEventBridge.mock.ts:10"),n(l)])]),$$,e("table",null,[Y$,e("tbody",null,[e("tr",null,[J$,e("td",X$,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[eY]),_:1})])]),tY,nY,oY,sY,lY,dY,aY])]),iY,e("p",null,[e("a",cY,[t("mocks/getLogger.mock.ts:10"),n(l)])]),rY,e("table",null,[uY,e("tbody",null,[e("tr",null,[hY,e("td",_Y,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[pY]),_:1})])]),fY])]),gY,mY,e("table",null,[yY,e("tbody",null,[e("tr",null,[bY,e("td",xY,[t("{ "),vY,t(": { "),SY,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[TY]),_:1}),t(" ; "),kY,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[CY]),_:1}),t(" ; "),PY,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[wY]),_:1}),t(" } ; "),MY,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[IY]),_:1}),t(" ; "),EY,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[FY]),_:1}),t(" ; "),DY,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[RY]),_:1}),t(" ; "),BY,t(": "),NY,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[LY]),_:1}),t("> ; "),OY,t(": { "),AY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[HY]),_:1}),t(" ; "),jY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[GY]),_:1}),t(" ; "),qY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[VY]),_:1}),t(" } ; "),zY,t(": <F>("),ZY,t(": "),UY,t(", "),QY,t(": "),KY,t(", "),WY,t(": "),$Y,t(" | "),YY,t(", "),JY,t(": ("),XY,t(": "),eJ,t(") => "),tJ,t("<"),nJ,t(">) => "),oJ,t("<"),sJ,t("> ; "),lJ,t(": { "),dJ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[aJ]),_:1}),t(" ; "),iJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[cJ]),_:1}),t(" ; "),rJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[uJ]),_:1}),t(" } ; "),hJ,t(": <F>("),_J,t(": "),pJ,t(", "),fJ,t(": "),gJ,t(", "),mJ,t(": ("),yJ,t(": "),bJ,t(") => "),xJ,t("<"),vJ,t(">, "),SJ,t(": "),TJ,t(") => "),kJ,t("<"),CJ,t("> }")])]),e("tr",null,[PJ,e("td",wJ,[t("{ "),MJ,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[IJ]),_:1}),t(" ; "),EJ,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[FJ]),_:1}),t(" ; "),DJ,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[RJ]),_:1}),t(" }")])]),e("tr",null,[BJ,e("td",NJ,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[LJ]),_:1})])]),e("tr",null,[OJ,e("td",AJ,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[HJ]),_:1})])]),e("tr",null,[jJ,e("td",GJ,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[qJ]),_:1})])]),e("tr",null,[VJ,e("td",zJ,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[ZJ]),_:1})])]),e("tr",null,[UJ,e("td",QJ,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[KJ]),_:1})])]),e("tr",null,[WJ,e("td",$J,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[YJ]),_:1})])]),e("tr",null,[JJ,e("td",XJ,[eX,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[tX]),_:1}),t(">")])]),e("tr",null,[nX,e("td",oX,[t("{ "),sX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[lX]),_:1}),t(" ; "),dX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[aX]),_:1}),t(" ; "),iX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[cX]),_:1}),t(" }")])]),e("tr",null,[rX,e("td",uX,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[hX]),_:1})])]),e("tr",null,[_X,e("td",pX,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[fX]),_:1})])]),e("tr",null,[gX,e("td",mX,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[yX]),_:1})])]),bX,e("tr",null,[xX,e("td",vX,[t("{ "),SX,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[TX]),_:1}),t(" ; "),kX,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[CX]),_:1}),t(" ; "),PX,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[wX]),_:1}),t(" }")])]),e("tr",null,[MX,e("td",IX,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[EX]),_:1})])]),e("tr",null,[FX,e("td",DX,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[RX]),_:1})])]),e("tr",null,[BX,e("td",NX,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[LX]),_:1})])]),OX,AX,HX,jX,GX,qX,VX,zX,ZX,UX,QX,KX,WX,$X,YX,JX,XX,eee,tee,nee,oee,see])]),lee,e("p",null,[e("a",dee,[t("mocks/getSubscriptionContext.mock.ts:11"),n(l)])]),aee,e("table",null,[iee,e("tbody",null,[e("tr",null,[cee,e("td",ree,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[uee]),_:1})])]),hee])]),_ee,pee,e("table",null,[fee,e("tbody",null,[e("tr",null,[gee,e("td",mee,[t("{ "),yee,t(": { "),bee,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[xee]),_:1}),t(" ; "),vee,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[See]),_:1}),t(" ; "),Tee,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[kee]),_:1}),t(" } ; "),Cee,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Pee]),_:1}),t(" ; "),wee,t(": "),Mee,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Iee]),_:1}),t("> ; "),Eee,t(": { "),Fee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Dee]),_:1}),t(" ; "),Ree,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Bee]),_:1}),t(" ; "),Nee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Lee]),_:1}),t(" } ; "),Oee,t(": <F>("),Aee,t(": "),Hee,t(", "),jee,t(": "),Gee,t(", "),qee,t(": "),Vee,t(" | "),zee,t(", "),Zee,t(": ("),Uee,t(": "),Qee,t(") => "),Kee,t("<"),Wee,t(">) => "),$ee,t("<"),Yee,t("> ; "),Jee,t(": { "),Xee,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[ete]),_:1}),t(" ; "),tte,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[nte]),_:1}),t(" ; "),ote,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ste]),_:1}),t(" } ; "),lte,t(": <F>("),dte,t(": "),ate,t(", "),ite,t(": "),cte,t(", "),rte,t(": ("),ute,t(": "),hte,t(") => "),_te,t("<"),pte,t(">, "),fte,t(": "),gte,t(") => "),mte,t("<"),yte,t("> }")])]),e("tr",null,[bte,e("td",xte,[t("{ "),vte,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Ste]),_:1}),t(" ; "),Tte,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[kte]),_:1}),t(" ; "),Cte,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[Pte]),_:1}),t(" }")])]),e("tr",null,[wte,e("td",Mte,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Ite]),_:1})])]),e("tr",null,[Ete,e("td",Fte,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[Dte]),_:1})])]),e("tr",null,[Rte,e("td",Bte,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[Nte]),_:1})])]),e("tr",null,[Lte,e("td",Ote,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Ate]),_:1})])]),e("tr",null,[Hte,e("td",jte,[Gte,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[qte]),_:1}),t(">")])]),e("tr",null,[Vte,e("td",zte,[t("{ "),Zte,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Ute]),_:1}),t(" ; "),Qte,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Kte]),_:1}),t(" ; "),Wte,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[$te]),_:1}),t(" }")])]),e("tr",null,[Yte,e("td",Jte,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Xte]),_:1})])]),e("tr",null,[ene,e("td",tne,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[nne]),_:1})])]),e("tr",null,[one,e("td",sne,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[lne]),_:1})])]),dne,e("tr",null,[ane,e("td",ine,[t("{ "),cne,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[rne]),_:1}),t(" ; "),une,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[hne]),_:1}),t(" ; "),_ne,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[pne]),_:1}),t(" }")])]),e("tr",null,[fne,e("td",gne,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[mne]),_:1})])]),e("tr",null,[yne,e("td",bne,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[xne]),_:1})])]),e("tr",null,[vne,e("td",Sne,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[Tne]),_:1})])]),kne,Cne,Pne,wne,Mne,Ine,Ene,Fne,Dne,Rne,Bne,Nne,Lne,One,Ane,Hne,jne,Gne,qne,Vne])]),zne,e("p",null,[e("a",Zne,[t("mocks/getSubscriptionTransformContext.mock.ts:11"),n(l)])])])}const Yne=i(u,[["render",Une],["__file","purista_core.html.vue"]]);export{Yne as default};
