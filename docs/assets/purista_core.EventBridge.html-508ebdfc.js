import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as a,c,b as e,e as s,w as o,d as t,a as i}from"./app-1068bce5.js";const h={},_=e("h1",{id:"interface-eventbridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-eventbridge","aria-hidden":"true"},"#"),t(" Interface: EventBridge")],-1),u=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),g=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by","aria-hidden":"true"},"#"),t(" Implemented by")],-1),p=e("code",null,"DefaultEventBridge",-1),m=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),f=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),b=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),y=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="defaultcommandtimeout" tabindex="-1"><a class="header-anchor" href="#defaultcommandtimeout" aria-hidden="true">#</a> defaultCommandTimeout</h3><p>• <code>Readonly</code> <strong>defaultCommandTimeout</strong>: <code>number</code></p><p>The default time until when a command invocation automatically returns a time out error</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',5),v={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L26",target:"_blank",rel:"noopener noreferrer"},x=e("hr",null,null,-1),E=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" instanceId")],-1),B=e("p",null,[t("• "),e("code",null,"Readonly"),t(),e("strong",null,"instanceId"),t(": "),e("code",null,"string")],-1),k=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),T={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L22",target:"_blank",rel:"noopener noreferrer"},I=e("hr",null,null,-1),P=e("h3",{id:"name",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#"),t(" name")],-1),w=e("p",null,[t("• "),e("code",null,"Readonly"),t(),e("strong",null,"name"),t(": "),e("code",null,"string")],-1),R=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),C={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L20",target:"_blank",rel:"noopener noreferrer"},M=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>▸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Shut down event bridge as gracefully as possible</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',7),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L99",target:"_blank",rel:"noopener noreferrer"},D=e("hr",null,null,-1),L=e("h3",{id:"emitmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitmessage","aria-hidden":"true"},"#"),t(" emitMessage")],-1),S=e("strong",null,"emitMessage",-1),V=e("code",null,"message",-1),A=e("code",null,"Promise",-1),O=e("code",null,"Readonly",-1),H=e("code",null,"EBMessage",-1),U=e("p",null,"Emit a message to the eventbridge without awaiting a result",-1),j=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),t(" Parameters")],-1),q=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),z=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),F={style:{"text-align":"left"}},G=e("code",null,"Omit",-1),J=e("code",null,"EBMessage",-1),K=e("code",null,'"correlationId"',-1),Q=e("code",null,'"id"',-1),W=e("code",null,'"timestamp"',-1),X=e("td",{style:{"text-align":"left"}},"the message",-1),Y=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Z=e("code",null,"Promise",-1),$=e("code",null,"Readonly",-1),ee=e("code",null,"EBMessage",-1),te=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),se={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L37",target:"_blank",rel:"noopener noreferrer"},ne=i('<hr><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke</h3><p>▸ <strong>invoke</strong>&lt;<code>T</code>&gt;(<code>input</code>, <code>ttl?</code>): <code>Promise</code>&lt;<code>T</code>&gt;</p><p>Call a command of a service and return the result of this command</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',7),oe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),de=e("td",{style:{"text-align":"left"}},[e("code",null,"input")],-1),ie={style:{"text-align":"left"}},re=e("code",null,"Omit",-1),le=e("code",null,"contentEncoding",-1),ae=e("code",null,"string",-1),ce=e("code",null,"contentType",-1),he=e("code",null,"string",-1),_e=e("code",null,"correlationId",-1),ue=e("code",null,"string",-1),ge=e("code",null,"eventName?",-1),pe=e("code",null,"string",-1),me=e("code",null,"id",-1),fe=e("code",null,"string",-1),be=e("code",null,"messageType",-1),ye=e("code",null,"Command",-1),ve=e("code",null,"otp?",-1),xe=e("code",null,"string",-1),Ee=e("code",null,"payload",-1),Be=e("code",null,"parameter",-1),ke=e("code",null,"unknown",-1),Te=e("code",null,"payload",-1),Ie=e("code",null,"unknown",-1),Pe=e("code",null,"principalId?",-1),we=e("code",null,"string",-1),Re=e("code",null,"receiver",-1),Ce=e("code",null,"EBMessageAddress",-1),Me=e("code",null,"sender",-1),Ne=e("code",null,"tenantId?",-1),De=e("code",null,"string",-1),Le=e("code",null,"timestamp",-1),Se=e("code",null,"number",-1),Ve=e("code",null,"traceId?",-1),Ae=e("code",null,"string",-1),Oe=e("code",null,'"messageType"',-1),He=e("code",null,'"correlationId"',-1),Ue=e("code",null,'"id"',-1),je=e("code",null,'"timestamp"',-1),qe=e("td",{style:{"text-align":"left"}},"a partial command message",-1),ze=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ttl?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"the time to live (timeout) of the invocation")],-1),Fe=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),Ge=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"T"),t(">")],-1),Je=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L46",target:"_blank",rel:"noopener noreferrer"},Qe=i('<hr><h3 id="ishealthy" tabindex="-1"><a class="header-anchor" href="#ishealthy" aria-hidden="true">#</a> isHealthy</h3><p>▸ <strong>isHealthy</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge is running and works correctly</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',7),We={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L94",target:"_blank",rel:"noopener noreferrer"},Xe=i('<hr><h3 id="isready" tabindex="-1"><a class="header-anchor" href="#isready" aria-hidden="true">#</a> isReady</h3><p>▸ <strong>isReady</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Indicates if the eventbridge has been started and is connected to underlaying message broker</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',7),Ye={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L89",target:"_blank",rel:"noopener noreferrer"},Ze=i('<hr><h3 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h3><p>▸ <strong>registerCommand</strong>(<code>address</code>, <code>cb</code>, <code>metadata</code>, <code>eventBridgeConfig</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>',4),$e=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),et=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),tt={style:{"text-align":"left"}},st=e("code",null,"EBMessageAddress",-1),nt=e("td",{style:{"text-align":"left"}},"the address of the service command (service name, version and command name)",-1),ot=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),dt={style:{"text-align":"left"}},it=e("code",null,"message",-1),rt=e("code",null,"contentEncoding",-1),lt=e("code",null,"string",-1),at=e("code",null,"contentType",-1),ct=e("code",null,"string",-1),ht=e("code",null,"correlationId",-1),_t=e("code",null,"string",-1),ut=e("code",null,"eventName?",-1),gt=e("code",null,"string",-1),pt=e("code",null,"id",-1),mt=e("code",null,"string",-1),ft=e("code",null,"messageType",-1),bt=e("code",null,"Command",-1),yt=e("code",null,"otp?",-1),vt=e("code",null,"string",-1),xt=e("code",null,"payload",-1),Et=e("code",null,"parameter",-1),Bt=e("code",null,"unknown",-1),kt=e("code",null,"payload",-1),Tt=e("code",null,"unknown",-1),It=e("code",null,"principalId?",-1),Pt=e("code",null,"string",-1),wt=e("code",null,"receiver",-1),Rt=e("code",null,"EBMessageAddress",-1),Ct=e("code",null,"sender",-1),Mt=e("code",null,"tenantId?",-1),Nt=e("code",null,"string",-1),Dt=e("code",null,"timestamp",-1),Lt=e("code",null,"number",-1),St=e("code",null,"traceId?",-1),Vt=e("code",null,"string",-1),At=e("code",null,"Promise",-1),Ot=e("code",null,"Readonly",-1),Ht=e("code",null,"Omit",-1),Ut=e("code",null,"contentEncoding",-1),jt=e("code",null,'"utf-8"',-1),qt=e("code",null,"contentType",-1),zt=e("code",null,'"application/json"',-1),Ft=e("code",null,"correlationId",-1),Gt=e("code",null,"string",-1),Jt=e("code",null,"eventName?",-1),Kt=e("code",null,"string",-1),Qt=e("code",null,"id",-1),Wt=e("code",null,"string",-1),Xt=e("code",null,"isHandledError",-1),Yt=e("code",null,"boolean",-1),Zt=e("code",null,"messageType",-1),$t=e("code",null,"CommandErrorResponse",-1),es=e("code",null,"otp?",-1),ts=e("code",null,"string",-1),ss=e("code",null,"payload",-1),ns=e("code",null,"data?",-1),os=e("code",null,"unknown",-1),ds=e("code",null,"message",-1),is=e("code",null,"string",-1),rs=e("code",null,"status",-1),ls=e("code",null,"StatusCode",-1),as=e("code",null,"principalId?",-1),cs=e("code",null,"string",-1),hs=e("code",null,"receiver",-1),_s=e("code",null,"sender",-1),us=e("code",null,"tenantId?",-1),gs=e("code",null,"string",-1),ps=e("code",null,"timestamp",-1),ms=e("code",null,"number",-1),fs=e("code",null,"traceId?",-1),bs=e("code",null,"string",-1),ys=e("code",null,'"instanceId"',-1),vs=e("code",null,"Readonly",-1),xs=e("code",null,"Omit",-1),Es=e("code",null,"contentEncoding",-1),Bs=e("code",null,"string",-1),ks=e("code",null,"contentType",-1),Ts=e("code",null,"string",-1),Is=e("code",null,"correlationId",-1),Ps=e("code",null,"string",-1),ws=e("code",null,"eventName?",-1),Rs=e("code",null,"string",-1),Cs=e("code",null,"id",-1),Ms=e("code",null,"string",-1),Ns=e("code",null,"messageType",-1),Ds=e("code",null,"CommandSuccessResponse",-1),Ls=e("code",null,"otp?",-1),Ss=e("code",null,"string",-1),Vs=e("code",null,"payload",-1),As=e("code",null,"unknown",-1),Os=e("code",null,"principalId?",-1),Hs=e("code",null,"string",-1),Us=e("code",null,"receiver",-1),js=e("code",null,"sender",-1),qs=e("code",null,"tenantId?",-1),zs=e("code",null,"string",-1),Fs=e("code",null,"timestamp",-1),Gs=e("code",null,"number",-1),Js=e("code",null,"traceId?",-1),Ks=e("code",null,"string",-1),Qs=e("code",null,'"instanceId"',-1),Ws=e("td",{style:{"text-align":"left"}},"the function to be called if a matching command arrives",-1),Xs=e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")],-1),Ys={style:{"text-align":"left"}},Zs=e("code",null,"CommandDefinitionMetadataBase",-1),$s=e("td",{style:{"text-align":"left"}},"-",-1),en=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),tn={style:{"text-align":"left"}},sn=e("code",null,"DefinitionEventBridgeConfig",-1),nn=e("td",{style:{"text-align":"left"}},"-",-1),on=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),dn=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),rn=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),ln={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L53",target:"_blank",rel:"noopener noreferrer"},an=i('<hr><h3 id="registersubscription" tabindex="-1"><a class="header-anchor" href="#registersubscription" aria-hidden="true">#</a> registerSubscription</h3><p>▸ <strong>registerSubscription</strong>(<code>subscription</code>, <code>cb</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p><p>Register a new subscription</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4>',5),cn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),hn=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),_n={style:{"text-align":"left"}},un=e("code",null,"Subscription",-1),gn=e("td",{style:{"text-align":"left"}},"the subscription definition",-1),pn=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),mn={style:{"text-align":"left"}},fn=e("code",null,"message",-1),bn=e("code",null,"EBMessage",-1),yn=e("code",null,"Promise",-1),vn=e("code",null,"undefined",-1),xn=e("code",null,"Omit",-1),En=e("code",null,"contentEncoding",-1),Bn=e("code",null,"string",-1),kn=e("code",null,"contentType",-1),Tn=e("code",null,"string",-1),In=e("code",null,"correlationId?",-1),Pn=e("code",null,"string",-1),wn=e("code",null,"eventName",-1),Rn=e("code",null,"string",-1),Cn=e("code",null,"id",-1),Mn=e("code",null,"string",-1),Nn=e("code",null,"messageType",-1),Dn=e("code",null,"CustomMessage",-1),Ln=e("code",null,"otp?",-1),Sn=e("code",null,"string",-1),Vn=e("code",null,"payload?",-1),An=e("code",null,"unknown",-1),On=e("code",null,"principalId?",-1),Hn=e("code",null,"string",-1),Un=e("code",null,"receiver?",-1),jn=e("code",null,"EBMessageAddress",-1),qn=e("code",null,"sender",-1),zn=e("code",null,"tenantId?",-1),Fn=e("code",null,"string",-1),Gn=e("code",null,"timestamp",-1),Jn=e("code",null,"number",-1),Kn=e("code",null,"traceId?",-1),Qn=e("code",null,"string",-1),Wn=e("code",null,'"id"',-1),Xn=e("code",null,'"timestamp"',-1),Yn=e("td",{style:{"text-align":"left"}},"the function to be called if a matching message arrives",-1),Zn=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),$n=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"string"),t(">")],-1),eo=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),to={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L75",target:"_blank",rel:"noopener noreferrer"},so=i('<hr><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h3><p>▸ <strong>start</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Start the eventbridge and connect to the underlaying message broker</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',7),no={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L31",target:"_blank",rel:"noopener noreferrer"},oo=i('<hr><h3 id="unregistercommand" tabindex="-1"><a class="header-anchor" href="#unregistercommand" aria-hidden="true">#</a> unregisterCommand</h3><p>▸ <strong>unregisterCommand</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Unregister a service command</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4>',5),io=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ro=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),lo={style:{"text-align":"left"}},ao=e("code",null,"EBMessageAddress",-1),co=e("td",{style:{"text-align":"left"}},"The address (service name, version and command name) of the command to be de-registered",-1),ho=e("h4",{id:"returns-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),t(" Returns")],-1),_o=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),uo=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),go={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L68",target:"_blank",rel:"noopener noreferrer"},po=i('<hr><h3 id="unregistersubscription" tabindex="-1"><a class="header-anchor" href="#unregistersubscription" aria-hidden="true">#</a> unregisterSubscription</h3><p>▸ <strong>unregisterSubscription</strong>(<code>address</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>',4),mo=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),fo=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),bo={style:{"text-align":"left"}},yo=e("code",null,"EBMessageAddress",-1),vo=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),xo=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Eo=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L84",target:"_blank",rel:"noopener noreferrer"};function ko(To,Io){const n=r("RouterLink"),d=r("ExternalLinkIcon");return a(),c("div",null,[e("p",null,[s(n,{to:"/api/"},{default:o(()=>[t("PURISTA API")]),_:1}),t(" / "),s(n,{to:"/api/modules.html"},{default:o(()=>[t("Modules")]),_:1}),t(" / "),s(n,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(" / EventBridge")]),_,e("p",null,[s(n,{to:"/api/modules/purista_core.html"},{default:o(()=>[t("@purista/core")]),_:1}),t(".EventBridge")]),u,g,e("ul",null,[e("li",null,[s(n,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:o(()=>[p]),_:1})])]),m,f,e("ul",null,[e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#defaultcommandtimeout"},{default:o(()=>[t("defaultCommandTimeout")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#instanceid"},{default:o(()=>[t("instanceId")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#name"},{default:o(()=>[t("name")]),_:1})])]),b,e("ul",null,[e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#destroy"},{default:o(()=>[t("destroy")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#emitmessage"},{default:o(()=>[t("emitMessage")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#invoke"},{default:o(()=>[t("invoke")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#ishealthy"},{default:o(()=>[t("isHealthy")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#isready"},{default:o(()=>[t("isReady")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#registercommand"},{default:o(()=>[t("registerCommand")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#registersubscription"},{default:o(()=>[t("registerSubscription")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#start"},{default:o(()=>[t("start")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#unregistercommand"},{default:o(()=>[t("unregisterCommand")]),_:1})]),e("li",null,[s(n,{to:"/api/interfaces/purista_core.EventBridge.html#unregistersubscription"},{default:o(()=>[t("unregisterSubscription")]),_:1})])]),y,e("p",null,[e("a",v,[t("core/EventBridge/types/EventBridge.ts:26"),s(d)])]),x,E,B,k,e("p",null,[e("a",T,[t("core/EventBridge/types/EventBridge.ts:22"),s(d)])]),I,P,w,R,e("p",null,[e("a",C,[t("core/EventBridge/types/EventBridge.ts:20"),s(d)])]),M,e("p",null,[e("a",N,[t("core/EventBridge/types/EventBridge.ts:99"),s(d)])]),D,L,e("p",null,[t("▸ "),S,t("("),V,t("): "),A,t("<"),O,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[H]),_:1}),t(">>")]),U,j,e("table",null,[q,e("tbody",null,[e("tr",null,[z,e("td",F,[G,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[J]),_:1}),t(", "),K,t(" | "),Q,t(" | "),W,t(">")]),X])])]),Y,e("p",null,[Z,t("<"),$,t("<"),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[ee]),_:1}),t(">>")]),te,e("p",null,[e("a",se,[t("core/EventBridge/types/EventBridge.ts:37"),s(d)])]),ne,e("table",null,[oe,e("tbody",null,[e("tr",null,[de,e("td",ie,[re,t("<{ "),le,t(": "),ae,t(" ; "),ce,t(": "),he,t(" ; "),_e,t(": "),ue,t(" ; "),ge,t(": "),pe,t(" ; "),me,t(": "),fe,t(" ; "),be,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[ye]),_:1}),t(" ; "),ve,t(": "),xe,t(" ; "),Ee,t(": { "),Be,t(": "),ke,t(" ; "),Te,t(": "),Ie,t(" } ; "),Pe,t(": "),we,t(" ; "),Re,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Ce]),_:1}),t(" ; "),Me,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Ne,t(": "),De,t(" ; "),Le,t(": "),Se,t(" ; "),Ve,t(": "),Ae,t(" }, "),Oe,t(" | "),He,t(" | "),Ue,t(" | "),je,t(">")]),qe]),ze])]),Fe,Ge,Je,e("p",null,[e("a",Ke,[t("core/EventBridge/types/EventBridge.ts:46"),s(d)])]),Qe,e("p",null,[e("a",We,[t("core/EventBridge/types/EventBridge.ts:94"),s(d)])]),Xe,e("p",null,[e("a",Ye,[t("core/EventBridge/types/EventBridge.ts:89"),s(d)])]),Ze,e("table",null,[$e,e("tbody",null,[e("tr",null,[et,e("td",tt,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[st]),_:1})]),nt]),e("tr",null,[ot,e("td",dt,[t("("),it,t(": { "),rt,t(": "),lt,t(" ; "),at,t(": "),ct,t(" ; "),ht,t(": "),_t,t(" ; "),ut,t(": "),gt,t(" ; "),pt,t(": "),mt,t(" ; "),ft,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:o(()=>[bt]),_:1}),t(" ; "),yt,t(": "),vt,t(" ; "),xt,t(": { "),Et,t(": "),Bt,t(" ; "),kt,t(": "),Tt,t(" } ; "),It,t(": "),Pt,t(" ; "),wt,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[Rt]),_:1}),t(" ; "),Ct,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Mt,t(": "),Nt,t(" ; "),Dt,t(": "),Lt,t(" ; "),St,t(": "),Vt,t(" }) => "),At,t("<"),Ot,t("<"),Ht,t("<{ "),Ut,t(": "),jt,t(" ; "),qt,t(": "),zt,t(" ; "),Ft,t(": "),Gt,t(" ; "),Jt,t(": "),Kt,t(" ; "),Qt,t(": "),Wt,t(" ; "),Xt,t(": "),Yt,t(" ; "),Zt,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:o(()=>[$t]),_:1}),t(" ; "),es,t(": "),ts,t(" ; "),ss,t(": { "),ns,t(": "),os,t(" ; "),ds,t(": "),is,t(" ; "),rs,t(": "),s(n,{to:"/api/enums/purista_core.StatusCode.html"},{default:o(()=>[ls]),_:1}),t(" } ; "),as,t(": "),cs,t(" ; "),hs,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),_s,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),us,t(": "),gs,t(" ; "),ps,t(": "),ms,t(" ; "),fs,t(": "),bs,t(" }, "),ys,t(">> | "),vs,t("<"),xs,t("<{ "),Es,t(": "),Bs,t(" ; "),ks,t(": "),Ts,t(" ; "),Is,t(": "),Ps,t(" ; "),ws,t(": "),Rs,t(" ; "),Cs,t(": "),Ms,t(" ; "),Ns,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:o(()=>[Ds]),_:1}),t(" ; "),Ls,t(": "),Ss,t(" ; "),Vs,t(": "),As,t(" ; "),Os,t(": "),Hs,t(" ; "),Us,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),js,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),qs,t(": "),zs,t(" ; "),Fs,t(": "),Gs,t(" ; "),Js,t(": "),Ks,t(" }, "),Qs,t(">>>")]),Ws]),e("tr",null,[Xs,e("td",Ys,[s(n,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:o(()=>[Zs]),_:1})]),$s]),e("tr",null,[en,e("td",tn,[s(n,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:o(()=>[sn]),_:1})]),nn])])]),on,dn,rn,e("p",null,[e("a",ln,[t("core/EventBridge/types/EventBridge.ts:53"),s(d)])]),an,e("table",null,[cn,e("tbody",null,[e("tr",null,[hn,e("td",_n,[s(n,{to:"/api/modules/purista_core.html#subscription"},{default:o(()=>[un]),_:1})]),gn]),e("tr",null,[pn,e("td",mn,[t("("),fn,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessage"},{default:o(()=>[bn]),_:1}),t(") => "),yn,t("<"),vn,t(" | "),xn,t("<{ "),En,t(": "),Bn,t(" ; "),kn,t(": "),Tn,t(" ; "),In,t(": "),Pn,t(" ; "),wn,t(": "),Rn,t(" ; "),Cn,t(": "),Mn,t(" ; "),Nn,t(": "),s(n,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:o(()=>[Dn]),_:1}),t(" ; "),Ln,t(": "),Sn,t(" ; "),Vn,t(": "),An,t(" ; "),On,t(": "),Hn,t(" ; "),Un,t(": "),s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[jn]),_:1}),t(" ; "),qn,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),zn,t(": "),Fn,t(" ; "),Gn,t(": "),Jn,t(" ; "),Kn,t(": "),Qn,t(" }, "),Wn,t(" | "),Xn,t(">>")]),Yn])])]),Zn,$n,eo,e("p",null,[e("a",to,[t("core/EventBridge/types/EventBridge.ts:75"),s(d)])]),so,e("p",null,[e("a",no,[t("core/EventBridge/types/EventBridge.ts:31"),s(d)])]),oo,e("table",null,[io,e("tbody",null,[e("tr",null,[ro,e("td",lo,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[ao]),_:1})]),co])])]),ho,_o,uo,e("p",null,[e("a",go,[t("core/EventBridge/types/EventBridge.ts:68"),s(d)])]),po,e("table",null,[mo,e("tbody",null,[e("tr",null,[fo,e("td",bo,[s(n,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:o(()=>[yo]),_:1})])])])]),vo,xo,Eo,e("p",null,[e("a",Bo,[t("core/EventBridge/types/EventBridge.ts:84"),s(d)])])])}const Ro=l(h,[["render",ko],["__file","purista_core.EventBridge.html.vue"]]);export{Ro as default};
