import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o as c,c as r,b as e,e as n,w as s,d as t,a}from"./app-aQ4vLSXI.js";const u={},h=e("h1",{id:"class-commanddefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-commanddefinitionbuilder-serviceclasstype-messagepayloadtype-messageparamstype-messageresulttype-functionpayloadtype-functionparamstype-functionresulttype","aria-hidden":"true"},"#"),t(" Class: CommandDefinitionBuilder<ServiceClassType, MessagePayloadType, MessageParamsType, MessageResultType, FunctionPayloadType, FunctionParamsType, FunctionResultType>")],-1),_=e("p",null,"Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.",-1),p=e("p",null,"A working schema definition needs at least a command name, a short description and the function implementation.",-1),m=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),f=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),y=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),g={style:{"text-align":"left"}},b=e("code",null,"ServiceClass",-1),T=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),x=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),F=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),M=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),S=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),t(" Constructors")],-1),R=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),t(" constructor")],-1),w=e("strong",null,"new CommandDefinitionBuilder",-1),O=e("code",null,"ServiceClassType",-1),I=e("code",null,"MessagePayloadType",-1),L=e("code",null,"MessageParamsType",-1),N=e("code",null,"MessageResultType",-1),E=e("code",null,"FunctionPayloadType",-1),A=e("code",null,"FunctionParamsType",-1),H=e("code",null,"FunctionResultType",-1),Z=e("code",null,"commandName",-1),q=e("code",null,"commandDescription",-1),G=e("code",null,"eventName?",-1),Q=e("code",null,"CommandDefinitionBuilder",-1),j=e("code",null,"ServiceClassType",-1),W=e("code",null,"MessagePayloadType",-1),V=e("code",null,"MessageParamsType",-1),U=e("code",null,"MessageResultType",-1),z=e("code",null,"FunctionPayloadType",-1),J=e("code",null,"FunctionParamsType",-1),K=e("code",null,"FunctionResultType",-1),X=e("h4",{id:"type-parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-1","aria-hidden":"true"},"#"),t(" Type parameters")],-1),Y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),$=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ee={style:{"text-align":"left"}},te=e("code",null,"ServiceClass",-1),ne=e("code",null,"unknown",-1),oe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),ie=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),de=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),le=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),ce=a('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>commandName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>commandDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>eventName?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',3),re=e("code",null,"CommandDefinitionBuilder",-1),ue=e("code",null,"ServiceClassType",-1),he=e("code",null,"MessagePayloadType",-1),_e=e("code",null,"MessageParamsType",-1),pe=e("code",null,"MessageResultType",-1),me=e("code",null,"FunctionPayloadType",-1),fe=e("code",null,"FunctionParamsType",-1),ye=e("code",null,"FunctionResultType",-1),ge=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),be={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L113",target:"_blank",rel:"noopener noreferrer"},Te=a('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="autoacknowledge" tabindex="-1"><a class="header-anchor" href="#autoacknowledge" aria-hidden="true">#</a> autoacknowledge</h3><p>• <code>Private</code> <strong>autoacknowledge</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),Ce={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L63",target:"_blank",rel:"noopener noreferrer"},xe=e("hr",null,null,-1),De=e("h3",{id:"commanddescription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddescription","aria-hidden":"true"},"#"),t(" commandDescription")],-1),Pe=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"commandDescription"),t(": "),e("code",null,"string")],-1),Be=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L115",target:"_blank",rel:"noopener noreferrer"},ve=e("hr",null,null,-1),Fe=e("h3",{id:"commandname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandname","aria-hidden":"true"},"#"),t(" commandName")],-1),Me=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"commandName"),t(": "),e("code",null,"string")],-1),Se=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Re={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L114",target:"_blank",rel:"noopener noreferrer"},we=a('<hr><h3 id="deprecated" tabindex="-1"><a class="header-anchor" href="#deprecated" aria-hidden="true">#</a> deprecated</h3><p>• <code>Private</code> <strong>deprecated</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',4),Oe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L52",target:"_blank",rel:"noopener noreferrer"},Ie=a('<hr><h3 id="durable" tabindex="-1"><a class="header-anchor" href="#durable" aria-hidden="true">#</a> durable</h3><p>• <code>Private</code> <strong>durable</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',4),Le={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L62",target:"_blank",rel:"noopener noreferrer"},Ne=e("hr",null,null,-1),Ee=e("h3",{id:"errorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorstatuscodes","aria-hidden":"true"},"#"),t(" errorStatusCodes")],-1),Ae=e("code",null,"Private",-1),He=e("strong",null,"errorStatusCodes",-1),Ze=e("code",null,"StatusCode",-1),qe=e("code",null,"[]",-1),Ge=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qe={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L56",target:"_blank",rel:"noopener noreferrer"},je=a('<hr><h3 id="eventname" tabindex="-1"><a class="header-anchor" href="#eventname" aria-hidden="true">#</a> eventName</h3><p>• <code>Private</code> <code>Optional</code> <strong>eventName</strong>: <code>string</code></p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',4),We={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L116",target:"_blank",rel:"noopener noreferrer"},Ve=e("hr",null,null,-1),Ue=e("h3",{id:"fn",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fn","aria-hidden":"true"},"#"),t(" fn")],-1),ze=e("code",null,"Private",-1),Je=e("code",null,"Optional",-1),Ke=e("strong",null,"fn",-1),Xe=e("code",null,"CommandFunction",-1),Ye=e("code",null,"ServiceClassType",-1),$e=e("code",null,"MessagePayloadType",-1),et=e("code",null,"MessageParamsType",-1),tt=e("code",null,"FunctionPayloadType",-1),nt=e("code",null,"FunctionParamsType",-1),ot=e("code",null,"FunctionResultType",-1),st=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),it={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L103",target:"_blank",rel:"noopener noreferrer"},at=e("hr",null,null,-1),dt=e("h3",{id:"hooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),t(" hooks")],-1),lt=e("p",null,[t("• "),e("code",null,"Private"),t(),e("strong",null,"hooks"),t(": "),e("code",null,"Object")],-1),ct=e("h4",{id:"type-declaration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration","aria-hidden":"true"},"#"),t(" Type declaration")],-1),rt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ut=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuard")],-1),ht={style:{"text-align":"left"}},_t=e("code",null,"Record",-1),pt=e("code",null,"string",-1),mt=e("code",null,"CommandAfterGuardHook",-1),ft=e("code",null,"ServiceClassType",-1),yt=e("code",null,"MessagePayloadType",-1),gt=e("code",null,"MessageParamsType",-1),bt=e("code",null,"FunctionResultType",-1),Tt=e("code",null,"FunctionPayloadType",-1),Ct=e("code",null,"FunctionParamsType",-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuard")],-1),Dt={style:{"text-align":"left"}},Pt=e("code",null,"Record",-1),Bt=e("code",null,"string",-1),kt=e("code",null,"CommandBeforeGuardHook",-1),vt=e("code",null,"ServiceClassType",-1),Ft=e("code",null,"MessagePayloadType",-1),Mt=e("code",null,"MessageParamsType",-1),St=e("code",null,"FunctionPayloadType",-1),Rt=e("code",null,"FunctionParamsType",-1),wt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput?")],-1),Ot={style:{"text-align":"left"}},It=e("code",null,"transformFunction",-1),Lt=e("code",null,"CommandTransformInputHook",-1),Nt=e("code",null,"ServiceClassType",-1),Et=e("code",null,"any",-1),At=e("code",null,"any",-1),Ht=e("code",null,"any",-1),Zt=e("code",null,"any",-1),qt=e("code",null,"transformInputSchema",-1),Gt=e("code",null,"ZodType",-1),Qt=e("code",null,"any",-1),jt=e("code",null,"ZodTypeDef",-1),Wt=e("code",null,"any",-1),Vt=e("code",null,"transformParameterSchema",-1),Ut=e("code",null,"ZodType",-1),zt=e("code",null,"any",-1),Jt=e("code",null,"ZodTypeDef",-1),Kt=e("code",null,"any",-1),Xt=e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformFunction")],-1),Yt={style:{"text-align":"left"}},$t=e("code",null,"CommandTransformInputHook",-1),en=e("code",null,"ServiceClassType",-1),tn=e("code",null,"any",-1),nn=e("code",null,"any",-1),on=e("code",null,"any",-1),sn=e("code",null,"any",-1),an=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),dn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),ln=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput?")],-1),cn={style:{"text-align":"left"}},rn=e("code",null,"transformFunction",-1),un=e("code",null,"CommandTransformOutputHook",-1),hn=e("code",null,"ServiceClassType",-1),_n=e("code",null,"any",-1),pn=e("code",null,"any",-1),mn=e("code",null,"FunctionParamsType",-1),fn=e("code",null,"any",-1),yn=e("code",null,"transformOutputSchema",-1),gn=e("code",null,"ZodType",-1),bn=e("code",null,"any",-1),Tn=e("code",null,"ZodTypeDef",-1),Cn=e("code",null,"any",-1),xn=e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformFunction")],-1),Dn={style:{"text-align":"left"}},Pn=e("code",null,"CommandTransformOutputHook",-1),Bn=e("code",null,"ServiceClassType",-1),kn=e("code",null,"any",-1),vn=e("code",null,"any",-1),Fn=e("code",null,"FunctionParamsType",-1),Mn=e("code",null,"any",-1),Sn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"any"),t(", "),e("code",null,"ZodTypeDef"),t(", "),e("code",null,"any"),t(">")])],-1),Rn=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),wn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L65",target:"_blank",rel:"noopener noreferrer"},On=a('<hr><h3 id="httpmetadata" tabindex="-1"><a class="header-anchor" href="#httpmetadata" aria-hidden="true">#</a> httpMetadata</h3><p>• <code>Private</code> <code>Optional</code> <strong>httpMetadata</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4>',4),In=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ln=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),Nn={style:{"text-align":"left"}},En=e("code",null,"contentEncodingRequest?",-1),An=e("code",null,"string",-1),Hn=e("code",null,"contentEncodingResponse?",-1),Zn=e("code",null,"string",-1),qn=e("code",null,"contentTypeRequest?",-1),Gn=e("code",null,"string",-1),Qn=e("code",null,"contentTypeResponse?",-1),jn=e("code",null,"string",-1),Wn=e("code",null,"deprecated?",-1),Vn=e("code",null,"boolean",-1),Un=e("code",null,"inputPayload?",-1),zn=e("code",null,"SchemaObject",-1),Jn=e("code",null,"outputPayload?",-1),Kn=e("code",null,"SchemaObject",-1),Xn=e("code",null,"parameter?",-1),Yn=e("code",null,"SchemaObject",-1),$n=e("code",null,"http",-1),eo=e("code",null,"method",-1),to=e("code",null,'"GET"',-1),no=e("code",null,'"POST"',-1),oo=e("code",null,'"PATCH"',-1),so=e("code",null,'"PUT"',-1),io=e("code",null,'"DELETE"',-1),ao=e("code",null,"openApi?",-1),lo=e("code",null,"additionalStatusCodes?",-1),co=e("code",null,"StatusCode",-1),ro=e("code",null,"description",-1),uo=e("code",null,"string",-1),ho=e("code",null,"isSecure",-1),_o=e("code",null,"boolean",-1),po=e("code",null,"operationId?",-1),mo=e("code",null,"string",-1),fo=e("code",null,"query?",-1),yo=e("code",null,"QueryParameter",-1),go=e("code",null,"FunctionParamsType",-1),bo=e("code",null,"summary",-1),To=e("code",null,"string",-1),Co=e("code",null,"tags?",-1),xo=e("code",null,"string",-1),Do=e("code",null,"path",-1),Po=e("code",null,"string",-1),Bo=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),ko={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L40",target:"_blank",rel:"noopener noreferrer"},vo=a('<hr><h3 id="inputcontentencoding" tabindex="-1"><a class="header-anchor" href="#inputcontentencoding" aria-hidden="true">#</a> inputContentEncoding</h3><p>• <code>Private</code> <strong>inputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',4),Fo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},Mo=a('<hr><h3 id="inputcontenttype" tabindex="-1"><a class="header-anchor" href="#inputcontenttype" aria-hidden="true">#</a> inputContentType</h3><p>• <code>Private</code> <strong>inputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),So={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L42",target:"_blank",rel:"noopener noreferrer"},Ro=a('<hr><h3 id="inputschema" tabindex="-1"><a class="header-anchor" href="#inputschema" aria-hidden="true">#</a> inputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>inputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),wo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L41",target:"_blank",rel:"noopener noreferrer"},Oo=a('<hr><h3 id="issecure" tabindex="-1"><a class="header-anchor" href="#issecure" aria-hidden="true">#</a> isSecure</h3><p>• <code>Private</code> <strong>isSecure</strong>: <code>boolean</code> = <code>true</code></p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',4),Io={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L58",target:"_blank",rel:"noopener noreferrer"},Lo=a('<hr><h3 id="operationid" tabindex="-1"><a class="header-anchor" href="#operationid" aria-hidden="true">#</a> operationId</h3><p>• <code>Private</code> <code>Optional</code> <strong>operationId</strong>: <code>string</code></p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),No={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L60",target:"_blank",rel:"noopener noreferrer"},Eo=a('<hr><h3 id="outputcontentencoding" tabindex="-1"><a class="header-anchor" href="#outputcontentencoding" aria-hidden="true">#</a> outputContentEncoding</h3><p>• <code>Private</code> <strong>outputContentEncoding</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),Ao={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L46",target:"_blank",rel:"noopener noreferrer"},Ho=a('<hr><h3 id="outputcontenttype" tabindex="-1"><a class="header-anchor" href="#outputcontenttype" aria-hidden="true">#</a> outputContentType</h3><p>• <code>Private</code> <strong>outputContentType</strong>: <code>undefined</code> | <code>string</code></p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',4),Zo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L45",target:"_blank",rel:"noopener noreferrer"},qo=a('<hr><h3 id="outputschema" tabindex="-1"><a class="header-anchor" href="#outputschema" aria-hidden="true">#</a> outputSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>outputSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4>',4),Go={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L44",target:"_blank",rel:"noopener noreferrer"},Qo=a('<hr><h3 id="parameterschema" tabindex="-1"><a class="header-anchor" href="#parameterschema" aria-hidden="true">#</a> parameterSchema</h3><p>• <code>Private</code> <code>Optional</code> <strong>parameterSchema</strong>: <code>ZodType</code>&lt;<code>any</code>, <code>ZodTypeDef</code>, <code>any</code>&gt;</p><h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4>',4),jo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L47",target:"_blank",rel:"noopener noreferrer"},Wo=e("hr",null,null,-1),Vo=e("h3",{id:"queryparameter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#queryparameter","aria-hidden":"true"},"#"),t(" queryParameter")],-1),Uo=e("code",null,"Private",-1),zo=e("strong",null,"queryParameter",-1),Jo=e("code",null,"QueryParameter",-1),Ko=e("code",null,"FunctionParamsType",-1),Xo=e("code",null,"[]",-1),Yo=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),$o={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L48",target:"_blank",rel:"noopener noreferrer"},es=a('<hr><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h3><p>• <code>Private</code> <code>Optional</code> <strong>summary</strong>: <code>string</code></p><h4 id="defined-in-21" tabindex="-1"><a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a> Defined in</h4>',4),ts={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L54",target:"_blank",rel:"noopener noreferrer"},ns=a('<hr><h3 id="tags" tabindex="-1"><a class="header-anchor" href="#tags" aria-hidden="true">#</a> tags</h3><p>• <code>Private</code> <strong>tags</strong>: <code>string</code>[] = <code>[]</code></p><h4 id="defined-in-22" tabindex="-1"><a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a> Defined in</h4>',4),os={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L50",target:"_blank",rel:"noopener noreferrer"},ss=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),is=e("h3",{id:"addopenapierrorstatuscodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addopenapierrorstatuscodes","aria-hidden":"true"},"#"),t(" addOpenApiErrorStatusCodes")],-1),as=e("strong",null,"addOpenApiErrorStatusCodes",-1),ds=e("code",null,"...codes",-1),ls=e("code",null,"CommandDefinitionBuilder",-1),cs=e("code",null,"ServiceClassType",-1),rs=e("code",null,"MessagePayloadType",-1),us=e("code",null,"MessageParamsType",-1),hs=e("code",null,"MessageResultType",-1),_s=e("code",null,"FunctionPayloadType",-1),ps=e("code",null,"FunctionParamsType",-1),ms=e("code",null,"FunctionResultType",-1),fs=e("p",null,"If a function can return other status codes, than the default ones, you should add them to openApi definition. Per default, 200, 204, 400, 401 and 500 can be autogenerated in most cases. Special cases or different status codes should be added with this function.",-1),ys=e("h4",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),gs=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),bs=e("td",{style:{"text-align":"left"}},[e("code",null,"...codes")],-1),Ts={style:{"text-align":"left"}},Cs=e("code",null,"StatusCode",-1),xs=e("td",{style:{"text-align":"left"}},"List of status codes",-1),Ds=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),Ps=e("code",null,"CommandDefinitionBuilder",-1),Bs=e("code",null,"ServiceClassType",-1),ks=e("code",null,"MessagePayloadType",-1),vs=e("code",null,"MessageParamsType",-1),Fs=e("code",null,"MessageResultType",-1),Ms=e("code",null,"FunctionPayloadType",-1),Ss=e("code",null,"FunctionParamsType",-1),Rs=e("code",null,"FunctionResultType",-1),ws=a(`<p>CommandDefinitionBuilder</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addErrorStatusCodes</span><span class="token punctuation">(</span>StatusCode<span class="token punctuation">.</span>PaymentRequired<span class="token punctuation">,</span> StatusCode<span class="token punctuation">.</span>Conflict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-23" tabindex="-1"><a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a> Defined in</h4>`,4),Os={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L269",target:"_blank",rel:"noopener noreferrer"},Is=e("hr",null,null,-1),Ls=e("h3",{id:"addopenapitags",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addopenapitags","aria-hidden":"true"},"#"),t(" addOpenApiTags")],-1),Ns=e("strong",null,"addOpenApiTags",-1),Es=e("code",null,"...tags",-1),As=e("code",null,"CommandDefinitionBuilder",-1),Hs=e("code",null,"ServiceClassType",-1),Zs=e("code",null,"MessagePayloadType",-1),qs=e("code",null,"MessageParamsType",-1),Gs=e("code",null,"MessageResultType",-1),Qs=e("code",null,"FunctionPayloadType",-1),js=e("code",null,"FunctionParamsType",-1),Ws=e("code",null,"FunctionResultType",-1),Vs=a('<p>Add tags for openApi definition for given function. It is recommended to use some enum for tags to avoid typo issues.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...tags</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">List of tag strings</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',4),Us=e("code",null,"CommandDefinitionBuilder",-1),zs=e("code",null,"ServiceClassType",-1),Js=e("code",null,"MessagePayloadType",-1),Ks=e("code",null,"MessageParamsType",-1),Xs=e("code",null,"MessageResultType",-1),Ys=e("code",null,"FunctionPayloadType",-1),$s=e("code",null,"FunctionParamsType",-1),ei=e("code",null,"FunctionResultType",-1),ti=a(`<p>CommandDefinitionBuilder</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addTags</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Public&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-24" tabindex="-1"><a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a> Defined in</h4>`,4),ni={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L251",target:"_blank",rel:"noopener noreferrer"},oi=e("hr",null,null,-1),si=e("h3",{id:"addoutputschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addoutputschema","aria-hidden":"true"},"#"),t(" addOutputSchema")],-1),ii=e("strong",null,"addOutputSchema",-1),ai=e("code",null,"I",-1),di=e("code",null,"D",-1),li=e("code",null,"O",-1),ci=e("code",null,"outputSchema",-1),ri=e("code",null,"outputContentType?",-1),ui=e("code",null,"outputContentEncoding?",-1),hi=e("code",null,"CommandDefinitionBuilder",-1),_i=e("code",null,"ServiceClassType",-1),pi=e("code",null,"MessagePayloadType",-1),mi=e("code",null,"MessageParamsType",-1),fi=e("code",null,"O",-1),yi=e("code",null,"FunctionPayloadType",-1),gi=e("code",null,"FunctionParamsType",-1),bi=e("code",null,"I",-1),Ti=a('<p>Add a schema for output payload validation. Types for payload of message and function payload output are generated from given schema.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output payload</td></tr><tr><td style="text-align:left;"><code>outputContentType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>outputContentEncoding?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',6),Ci=e("code",null,"CommandDefinitionBuilder",-1),xi=e("code",null,"ServiceClassType",-1),Di=e("code",null,"MessagePayloadType",-1),Pi=e("code",null,"MessageParamsType",-1),Bi=e("code",null,"O",-1),ki=e("code",null,"FunctionPayloadType",-1),vi=e("code",null,"FunctionParamsType",-1),Fi=e("code",null,"I",-1),Mi=e("p",null,"CommandDefinitionBuilder",-1),Si=e("h4",{id:"defined-in-25",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-25","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ri={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L165",target:"_blank",rel:"noopener noreferrer"},wi=e("hr",null,null,-1),Oi=e("h3",{id:"addparameterschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addparameterschema","aria-hidden":"true"},"#"),t(" addParameterSchema")],-1),Ii=e("strong",null,"addParameterSchema",-1),Li=e("code",null,"I",-1),Ni=e("code",null,"D",-1),Ei=e("code",null,"O",-1),Ai=e("code",null,"parameterSchema",-1),Hi=e("code",null,"CommandDefinitionBuilder",-1),Zi=e("code",null,"ServiceClassType",-1),qi=e("code",null,"MessagePayloadType",-1),Gi=e("code",null,"I",-1),Qi=e("code",null,"MessageResultType",-1),ji=e("code",null,"FunctionPayloadType",-1),Wi=e("code",null,"O",-1),Vi=e("code",null,"FunctionResultType",-1),Ui=a('<p>Add a schema for output parameter validation. Types for parameter of message and function parameter output are generated from given schema.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>I</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>O</code></td></tr></tbody></table><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>parameterSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for output parameter</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',6),zi=e("code",null,"CommandDefinitionBuilder",-1),Ji=e("code",null,"ServiceClassType",-1),Ki=e("code",null,"MessagePayloadType",-1),Xi=e("code",null,"I",-1),Yi=e("code",null,"MessageResultType",-1),$i=e("code",null,"FunctionPayloadType",-1),ea=e("code",null,"O",-1),ta=e("code",null,"FunctionResultType",-1),na=e("p",null,"CommandDefinitionBuilder",-1),oa=e("h4",{id:"defined-in-26",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-26","aria-hidden":"true"},"#"),t(" Defined in")],-1),sa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L199",target:"_blank",rel:"noopener noreferrer"},ia=e("hr",null,null,-1),aa=e("h3",{id:"addpayloadschema",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addpayloadschema","aria-hidden":"true"},"#"),t(" addPayloadSchema")],-1),da=e("strong",null,"addPayloadSchema",-1),la=e("code",null,"I",-1),ca=e("code",null,"D",-1),ra=e("code",null,"O",-1),ua=e("code",null,"inputSchema",-1),ha=e("code",null,"inputContentType?",-1),_a=e("code",null,"inputContentEncoding?",-1),pa=e("code",null,"CommandDefinitionBuilder",-1),ma=e("code",null,"ServiceClassType",-1),fa=e("code",null,"I",-1),ya=e("code",null,"MessageParamsType",-1),ga=e("code",null,"MessageResultType",-1),ba=e("code",null,"O",-1),Ta=e("code",null,"FunctionParamsType",-1),Ca=e("code",null,"FunctionResultType",-1),xa=a('<p>Add a schema for input payload validation. Types for payload of message and function payload input are generated from given schema.</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>I</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>D</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>O</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inputSchema</code></td><td style="text-align:left;"><code>ZodType</code>&lt;<code>O</code>, <code>D</code>, <code>I</code>&gt;</td><td style="text-align:left;">The schema validation for input payload</td></tr><tr><td style="text-align:left;"><code>inputContentType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content type of payload</td></tr><tr><td style="text-align:left;"><code>inputContentEncoding?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional the content encoding</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4>',6),Da=e("code",null,"CommandDefinitionBuilder",-1),Pa=e("code",null,"ServiceClassType",-1),Ba=e("code",null,"I",-1),ka=e("code",null,"MessageParamsType",-1),va=e("code",null,"MessageResultType",-1),Fa=e("code",null,"O",-1),Ma=e("code",null,"FunctionParamsType",-1),Sa=e("code",null,"FunctionResultType",-1),Ra=e("p",null,"CommandDefinitionBuilder",-1),wa=e("h4",{id:"defined-in-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-27","aria-hidden":"true"},"#"),t(" Defined in")],-1),Oa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L138",target:"_blank",rel:"noopener noreferrer"},Ia=e("hr",null,null,-1),La=e("h3",{id:"addqueryparameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addqueryparameters","aria-hidden":"true"},"#"),t(" addQueryParameters")],-1),Na=e("strong",null,"addQueryParameters",-1),Ea=e("code",null,"...queryParams",-1),Aa=e("code",null,"CommandDefinitionBuilder",-1),Ha=e("code",null,"ServiceClassType",-1),Za=e("code",null,"MessagePayloadType",-1),qa=e("code",null,"MessageParamsType",-1),Ga=e("code",null,"MessageResultType",-1),Qa=e("code",null,"FunctionPayloadType",-1),ja=e("code",null,"FunctionParamsType",-1),Wa=e("code",null,"FunctionResultType",-1),Va=e("p",null,"Define query parameters if you expose the function as http endpoint. Query parameters are add to openApi definition. Query parameters are add to input parameters.",-1),Ua=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),za=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ja=e("td",{style:{"text-align":"left"}},[e("code",null,"...queryParams")],-1),Ka={style:{"text-align":"left"}},Xa=e("code",null,"QueryParameter",-1),Ya=e("code",null,"FunctionParamsType",-1),$a=e("td",{style:{"text-align":"left"}},"Add one or more query parameter definitions",-1),ed=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),td=e("code",null,"CommandDefinitionBuilder",-1),nd=e("code",null,"ServiceClassType",-1),od=e("code",null,"MessagePayloadType",-1),sd=e("code",null,"MessageParamsType",-1),id=e("code",null,"MessageResultType",-1),ad=e("code",null,"FunctionPayloadType",-1),dd=e("code",null,"FunctionParamsType",-1),ld=e("code",null,"FunctionResultType",-1),cd=a(`<p>CommandDefinitionBuilder</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">.</span><span class="token function">addQueryParameters</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;limit&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-28" tabindex="-1"><a class="header-anchor" href="#defined-in-28" aria-hidden="true">#</a> Defined in</h4>`,4),rd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L234",target:"_blank",rel:"noopener noreferrer"},ud=e("hr",null,null,-1),hd=e("h3",{id:"adviceautoacknowledgemessages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adviceautoacknowledgemessages","aria-hidden":"true"},"#"),t(" adviceAutoacknowledgeMessages")],-1),_d=e("strong",null,"adviceAutoacknowledgeMessages",-1),pd=e("code",null,"acknowledge?",-1),md=e("code",null,"CommandDefinitionBuilder",-1),fd=e("code",null,"ServiceClassType",-1),yd=e("code",null,"MessagePayloadType",-1),gd=e("code",null,"MessageParamsType",-1),bd=e("code",null,"MessageResultType",-1),Td=e("code",null,"FunctionPayloadType",-1),Cd=e("code",null,"FunctionParamsType",-1),xd=e("code",null,"FunctionResultType",-1),Dd=a('<p>Instruct the event bridge message broker to autoacknowledge commands as soon as they arrive. This means, a message will not be resent, if the command execution fails unexpected.</p><p>If set to false, the command message will be resent from message broker to eventbridge, if:</p><ul><li>the underlaying message broker supports it</li><li>if the command execution fails unexpected</li><li>if sending of command response failed</li></ul><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>acknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Enable (true) and disable (false)</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',6),Pd=e("code",null,"CommandDefinitionBuilder",-1),Bd=e("code",null,"ServiceClassType",-1),kd=e("code",null,"MessagePayloadType",-1),vd=e("code",null,"MessageParamsType",-1),Fd=e("code",null,"MessageResultType",-1),Md=e("code",null,"FunctionPayloadType",-1),Sd=e("code",null,"FunctionParamsType",-1),Rd=e("code",null,"FunctionResultType",-1),wd=e("p",null,"CommandDefinition",-1),Od=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),Id={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L593",target:"_blank",rel:"noopener noreferrer"},Ld=e("hr",null,null,-1),Nd=e("h3",{id:"disablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#disablehttpsecurity","aria-hidden":"true"},"#"),t(" disableHttpSecurity")],-1),Ed=e("strong",null,"disableHttpSecurity",-1),Ad=e("code",null,"disabled?",-1),Hd=e("code",null,"CommandDefinitionBuilder",-1),Zd=e("code",null,"ServiceClassType",-1),qd=e("code",null,"MessagePayloadType",-1),Gd=e("code",null,"MessageParamsType",-1),Qd=e("code",null,"MessageResultType",-1),jd=e("code",null,"FunctionPayloadType",-1),Wd=e("code",null,"FunctionParamsType",-1),Vd=e("code",null,"FunctionResultType",-1),Ud=a('<p>enable or disable security for this endpoint</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>disabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',4),zd=e("code",null,"CommandDefinitionBuilder",-1),Jd=e("code",null,"ServiceClassType",-1),Kd=e("code",null,"MessagePayloadType",-1),Xd=e("code",null,"MessageParamsType",-1),Yd=e("code",null,"MessageResultType",-1),$d=e("code",null,"FunctionPayloadType",-1),el=e("code",null,"FunctionParamsType",-1),tl=e("code",null,"FunctionResultType",-1),nl=e("p",null,"CommandDefinitionBuilder",-1),ol=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),sl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L497",target:"_blank",rel:"noopener noreferrer"},il=e("hr",null,null,-1),al=e("h3",{id:"enablehttpsecurity",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enablehttpsecurity","aria-hidden":"true"},"#"),t(" enableHttpSecurity")],-1),dl=e("strong",null,"enableHttpSecurity",-1),ll=e("code",null,"enabled?",-1),cl=e("code",null,"CommandDefinitionBuilder",-1),rl=e("code",null,"ServiceClassType",-1),ul=e("code",null,"MessagePayloadType",-1),hl=e("code",null,"MessageParamsType",-1),_l=e("code",null,"MessageResultType",-1),pl=e("code",null,"FunctionPayloadType",-1),ml=e("code",null,"FunctionParamsType",-1),fl=e("code",null,"FunctionResultType",-1),yl=a('<p>enable or disable security for this endpoint</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enabled</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;">Defaults to true if not set means &quot;enable security&quot;</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4>',4),gl=e("code",null,"CommandDefinitionBuilder",-1),bl=e("code",null,"ServiceClassType",-1),Tl=e("code",null,"MessagePayloadType",-1),Cl=e("code",null,"MessageParamsType",-1),xl=e("code",null,"MessageResultType",-1),Dl=e("code",null,"FunctionPayloadType",-1),Pl=e("code",null,"FunctionParamsType",-1),Bl=e("code",null,"FunctionResultType",-1),kl=e("p",null,"CommandDefinitionBuilder",-1),vl=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L487",target:"_blank",rel:"noopener noreferrer"},Ml=e("hr",null,null,-1),Sl=e("h3",{id:"exposeashttpendpoint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exposeashttpendpoint","aria-hidden":"true"},"#"),t(" exposeAsHttpEndpoint")],-1),Rl=e("strong",null,"exposeAsHttpEndpoint",-1),wl=e("code",null,"method",-1),Ol=e("code",null,"path",-1),Il=e("code",null,"contentTypeRequest?",-1),Ll=e("code",null,"contentEncodingRequest?",-1),Nl=e("code",null,"contentTypeResponse?",-1),El=e("code",null,"contentEncodingResponse?",-1),Al=e("code",null,"CommandDefinitionBuilder",-1),Hl=e("code",null,"ServiceClassType",-1),Zl=e("code",null,"MessagePayloadType",-1),ql=e("code",null,"MessageParamsType",-1),Gl=e("code",null,"MessageResultType",-1),Ql=e("code",null,"FunctionPayloadType",-1),jl=e("code",null,"FunctionParamsType",-1),Wl=e("code",null,"FunctionResultType",-1),Vl=e("p",null,"Mark the function to be exposed as http endpoint.",-1),Ul=e("p",null,"Api url prefix and service version are prepended automatically",-1),zl=e("p",null,[t("For exposing a url like: "),e("code",null,"/api/V1/user/login"),t(" simply provide "),e("code",null,"user/login"),t("as path")],-1),Jl=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),Kl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Xl=e("td",{style:{"text-align":"left"}},[e("code",null,"method")],-1),Yl={style:{"text-align":"left"}},$l=e("code",null,"SupportedHttpMethod",-1),ec=e("td",{style:{"text-align":"left"}},"Http method POST, PUT, PATCH, GET, DELETE",-1),tc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"path")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The url path")],-1),nc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentTypeRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content type defaults to application/json")],-1),oc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content encoding defaults to utf-8")],-1),sc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentTypeResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content type defaults to application/json")],-1),ic=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"input content encoding defaults to utf-8")],-1),ac=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),dc=e("code",null,"CommandDefinitionBuilder",-1),lc=e("code",null,"ServiceClassType",-1),cc=e("code",null,"MessagePayloadType",-1),rc=e("code",null,"MessageParamsType",-1),uc=e("code",null,"MessageResultType",-1),hc=e("code",null,"FunctionPayloadType",-1),_c=e("code",null,"FunctionParamsType",-1),pc=e("code",null,"FunctionResultType",-1),mc=e("p",null,"CommandDefinitionBuilder",-1),fc=e("h4",{id:"defined-in-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-32","aria-hidden":"true"},"#"),t(" Defined in")],-1),yc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L459",target:"_blank",rel:"noopener noreferrer"},gc=e("hr",null,null,-1),bc=e("h3",{id:"extendwithhttpmetadata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#extendwithhttpmetadata","aria-hidden":"true"},"#"),t(" extendWithHttpMetadata")],-1),Tc=e("strong",null,"extendWithHttpMetadata",-1),Cc=e("code",null,"definition",-1),xc=e("code",null,"Complete",-1),Dc=e("code",null,"CommandDefinition",-1),Pc=e("code",null,"ServiceClassType",-1),Bc=e("code",null,"CommandDefinitionMetadataBase",-1),kc=e("code",null,"MessagePayloadType",-1),vc=e("code",null,"MessageParamsType",-1),Fc=e("code",null,"MessageResultType",-1),Mc=e("code",null,"FunctionPayloadType",-1),Sc=e("code",null,"FunctionParamsType",-1),Rc=e("code",null,"FunctionResultType",-1),wc=e("h4",{id:"parameters-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),t(" Parameters")],-1),Oc=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ic=e("td",{style:{"text-align":"left"}},[e("code",null,"definition")],-1),Lc={style:{"text-align":"left"}},Nc=e("code",null,"Complete",-1),Ec=e("code",null,"CommandDefinition",-1),Ac=e("code",null,"ServiceClassType",-1),Hc=e("code",null,"CommandDefinitionMetadataBase",-1),Zc=e("code",null,"MessagePayloadType",-1),qc=e("code",null,"MessageParamsType",-1),Gc=e("code",null,"MessageResultType",-1),Qc=e("code",null,"FunctionPayloadType",-1),jc=e("code",null,"FunctionParamsType",-1),Wc=e("code",null,"FunctionResultType",-1),Vc=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),Uc=e("code",null,"Complete",-1),zc=e("code",null,"CommandDefinition",-1),Jc=e("code",null,"ServiceClassType",-1),Kc=e("code",null,"CommandDefinitionMetadataBase",-1),Xc=e("code",null,"MessagePayloadType",-1),Yc=e("code",null,"MessageParamsType",-1),$c=e("code",null,"MessageResultType",-1),er=e("code",null,"FunctionPayloadType",-1),tr=e("code",null,"FunctionParamsType",-1),nr=e("code",null,"FunctionResultType",-1),or=e("h4",{id:"defined-in-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-33","aria-hidden":"true"},"#"),t(" Defined in")],-1),sr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L528",target:"_blank",rel:"noopener noreferrer"},ir=e("hr",null,null,-1),ar=e("h3",{id:"getcommandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandfunction","aria-hidden":"true"},"#"),t(" getCommandFunction")],-1),dr=e("strong",null,"getCommandFunction",-1),lr=e("code",null,"CommandFunction",-1),cr=e("code",null,"ServiceClassType",-1),rr=e("code",null,"MessagePayloadType",-1),ur=e("code",null,"MessageParamsType",-1),hr=e("code",null,"FunctionPayloadType",-1),_r=e("code",null,"FunctionParamsType",-1),pr=e("code",null,"FunctionResultType",-1),mr=e("p",null,"Get the function implementation",-1),fr=e("h4",{id:"returns-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),t(" Returns")],-1),yr=e("code",null,"CommandFunction",-1),gr=e("code",null,"ServiceClassType",-1),br=e("code",null,"MessagePayloadType",-1),Tr=e("code",null,"MessageParamsType",-1),Cr=e("code",null,"FunctionPayloadType",-1),xr=e("code",null,"FunctionParamsType",-1),Dr=e("code",null,"FunctionResultType",-1),Pr=e("p",null,"the function",-1),Br=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),kr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L735",target:"_blank",rel:"noopener noreferrer"},vr=e("hr",null,null,-1),Fr=e("h3",{id:"getdefinition",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getdefinition","aria-hidden":"true"},"#"),t(" getDefinition")],-1),Mr=e("strong",null,"getDefinition",-1),Sr=e("code",null,"CommandDefinition",-1),Rr=e("code",null,"ServiceClassType",-1),wr=e("code",null,"CommandDefinitionMetadataBase",-1),Or=e("code",null,"MessagePayloadType",-1),Ir=e("code",null,"MessageParamsType",-1),Lr=e("code",null,"MessageResultType",-1),Nr=e("code",null,"FunctionPayloadType",-1),Er=e("code",null,"FunctionParamsType",-1),Ar=e("code",null,"FunctionResultType",-1),Hr=e("p",null,"Creates and returns the CommandDefinition used as input for the service.",-1),Zr=e("h4",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),qr=e("code",null,"CommandDefinition",-1),Gr=e("code",null,"ServiceClassType",-1),Qr=e("code",null,"CommandDefinitionMetadataBase",-1),jr=e("code",null,"MessagePayloadType",-1),Wr=e("code",null,"MessageParamsType",-1),Vr=e("code",null,"MessageResultType",-1),Ur=e("code",null,"FunctionPayloadType",-1),zr=e("code",null,"FunctionParamsType",-1),Jr=e("code",null,"FunctionResultType",-1),Kr=e("p",null,"CommandDefinition",-1),Xr=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),Yr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L602",target:"_blank",rel:"noopener noreferrer"},$r=e("hr",null,null,-1),eu=e("h3",{id:"gettransforminputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransforminputfunction","aria-hidden":"true"},"#"),t(" getTransformInputFunction")],-1),tu=e("strong",null,"getTransformInputFunction",-1),nu=e("code",null,"undefined",-1),ou=e("code",null,"CommandTransformInputHook",-1),su=e("code",null,"ServiceClassType",-1),iu=e("code",null,"FunctionPayloadType",-1),au=e("code",null,"FunctionParamsType",-1),du=e("code",null,"MessagePayloadType",-1),lu=e("code",null,"MessageParamsType",-1),cu=e("p",null,"Return the transform input function",-1),ru=e("h4",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),uu=e("code",null,"undefined",-1),hu=e("code",null,"CommandTransformInputHook",-1),_u=e("code",null,"ServiceClassType",-1),pu=e("code",null,"FunctionPayloadType",-1),mu=e("code",null,"FunctionParamsType",-1),fu=e("code",null,"MessagePayloadType",-1),yu=e("code",null,"MessageParamsType",-1),gu=e("p",null,"the input transform function if defined",-1),bu=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L328",target:"_blank",rel:"noopener noreferrer"},Cu=e("hr",null,null,-1),xu=e("h3",{id:"gettransformoutputfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gettransformoutputfunction","aria-hidden":"true"},"#"),t(" getTransformOutputFunction")],-1),Du=e("strong",null,"getTransformOutputFunction",-1),Pu=e("code",null,"undefined",-1),Bu=e("code",null,"CommandTransformOutputHook",-1),ku=e("code",null,"ServiceClassType",-1),vu=e("code",null,"MessagePayloadType",-1),Fu=e("code",null,"FunctionResultType",-1),Mu=e("code",null,"FunctionParamsType",-1),Su=e("code",null,"MessageResultType",-1),Ru=e("p",null,"Return the transform output function",-1),wu=e("h4",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Ou=e("code",null,"undefined",-1),Iu=e("code",null,"CommandTransformOutputHook",-1),Lu=e("code",null,"ServiceClassType",-1),Nu=e("code",null,"MessagePayloadType",-1),Eu=e("code",null,"FunctionResultType",-1),Au=e("code",null,"FunctionParamsType",-1),Hu=e("code",null,"MessageResultType",-1),Zu=e("p",null,"the transform output function if defined",-1),qu=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L385",target:"_blank",rel:"noopener noreferrer"},Qu=e("hr",null,null,-1),ju=e("h3",{id:"markasdeprecated",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#markasdeprecated","aria-hidden":"true"},"#"),t(" markAsDeprecated")],-1),Wu=e("strong",null,"markAsDeprecated",-1),Vu=e("code",null,"CommandDefinitionBuilder",-1),Uu=e("code",null,"ServiceClassType",-1),zu=e("code",null,"MessagePayloadType",-1),Ju=e("code",null,"MessageParamsType",-1),Ku=e("code",null,"MessageResultType",-1),Xu=e("code",null,"FunctionPayloadType",-1),Yu=e("code",null,"FunctionParamsType",-1),$u=e("code",null,"FunctionResultType",-1),eh=e("p",null,"Mark this endpoint/command as deprecated",-1),th=e("h4",{id:"returns-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),t(" Returns")],-1),nh=e("code",null,"CommandDefinitionBuilder",-1),oh=e("code",null,"ServiceClassType",-1),sh=e("code",null,"MessagePayloadType",-1),ih=e("code",null,"MessageParamsType",-1),ah=e("code",null,"MessageResultType",-1),dh=e("code",null,"FunctionPayloadType",-1),lh=e("code",null,"FunctionParamsType",-1),ch=e("code",null,"FunctionResultType",-1),rh=e("p",null,"CommandDefinitionBuilder",-1),uh=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),hh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L188",target:"_blank",rel:"noopener noreferrer"},_h=e("hr",null,null,-1),ph=e("h3",{id:"setafterguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setafterguardhooks","aria-hidden":"true"},"#"),t(" setAfterGuardHooks")],-1),mh=e("strong",null,"setAfterGuardHooks",-1),fh=e("code",null,"afterGuards",-1),yh=e("code",null,"CommandDefinitionBuilder",-1),gh=e("code",null,"ServiceClassType",-1),bh=e("code",null,"MessagePayloadType",-1),Th=e("code",null,"MessageParamsType",-1),Ch=e("code",null,"MessageResultType",-1),xh=e("code",null,"FunctionPayloadType",-1),Dh=e("code",null,"FunctionParamsType",-1),Ph=e("code",null,"FunctionResultType",-1),Bh=e("p",null,"Set one or more after guard hook(s). If there are multiple after guard hooks, they are executed in parallel",-1),kh=e("h4",{id:"parameters-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-12","aria-hidden":"true"},"#"),t(" Parameters")],-1),vh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Fh=e("td",{style:{"text-align":"left"}},[e("code",null,"afterGuards")],-1),Mh={style:{"text-align":"left"}},Sh=e("code",null,"Record",-1),Rh=e("code",null,"string",-1),wh=e("code",null,"CommandAfterGuardHook",-1),Oh=e("code",null,"ServiceClassType",-1),Ih=e("code",null,"MessagePayloadType",-1),Lh=e("code",null,"MessageParamsType",-1),Nh=e("code",null,"FunctionResultType",-1),Eh=e("code",null,"FunctionPayloadType",-1),Ah=e("code",null,"FunctionParamsType",-1),Hh=e("h4",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),Zh=e("code",null,"CommandDefinitionBuilder",-1),qh=e("code",null,"ServiceClassType",-1),Gh=e("code",null,"MessagePayloadType",-1),Qh=e("code",null,"MessageParamsType",-1),jh=e("code",null,"MessageResultType",-1),Wh=e("code",null,"FunctionPayloadType",-1),Vh=e("code",null,"FunctionParamsType",-1),Uh=e("code",null,"FunctionResultType",-1),zh=e("p",null,"CommandDefinitionBuilder",-1),Jh=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L427",target:"_blank",rel:"noopener noreferrer"},Xh=e("hr",null,null,-1),Yh=e("h3",{id:"setbeforeguardhooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setbeforeguardhooks","aria-hidden":"true"},"#"),t(" setBeforeGuardHooks")],-1),$h=e("strong",null,"setBeforeGuardHooks",-1),e_=e("code",null,"beforeGuards",-1),t_=e("code",null,"CommandDefinitionBuilder",-1),n_=e("code",null,"ServiceClassType",-1),o_=e("code",null,"MessagePayloadType",-1),s_=e("code",null,"MessageParamsType",-1),i_=e("code",null,"MessageResultType",-1),a_=e("code",null,"FunctionPayloadType",-1),d_=e("code",null,"FunctionParamsType",-1),l_=e("code",null,"FunctionResultType",-1),c_=e("p",null,"Set one or more before guard hook(s). If there are multiple before guard hooks, they are executed in parallel",-1),r_=e("h4",{id:"parameters-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-13","aria-hidden":"true"},"#"),t(" Parameters")],-1),u_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),h_=e("td",{style:{"text-align":"left"}},[e("code",null,"beforeGuards")],-1),__={style:{"text-align":"left"}},p_=e("code",null,"Record",-1),m_=e("code",null,"string",-1),f_=e("code",null,"CommandBeforeGuardHook",-1),y_=e("code",null,"ServiceClassType",-1),g_=e("code",null,"MessagePayloadType",-1),b_=e("code",null,"MessageParamsType",-1),T_=e("code",null,"FunctionPayloadType",-1),C_=e("code",null,"FunctionParamsType",-1),x_=e("td",{style:{"text-align":"left"}},"Object of key = name of guard, value = function",-1),D_=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),P_=e("code",null,"CommandDefinitionBuilder",-1),B_=e("code",null,"ServiceClassType",-1),k_=e("code",null,"MessagePayloadType",-1),v_=e("code",null,"MessageParamsType",-1),F_=e("code",null,"MessageResultType",-1),M_=e("code",null,"FunctionPayloadType",-1),S_=e("code",null,"FunctionParamsType",-1),R_=e("code",null,"FunctionResultType",-1),w_=e("p",null,"CommandDefinitionBuilder",-1),O_=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),I_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L405",target:"_blank",rel:"noopener noreferrer"},L_=e("hr",null,null,-1),N_=e("h3",{id:"setcommandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setcommandfunction","aria-hidden":"true"},"#"),t(" setCommandFunction")],-1),E_=e("strong",null,"setCommandFunction",-1),A_=e("code",null,"fn",-1),H_=e("code",null,"CommandDefinitionBuilder",-1),Z_=e("code",null,"ServiceClassType",-1),q_=e("code",null,"MessagePayloadType",-1),G_=e("code",null,"MessageParamsType",-1),Q_=e("code",null,"MessageResultType",-1),j_=e("code",null,"FunctionPayloadType",-1),W_=e("code",null,"FunctionParamsType",-1),V_=e("code",null,"FunctionResultType",-1),U_=e("p",null,[t("Required: Set the function implementation. The types should be automatically set as soon as schemas previously defined. As the function will be a a function of a service class you need to implement as function declaration. Anonymous functions do not have access to the "),e("code",null,"this"),t(" scope.")],-1),z_=e("h4",{id:"parameters-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-14","aria-hidden":"true"},"#"),t(" Parameters")],-1),J_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),K_=e("td",{style:{"text-align":"left"}},[e("code",null,"fn")],-1),X_={style:{"text-align":"left"}},Y_=e("code",null,"CommandFunction",-1),$_=e("code",null,"ServiceClassType",-1),ep=e("code",null,"MessagePayloadType",-1),tp=e("code",null,"MessageParamsType",-1),np=e("code",null,"FunctionPayloadType",-1),op=e("code",null,"FunctionParamsType",-1),sp=e("code",null,"FunctionResultType",-1),ip=e("td",{style:{"text-align":"left"}},"the function implementation",-1),ap=e("h4",{id:"returns-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),t(" Returns")],-1),dp=e("code",null,"CommandDefinitionBuilder",-1),lp=e("code",null,"ServiceClassType",-1),cp=e("code",null,"MessagePayloadType",-1),rp=e("code",null,"MessageParamsType",-1),up=e("code",null,"MessageResultType",-1),hp=e("code",null,"FunctionPayloadType",-1),_p=e("code",null,"FunctionParamsType",-1),pp=e("code",null,"FunctionResultType",-1),mp=a(`<p>CommandDefinitionBuilder</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the result output payload</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-41" tabindex="-1"><a class="header-anchor" href="#defined-in-41" aria-hidden="true">#</a> Defined in</h4>`,4),fp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L693",target:"_blank",rel:"noopener noreferrer"},yp=e("hr",null,null,-1),gp=e("h3",{id:"setopenapioperationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setopenapioperationid","aria-hidden":"true"},"#"),t(" setOpenApiOperationId")],-1),bp=e("strong",null,"setOpenApiOperationId",-1),Tp=e("code",null,"operationId",-1),Cp=e("code",null,"CommandDefinitionBuilder",-1),xp=e("code",null,"ServiceClassType",-1),Dp=e("code",null,"MessagePayloadType",-1),Pp=e("code",null,"MessageParamsType",-1),Bp=e("code",null,"MessageResultType",-1),kp=e("code",null,"FunctionPayloadType",-1),vp=e("code",null,"FunctionParamsType",-1),Fp=e("code",null,"FunctionResultType",-1),Mp=a('<p>Set the operationId for openApi documentation</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>operationId</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4>',4),Sp=e("code",null,"CommandDefinitionBuilder",-1),Rp=e("code",null,"ServiceClassType",-1),wp=e("code",null,"MessagePayloadType",-1),Op=e("code",null,"MessageParamsType",-1),Ip=e("code",null,"MessageResultType",-1),Lp=e("code",null,"FunctionPayloadType",-1),Np=e("code",null,"FunctionParamsType",-1),Ep=e("code",null,"FunctionResultType",-1),Ap=e("p",null,"CommandDefinitionBuilder",-1),Hp=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L523",target:"_blank",rel:"noopener noreferrer"},qp=e("hr",null,null,-1),Gp=e("h3",{id:"setopenapisummary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setopenapisummary","aria-hidden":"true"},"#"),t(" setOpenApiSummary")],-1),Qp=e("strong",null,"setOpenApiSummary",-1),jp=e("code",null,"summary",-1),Wp=e("code",null,"CommandDefinitionBuilder",-1),Vp=e("code",null,"ServiceClassType",-1),Up=e("code",null,"MessagePayloadType",-1),zp=e("code",null,"MessageParamsType",-1),Jp=e("code",null,"MessageResultType",-1),Kp=e("code",null,"FunctionPayloadType",-1),Xp=e("code",null,"FunctionParamsType",-1),Yp=e("code",null,"FunctionResultType",-1),$p=a('<p>Set the function summary text used for example in openApi documentation</p><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>summary</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Summary text</td></tr></tbody></table><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4>',4),em=e("code",null,"CommandDefinitionBuilder",-1),tm=e("code",null,"ServiceClassType",-1),nm=e("code",null,"MessagePayloadType",-1),om=e("code",null,"MessageParamsType",-1),sm=e("code",null,"MessageResultType",-1),im=e("code",null,"FunctionPayloadType",-1),am=e("code",null,"FunctionParamsType",-1),dm=e("code",null,"FunctionResultType",-1),lm=a(`<p>CommandDefinitionBuilder</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">setSummary</span><span class="token punctuation">(</span><span class="token string">&#39;Some function summary&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-43" tabindex="-1"><a class="header-anchor" href="#defined-in-43" aria-hidden="true">#</a> Defined in</h4>`,4),cm={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L513",target:"_blank",rel:"noopener noreferrer"},rm=e("hr",null,null,-1),um=e("h3",{id:"setsuccesseventname",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setsuccesseventname","aria-hidden":"true"},"#"),t(" setSuccessEventName")],-1),hm=e("strong",null,"setSuccessEventName",-1),_m=e("code",null,"eventName",-1),pm=e("code",null,"CommandDefinitionBuilder",-1),mm=e("code",null,"ServiceClassType",-1),fm=e("code",null,"MessagePayloadType",-1),ym=e("code",null,"MessageParamsType",-1),gm=e("code",null,"MessageResultType",-1),bm=e("code",null,"FunctionPayloadType",-1),Tm=e("code",null,"FunctionParamsType",-1),Cm=e("code",null,"FunctionResultType",-1),xm=a('<h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>eventName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22" aria-hidden="true">#</a> Returns</h4>',3),Dm=e("code",null,"CommandDefinitionBuilder",-1),Pm=e("code",null,"ServiceClassType",-1),Bm=e("code",null,"MessagePayloadType",-1),km=e("code",null,"MessageParamsType",-1),vm=e("code",null,"MessageResultType",-1),Fm=e("code",null,"FunctionPayloadType",-1),Mm=e("code",null,"FunctionParamsType",-1),Sm=e("code",null,"FunctionResultType",-1),Rm=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),wm={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L125",target:"_blank",rel:"noopener noreferrer"},Om=e("hr",null,null,-1),Im=e("h3",{id:"settransforminput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransforminput","aria-hidden":"true"},"#"),t(" setTransformInput")],-1),Lm=e("strong",null,"setTransformInput",-1),Nm=e("code",null,"PayloadIn",-1),Em=e("code",null,"ParamsIn",-1),Am=e("code",null,"PayloadOut",-1),Hm=e("code",null,"ParamsOut",-1),Zm=e("code",null,"PayloadD",-1),qm=e("code",null,"ParamsD",-1),Gm=e("code",null,"transformInputSchema",-1),Qm=e("code",null,"transformParameterSchema",-1),jm=e("code",null,"transformFunction",-1),Wm=e("code",null,"inputContentType?",-1),Vm=e("code",null,"inputContentEncoding?",-1),Um=e("code",null,"CommandDefinitionBuilder",-1),zm=e("code",null,"ServiceClassType",-1),Jm=e("code",null,"PayloadIn",-1),Km=e("code",null,"ParamsIn",-1),Xm=e("code",null,"MessageResultType",-1),Ym=e("code",null,"FunctionPayloadType",-1),$m=e("code",null,"FunctionParamsType",-1),e1=e("code",null,"FunctionResultType",-1),t1=a('<p>Set a transform input hook which will encode or transform the input payload and parameters. Will be executed as first step before input validation, before guard and the function itself. This will change the type of input message payload and input message parameter.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsIn</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParamsOut</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>ParamsD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code> = <code>ZodTypeDef</code></td></tr></tbody></table><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h4>',4),n1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),o1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input payload validation schema")],-1),s1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"ParamsOut"),t(", "),e("code",null,"ParamsD"),t(", "),e("code",null,"ParamsIn"),t(">")]),e("td",{style:{"text-align":"left"}},"Input parameter validation schema")],-1),i1=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),a1={style:{"text-align":"left"}},d1=e("code",null,"CommandTransformInputHook",-1),l1=e("code",null,"ServiceClassType",-1),c1=e("code",null,"FunctionPayloadType",-1),r1=e("code",null,"FunctionParamsType",-1),u1=e("code",null,"PayloadIn",-1),h1=e("code",null,"ParamsIn",-1),_1=e("td",{style:{"text-align":"left"}},"Transform input function",-1),p1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),m1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"inputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),f1=e("h4",{id:"returns-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),t(" Returns")],-1),y1=e("code",null,"CommandDefinitionBuilder",-1),g1=e("code",null,"ServiceClassType",-1),b1=e("code",null,"PayloadIn",-1),T1=e("code",null,"ParamsIn",-1),C1=e("code",null,"MessageResultType",-1),x1=e("code",null,"FunctionPayloadType",-1),D1=e("code",null,"FunctionParamsType",-1),P1=e("code",null,"FunctionResultType",-1),B1=e("p",null,"CommandDefinitionBuilder",-1),k1=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),v1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L285",target:"_blank",rel:"noopener noreferrer"},F1=e("hr",null,null,-1),M1=e("h3",{id:"settransformoutput",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settransformoutput","aria-hidden":"true"},"#"),t(" setTransformOutput")],-1),S1=e("strong",null,"setTransformOutput",-1),R1=e("code",null,"PayloadOut",-1),w1=e("code",null,"PayloadD",-1),O1=e("code",null,"PayloadIn",-1),I1=e("code",null,"transformOutputSchema",-1),L1=e("code",null,"transformFunction",-1),N1=e("code",null,"outputContentType?",-1),E1=e("code",null,"outputContentEncoding?",-1),A1=e("code",null,"CommandDefinitionBuilder",-1),H1=e("code",null,"ServiceClassType",-1),Z1=e("code",null,"MessagePayloadType",-1),q1=e("code",null,"MessageParamsType",-1),G1=e("code",null,"PayloadOut",-1),Q1=e("code",null,"FunctionPayloadType",-1),j1=e("code",null,"FunctionParamsType",-1),W1=e("code",null,"FunctionResultType",-1),V1=a('<p>Set a transform output hook which will encode or transform the response payload. Will be executed at very last step after function execution, output validation and after guard hooks. This will change the type of output message payload.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadOut</code></td><td style="text-align:left;"><code>PayloadOut</code></td></tr><tr><td style="text-align:left;"><code>PayloadD</code></td><td style="text-align:left;">extends <code>ZodTypeDef</code></td></tr><tr><td style="text-align:left;"><code>PayloadIn</code></td><td style="text-align:left;"><code>PayloadIn</code></td></tr></tbody></table><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4>',4),U1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),z1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ZodType"),t("<"),e("code",null,"PayloadOut"),t(", "),e("code",null,"PayloadD"),t(", "),e("code",null,"PayloadIn"),t(">")]),e("td",{style:{"text-align":"left"}},"The output validation schema")],-1),J1=e("td",{style:{"text-align":"left"}},[e("code",null,"transformFunction")],-1),K1={style:{"text-align":"left"}},X1=e("code",null,"CommandTransformOutputHook",-1),Y1=e("code",null,"ServiceClassType",-1),$1=e("code",null,"MessagePayloadType",-1),ef=e("code",null,"FunctionResultType",-1),tf=e("code",null,"FunctionParamsType",-1),nf=e("code",null,"PayloadIn",-1),of=e("td",{style:{"text-align":"left"}},"Transform output function",-1),sf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentType?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content type of payload")],-1),af=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"outputContentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"optional the content encoding")],-1),df=e("h4",{id:"returns-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-24","aria-hidden":"true"},"#"),t(" Returns")],-1),lf=e("code",null,"CommandDefinitionBuilder",-1),cf=e("code",null,"ServiceClassType",-1),rf=e("code",null,"MessagePayloadType",-1),uf=e("code",null,"MessageParamsType",-1),hf=e("code",null,"PayloadOut",-1),_f=e("code",null,"FunctionPayloadType",-1),pf=e("code",null,"FunctionParamsType",-1),mf=e("code",null,"FunctionResultType",-1),ff=e("p",null,"CommandDefinitionBuilder",-1),yf=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),gf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L352",target:"_blank",rel:"noopener noreferrer"};function bf(Tf,Cf){const o=d("RouterLink"),i=d("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / "),n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(" / CommandDefinitionBuilder")]),h,e("p",null,[n(o,{to:"/api/modules/purista_core.html"},{default:s(()=>[t("@purista/core")]),_:1}),t(".CommandDefinitionBuilder")]),_,p,m,e("table",null,[f,e("tbody",null,[e("tr",null,[y,e("td",g,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[b]),_:1})])]),T,C,x,D,P,B])]),k,v,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#autoacknowledge"},{default:s(()=>[t("autoacknowledge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#commanddescription"},{default:s(()=>[t("commandDescription")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#commandname"},{default:s(()=>[t("commandName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#deprecated"},{default:s(()=>[t("deprecated")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#durable"},{default:s(()=>[t("durable")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#errorstatuscodes"},{default:s(()=>[t("errorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#eventname"},{default:s(()=>[t("eventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#fn"},{default:s(()=>[t("fn")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#hooks"},{default:s(()=>[t("hooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#httpmetadata"},{default:s(()=>[t("httpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputcontentencoding"},{default:s(()=>[t("inputContentEncoding")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputcontenttype"},{default:s(()=>[t("inputContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#inputschema"},{default:s(()=>[t("inputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#issecure"},{default:s(()=>[t("isSecure")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#operationid"},{default:s(()=>[t("operationId")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputcontentencoding"},{default:s(()=>[t("outputContentEncoding")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputcontenttype"},{default:s(()=>[t("outputContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#outputschema"},{default:s(()=>[t("outputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#parameterschema"},{default:s(()=>[t("parameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#queryparameter"},{default:s(()=>[t("queryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#summary"},{default:s(()=>[t("summary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#tags"},{default:s(()=>[t("tags")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addopenapierrorstatuscodes"},{default:s(()=>[t("addOpenApiErrorStatusCodes")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addopenapitags"},{default:s(()=>[t("addOpenApiTags")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addoutputschema"},{default:s(()=>[t("addOutputSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addparameterschema"},{default:s(()=>[t("addParameterSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addpayloadschema"},{default:s(()=>[t("addPayloadSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#addqueryparameters"},{default:s(()=>[t("addQueryParameters")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#adviceautoacknowledgemessages"},{default:s(()=>[t("adviceAutoacknowledgeMessages")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#disablehttpsecurity"},{default:s(()=>[t("disableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#enablehttpsecurity"},{default:s(()=>[t("enableHttpSecurity")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#exposeashttpendpoint"},{default:s(()=>[t("exposeAsHttpEndpoint")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#extendwithhttpmetadata"},{default:s(()=>[t("extendWithHttpMetadata")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#getcommandfunction"},{default:s(()=>[t("getCommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#getdefinition"},{default:s(()=>[t("getDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#gettransforminputfunction"},{default:s(()=>[t("getTransformInputFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#gettransformoutputfunction"},{default:s(()=>[t("getTransformOutputFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#markasdeprecated"},{default:s(()=>[t("markAsDeprecated")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setafterguardhooks"},{default:s(()=>[t("setAfterGuardHooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setbeforeguardhooks"},{default:s(()=>[t("setBeforeGuardHooks")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setcommandfunction"},{default:s(()=>[t("setCommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setopenapioperationid"},{default:s(()=>[t("setOpenApiOperationId")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setopenapisummary"},{default:s(()=>[t("setOpenApiSummary")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#setsuccesseventname"},{default:s(()=>[t("setSuccessEventName")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#settransforminput"},{default:s(()=>[t("setTransformInput")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html#settransformoutput"},{default:s(()=>[t("setTransformOutput")]),_:1})])]),S,R,e("p",null,[t("• "),w,t("<"),O,t(", "),I,t(", "),L,t(", "),N,t(", "),E,t(", "),A,t(", "),H,t(">("),Z,t(", "),q,t(", "),G,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Q]),_:1}),t("<"),j,t(", "),W,t(", "),V,t(", "),U,t(", "),z,t(", "),J,t(", "),K,t(">")]),X,e("table",null,[Y,e("tbody",null,[e("tr",null,[$,e("td",ee,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[te]),_:1}),t("<"),ne,t(">")])]),oe,se,ie,ae,de,le])]),ce,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[re]),_:1}),t("<"),ue,t(", "),he,t(", "),_e,t(", "),pe,t(", "),me,t(", "),fe,t(", "),ye,t(">")]),ge,e("p",null,[e("a",be,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:113"),n(i)])]),Te,e("p",null,[e("a",Ce,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:63"),n(i)])]),xe,De,Pe,Be,e("p",null,[e("a",ke,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:115"),n(i)])]),ve,Fe,Me,Se,e("p",null,[e("a",Re,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:114"),n(i)])]),we,e("p",null,[e("a",Oe,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:52"),n(i)])]),Ie,e("p",null,[e("a",Le,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:62"),n(i)])]),Ne,Ee,e("p",null,[t("• "),Ae,t(),He,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Ze]),_:1}),t("[] = "),qe]),Ge,e("p",null,[e("a",Qe,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:56"),n(i)])]),je,e("p",null,[e("a",We,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:116"),n(i)])]),Ve,Ue,e("p",null,[t("• "),ze,t(),Je,t(),Ke,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[Xe]),_:1}),t("<"),Ye,t(", "),$e,t(", "),et,t(", "),tt,t(", "),nt,t(", "),ot,t(">")]),st,e("p",null,[e("a",it,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:103"),n(i)])]),at,dt,lt,ct,e("table",null,[rt,e("tbody",null,[e("tr",null,[ut,e("td",ht,[_t,t("<"),pt,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[mt]),_:1}),t("<"),ft,t(", "),yt,t(", "),gt,t(", "),bt,t(", "),Tt,t(", "),Ct,t(">>")])]),e("tr",null,[xt,e("td",Dt,[Pt,t("<"),Bt,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[kt]),_:1}),t("<"),vt,t(", "),Ft,t(", "),Mt,t(", "),St,t(", "),Rt,t(">>")])]),e("tr",null,[wt,e("td",Ot,[t("{ "),It,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Lt]),_:1}),t("<"),Nt,t(", "),Et,t(", "),At,t(", "),Ht,t(", "),Zt,t("> ; "),qt,t(": "),Gt,t("<"),Qt,t(", "),jt,t(", "),Wt,t("> ; "),Vt,t(": "),Ut,t("<"),zt,t(", "),Jt,t(", "),Kt,t("> }")])]),e("tr",null,[Xt,e("td",Yt,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[$t]),_:1}),t("<"),en,t(", "),tn,t(", "),nn,t(", "),on,t(", "),sn,t(">")])]),an,dn,e("tr",null,[ln,e("td",cn,[t("{ "),rn,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[un]),_:1}),t("<"),hn,t(", "),_n,t(", "),pn,t(", "),mn,t(", "),fn,t("> ; "),yn,t(": "),gn,t("<"),bn,t(", "),Tn,t(", "),Cn,t("> }")])]),e("tr",null,[xn,e("td",Dn,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Pn]),_:1}),t("<"),Bn,t(", "),kn,t(", "),vn,t(", "),Fn,t(", "),Mn,t(">")])]),Sn])]),Rn,e("p",null,[e("a",wn,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:65"),n(i)])]),On,e("table",null,[In,e("tbody",null,[e("tr",null,[Ln,e("td",Nn,[t("{ "),En,t(": "),An,t(" ; "),Hn,t(": "),Zn,t(" ; "),qn,t(": "),Gn,t(" ; "),Qn,t(": "),jn,t(" ; "),Wn,t(": "),Vn,t(" ; "),Un,t(": "),zn,t(" ; "),Jn,t(": "),Kn,t(" ; "),Xn,t(": "),Yn,t(" } & { "),$n,t(": { "),eo,t(": "),to,t(" | "),no,t(" | "),oo,t(" | "),so,t(" | "),io,t(" ; "),ao,t(": { "),lo,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[co]),_:1}),t("[] ; "),ro,t(": "),uo,t(" ; "),ho,t(": "),_o,t(" ; "),po,t(": "),mo,t(" ; "),fo,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[yo]),_:1}),t("<"),go,t(">[] ; "),bo,t(": "),To,t(" ; "),Co,t(": "),xo,t("[] } ; "),Do,t(": "),Po,t(" } }")])])])]),Bo,e("p",null,[e("a",ko,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:40"),n(i)])]),vo,e("p",null,[e("a",Fo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:43"),n(i)])]),Mo,e("p",null,[e("a",So,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:42"),n(i)])]),Ro,e("p",null,[e("a",wo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:41"),n(i)])]),Oo,e("p",null,[e("a",Io,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:58"),n(i)])]),Lo,e("p",null,[e("a",No,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:60"),n(i)])]),Eo,e("p",null,[e("a",Ao,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:46"),n(i)])]),Ho,e("p",null,[e("a",Zo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:45"),n(i)])]),qo,e("p",null,[e("a",Go,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:44"),n(i)])]),Qo,e("p",null,[e("a",jo,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:47"),n(i)])]),Wo,Vo,e("p",null,[t("• "),Uo,t(),zo,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Jo]),_:1}),t("<"),Ko,t(">[] = "),Xo]),Yo,e("p",null,[e("a",$o,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:48"),n(i)])]),es,e("p",null,[e("a",ts,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:54"),n(i)])]),ns,e("p",null,[e("a",os,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:50"),n(i)])]),ss,is,e("p",null,[t("▸ "),as,t("("),ds,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[ls]),_:1}),t("<"),cs,t(", "),rs,t(", "),us,t(", "),hs,t(", "),_s,t(", "),ps,t(", "),ms,t(">")]),fs,ys,e("table",null,[gs,e("tbody",null,[e("tr",null,[bs,e("td",Ts,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Cs]),_:1}),t("[]")]),xs])])]),Ds,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ps]),_:1}),t("<"),Bs,t(", "),ks,t(", "),vs,t(", "),Fs,t(", "),Ms,t(", "),Ss,t(", "),Rs,t(">")]),ws,e("p",null,[e("a",Os,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:269"),n(i)])]),Is,Ls,e("p",null,[t("▸ "),Ns,t("("),Es,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[As]),_:1}),t("<"),Hs,t(", "),Zs,t(", "),qs,t(", "),Gs,t(", "),Qs,t(", "),js,t(", "),Ws,t(">")]),Vs,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Us]),_:1}),t("<"),zs,t(", "),Js,t(", "),Ks,t(", "),Xs,t(", "),Ys,t(", "),$s,t(", "),ei,t(">")]),ti,e("p",null,[e("a",ni,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:251"),n(i)])]),oi,si,e("p",null,[t("▸ "),ii,t("<"),ai,t(", "),di,t(", "),li,t(">("),ci,t(", "),ri,t(", "),ui,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[hi]),_:1}),t("<"),_i,t(", "),pi,t(", "),mi,t(", "),fi,t(", "),yi,t(", "),gi,t(", "),bi,t(">")]),Ti,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Ci]),_:1}),t("<"),xi,t(", "),Di,t(", "),Pi,t(", "),Bi,t(", "),ki,t(", "),vi,t(", "),Fi,t(">")]),Mi,Si,e("p",null,[e("a",Ri,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:165"),n(i)])]),wi,Oi,e("p",null,[t("▸ "),Ii,t("<"),Li,t(", "),Ni,t(", "),Ei,t(">("),Ai,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Hi]),_:1}),t("<"),Zi,t(", "),qi,t(", "),Gi,t(", "),Qi,t(", "),ji,t(", "),Wi,t(", "),Vi,t(">")]),Ui,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[zi]),_:1}),t("<"),Ji,t(", "),Ki,t(", "),Xi,t(", "),Yi,t(", "),$i,t(", "),ea,t(", "),ta,t(">")]),na,oa,e("p",null,[e("a",sa,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:199"),n(i)])]),ia,aa,e("p",null,[t("▸ "),da,t("<"),la,t(", "),ca,t(", "),ra,t(">("),ua,t(", "),ha,t(", "),_a,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[pa]),_:1}),t("<"),ma,t(", "),fa,t(", "),ya,t(", "),ga,t(", "),ba,t(", "),Ta,t(", "),Ca,t(">")]),xa,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Da]),_:1}),t("<"),Pa,t(", "),Ba,t(", "),ka,t(", "),va,t(", "),Fa,t(", "),Ma,t(", "),Sa,t(">")]),Ra,wa,e("p",null,[e("a",Oa,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:138"),n(i)])]),Ia,La,e("p",null,[t("▸ "),Na,t("("),Ea,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Aa]),_:1}),t("<"),Ha,t(", "),Za,t(", "),qa,t(", "),Ga,t(", "),Qa,t(", "),ja,t(", "),Wa,t(">")]),Va,Ua,e("table",null,[za,e("tbody",null,[e("tr",null,[Ja,e("td",Ka,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Xa]),_:1}),t("<"),Ya,t(">[]")]),$a])])]),ed,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[td]),_:1}),t("<"),nd,t(", "),od,t(", "),sd,t(", "),id,t(", "),ad,t(", "),dd,t(", "),ld,t(">")]),cd,e("p",null,[e("a",rd,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:234"),n(i)])]),ud,hd,e("p",null,[t("▸ "),_d,t("("),pd,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[md]),_:1}),t("<"),fd,t(", "),yd,t(", "),gd,t(", "),bd,t(", "),Td,t(", "),Cd,t(", "),xd,t(">")]),Dd,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Pd]),_:1}),t("<"),Bd,t(", "),kd,t(", "),vd,t(", "),Fd,t(", "),Md,t(", "),Sd,t(", "),Rd,t(">")]),wd,Od,e("p",null,[e("a",Id,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:593"),n(i)])]),Ld,Nd,e("p",null,[t("▸ "),Ed,t("("),Ad,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Hd]),_:1}),t("<"),Zd,t(", "),qd,t(", "),Gd,t(", "),Qd,t(", "),jd,t(", "),Wd,t(", "),Vd,t(">")]),Ud,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[zd]),_:1}),t("<"),Jd,t(", "),Kd,t(", "),Xd,t(", "),Yd,t(", "),$d,t(", "),el,t(", "),tl,t(">")]),nl,ol,e("p",null,[e("a",sl,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:497"),n(i)])]),il,al,e("p",null,[t("▸ "),dl,t("("),ll,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[cl]),_:1}),t("<"),rl,t(", "),ul,t(", "),hl,t(", "),_l,t(", "),pl,t(", "),ml,t(", "),fl,t(">")]),yl,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[gl]),_:1}),t("<"),bl,t(", "),Tl,t(", "),Cl,t(", "),xl,t(", "),Dl,t(", "),Pl,t(", "),Bl,t(">")]),kl,vl,e("p",null,[e("a",Fl,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:487"),n(i)])]),Ml,Sl,e("p",null,[t("▸ "),Rl,t("("),wl,t(", "),Ol,t(", "),Il,t(", "),Ll,t(", "),Nl,t(", "),El,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Al]),_:1}),t("<"),Hl,t(", "),Zl,t(", "),ql,t(", "),Gl,t(", "),Ql,t(", "),jl,t(", "),Wl,t(">")]),Vl,Ul,zl,Jl,e("table",null,[Kl,e("tbody",null,[e("tr",null,[Xl,e("td",Yl,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[$l]),_:1})]),ec]),tc,nc,oc,sc,ic])]),ac,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[dc]),_:1}),t("<"),lc,t(", "),cc,t(", "),rc,t(", "),uc,t(", "),hc,t(", "),_c,t(", "),pc,t(">")]),mc,fc,e("p",null,[e("a",yc,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:459"),n(i)])]),gc,bc,e("p",null,[t("▸ "),Tc,t("("),Cc,t("): "),n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[xc]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Dc]),_:1}),t("<"),Pc,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Bc]),_:1}),t(", "),kc,t(", "),vc,t(", "),Fc,t(", "),Mc,t(", "),Sc,t(", "),Rc,t(">>")]),wc,e("table",null,[Oc,e("tbody",null,[e("tr",null,[Ic,e("td",Lc,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[Nc]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Ec]),_:1}),t("<"),Ac,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Hc]),_:1}),t(", "),Zc,t(", "),qc,t(", "),Gc,t(", "),Qc,t(", "),jc,t(", "),Wc,t(">>")])])])]),Vc,e("p",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[Uc]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[zc]),_:1}),t("<"),Jc,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Kc]),_:1}),t(", "),Xc,t(", "),Yc,t(", "),$c,t(", "),er,t(", "),tr,t(", "),nr,t(">>")]),or,e("p",null,[e("a",sr,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:528"),n(i)])]),ir,ar,e("p",null,[t("▸ "),dr,t("(): "),n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[lr]),_:1}),t("<"),cr,t(", "),rr,t(", "),ur,t(", "),hr,t(", "),_r,t(", "),pr,t(">")]),mr,fr,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[yr]),_:1}),t("<"),gr,t(", "),br,t(", "),Tr,t(", "),Cr,t(", "),xr,t(", "),Dr,t(">")]),Pr,Br,e("p",null,[e("a",kr,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:735"),n(i)])]),vr,Fr,e("p",null,[t("▸ "),Mr,t("(): "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Sr]),_:1}),t("<"),Rr,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[wr]),_:1}),t(", "),Or,t(", "),Ir,t(", "),Lr,t(", "),Nr,t(", "),Er,t(", "),Ar,t(">")]),Hr,Zr,e("p",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[qr]),_:1}),t("<"),Gr,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[Qr]),_:1}),t(", "),jr,t(", "),Wr,t(", "),Vr,t(", "),Ur,t(", "),zr,t(", "),Jr,t(">")]),Kr,Xr,e("p",null,[e("a",Yr,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:602"),n(i)])]),$r,eu,e("p",null,[t("▸ "),tu,t("(): "),nu,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[ou]),_:1}),t("<"),su,t(", "),iu,t(", "),au,t(", "),du,t(", "),lu,t(">")]),cu,ru,e("p",null,[uu,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[hu]),_:1}),t("<"),_u,t(", "),pu,t(", "),mu,t(", "),fu,t(", "),yu,t(">")]),gu,bu,e("p",null,[e("a",Tu,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:328"),n(i)])]),Cu,xu,e("p",null,[t("▸ "),Du,t("(): "),Pu,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Bu]),_:1}),t("<"),ku,t(", "),vu,t(", "),Fu,t(", "),Mu,t(", "),Su,t(">")]),Ru,wu,e("p",null,[Ou,t(" | "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Iu]),_:1}),t("<"),Lu,t(", "),Nu,t(", "),Eu,t(", "),Au,t(", "),Hu,t(">")]),Zu,qu,e("p",null,[e("a",Gu,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:385"),n(i)])]),Qu,ju,e("p",null,[t("▸ "),Wu,t("(): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Vu]),_:1}),t("<"),Uu,t(", "),zu,t(", "),Ju,t(", "),Ku,t(", "),Xu,t(", "),Yu,t(", "),$u,t(">")]),eh,th,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[nh]),_:1}),t("<"),oh,t(", "),sh,t(", "),ih,t(", "),ah,t(", "),dh,t(", "),lh,t(", "),ch,t(">")]),rh,uh,e("p",null,[e("a",hh,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:188"),n(i)])]),_h,ph,e("p",null,[t("▸ "),mh,t("("),fh,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[yh]),_:1}),t("<"),gh,t(", "),bh,t(", "),Th,t(", "),Ch,t(", "),xh,t(", "),Dh,t(", "),Ph,t(">")]),Bh,kh,e("table",null,[vh,e("tbody",null,[e("tr",null,[Fh,e("td",Mh,[Sh,t("<"),Rh,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[wh]),_:1}),t("<"),Oh,t(", "),Ih,t(", "),Lh,t(", "),Nh,t(", "),Eh,t(", "),Ah,t(">>")])])])]),Hh,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Zh]),_:1}),t("<"),qh,t(", "),Gh,t(", "),Qh,t(", "),jh,t(", "),Wh,t(", "),Vh,t(", "),Uh,t(">")]),zh,Jh,e("p",null,[e("a",Kh,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:427"),n(i)])]),Xh,Yh,e("p",null,[t("▸ "),$h,t("("),e_,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[t_]),_:1}),t("<"),n_,t(", "),o_,t(", "),s_,t(", "),i_,t(", "),a_,t(", "),d_,t(", "),l_,t(">")]),c_,r_,e("table",null,[u_,e("tbody",null,[e("tr",null,[h_,e("td",__,[p_,t("<"),m_,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[f_]),_:1}),t("<"),y_,t(", "),g_,t(", "),b_,t(", "),T_,t(", "),C_,t(">>")]),x_])])]),D_,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[P_]),_:1}),t("<"),B_,t(", "),k_,t(", "),v_,t(", "),F_,t(", "),M_,t(", "),S_,t(", "),R_,t(">")]),w_,O_,e("p",null,[e("a",I_,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:405"),n(i)])]),L_,N_,e("p",null,[t("▸ "),E_,t("("),A_,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[H_]),_:1}),t("<"),Z_,t(", "),q_,t(", "),G_,t(", "),Q_,t(", "),j_,t(", "),W_,t(", "),V_,t(">")]),U_,z_,e("table",null,[J_,e("tbody",null,[e("tr",null,[K_,e("td",X_,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[Y_]),_:1}),t("<"),$_,t(", "),ep,t(", "),tp,t(", "),np,t(", "),op,t(", "),sp,t(">")]),ip])])]),ap,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[dp]),_:1}),t("<"),lp,t(", "),cp,t(", "),rp,t(", "),up,t(", "),hp,t(", "),_p,t(", "),pp,t(">")]),mp,e("p",null,[e("a",fp,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:693"),n(i)])]),yp,gp,e("p",null,[t("▸ "),bp,t("("),Tp,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Cp]),_:1}),t("<"),xp,t(", "),Dp,t(", "),Pp,t(", "),Bp,t(", "),kp,t(", "),vp,t(", "),Fp,t(">")]),Mp,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Sp]),_:1}),t("<"),Rp,t(", "),wp,t(", "),Op,t(", "),Ip,t(", "),Lp,t(", "),Np,t(", "),Ep,t(">")]),Ap,Hp,e("p",null,[e("a",Zp,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:523"),n(i)])]),qp,Gp,e("p",null,[t("▸ "),Qp,t("("),jp,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Wp]),_:1}),t("<"),Vp,t(", "),Up,t(", "),zp,t(", "),Jp,t(", "),Kp,t(", "),Xp,t(", "),Yp,t(">")]),$p,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[em]),_:1}),t("<"),tm,t(", "),nm,t(", "),om,t(", "),sm,t(", "),im,t(", "),am,t(", "),dm,t(">")]),lm,e("p",null,[e("a",cm,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:513"),n(i)])]),rm,um,e("p",null,[t("▸ "),hm,t("("),_m,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[pm]),_:1}),t("<"),mm,t(", "),fm,t(", "),ym,t(", "),gm,t(", "),bm,t(", "),Tm,t(", "),Cm,t(">")]),xm,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Dm]),_:1}),t("<"),Pm,t(", "),Bm,t(", "),km,t(", "),vm,t(", "),Fm,t(", "),Mm,t(", "),Sm,t(">")]),Rm,e("p",null,[e("a",wm,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:125"),n(i)])]),Om,Im,e("p",null,[t("▸ "),Lm,t("<"),Nm,t(", "),Em,t(", "),Am,t(", "),Hm,t(", "),Zm,t(", "),qm,t(">("),Gm,t(", "),Qm,t(", "),jm,t(", "),Wm,t(", "),Vm,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[Um]),_:1}),t("<"),zm,t(", "),Jm,t(", "),Km,t(", "),Xm,t(", "),Ym,t(", "),$m,t(", "),e1,t(">")]),t1,e("table",null,[n1,e("tbody",null,[o1,s1,e("tr",null,[i1,e("td",a1,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[d1]),_:1}),t("<"),l1,t(", "),c1,t(", "),r1,t(", "),u1,t(", "),h1,t(">")]),_1]),p1,m1])]),f1,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[y1]),_:1}),t("<"),g1,t(", "),b1,t(", "),T1,t(", "),C1,t(", "),x1,t(", "),D1,t(", "),P1,t(">")]),B1,k1,e("p",null,[e("a",v1,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:285"),n(i)])]),F1,M1,e("p",null,[t("▸ "),S1,t("<"),R1,t(", "),w1,t(", "),O1,t(">("),I1,t(", "),L1,t(", "),N1,t(", "),E1,t("): "),n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[A1]),_:1}),t("<"),H1,t(", "),Z1,t(", "),q1,t(", "),G1,t(", "),Q1,t(", "),j1,t(", "),W1,t(">")]),V1,e("table",null,[U1,e("tbody",null,[z1,e("tr",null,[J1,e("td",K1,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[X1]),_:1}),t("<"),Y1,t(", "),$1,t(", "),ef,t(", "),tf,t(", "),nf,t(">")]),of]),sf,af])]),df,e("p",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[lf]),_:1}),t("<"),cf,t(", "),rf,t(", "),uf,t(", "),hf,t(", "),_f,t(", "),pf,t(", "),mf,t(">")]),ff,yf,e("p",null,[e("a",gf,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:352"),n(i)])])])}const Pf=l(u,[["render",bf],["__file","purista_core.CommandDefinitionBuilder.html.vue"]]);export{Pf as default};
