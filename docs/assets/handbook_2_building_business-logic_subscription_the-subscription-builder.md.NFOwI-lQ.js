import{_ as e,c as r,o as s,V as i}from"./chunks/framework.ITQiifkM.js";const m=JSON.parse('{"title":"The Subscription Builder","description":"How to use the subscription builder to create a new subscription for a service","frontmatter":{"title":"The Subscription Builder","description":"How to use the subscription builder to create a new subscription for a service","order":203010},"headers":[],"relativePath":"handbook/2_building_business-logic/subscription/the-subscription-builder.md","filePath":"handbook/2_building_business-logic/subscription/the-subscription-builder.md","lastUpdated":1706444636000}'),t={name:"handbook/2_building_business-logic/subscription/the-subscription-builder.md"},o=i('<h1 id="the-subscription-builder" tabindex="-1">The subscription builder <a class="header-anchor" href="#the-subscription-builder" aria-label="Permalink to &quot;The subscription builder&quot;">​</a></h1><h2 id="guards-transformers" tabindex="-1">Guards &amp; Transformers <a class="header-anchor" href="#guards-transformers" aria-label="Permalink to &quot;Guards &amp; Transformers&quot;">​</a></h2><p>Subscriptions have the same transform and hook options as commands.</p><p>See chapter <a href="./../command/the-command-builder.html">Transformer &amp; Guards</a>.</p><p>There are only slightly differences in some of the builder methods. For example, setting the output schema requires an event name in addition to the schema.</p>',5),a=[o];function n(u,c,d,h,l,p){return s(),r("div",null,a)}const _=e(t,[["render",n]]);export{m as __pageData,_ as default};
