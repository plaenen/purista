import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as c,c as r,b as e,e as n,w as s,d as t,a as d}from"./app-1068bce5.js";const u={},h=e("h1",{id:"module-purista-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-purista-core","aria-hidden":"true"},"#"),t(" Module: @purista/core")],-1),_=e("p",null,"This is the main package of PURISTA.",-1),p=e("p",null,"A backend framework for building message based domain services.",-1),f=e("p",null,"This framework adapts and combines a wide range of different patters from domain driven design, cqrs, microservice, event sourcing and lambda functions.",-1),g=e("p",null,"It is build from ground up in typescript and highly focuses on schema, and auto generation of types, input-output-validation, OpenApi documentation (swagger).",-1),m={href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"},y={href:"https://sinonjs.org",target:"_blank",rel:"noopener noreferrer"},b={href:"https://purista.dev",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"enumerations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enumerations","aria-hidden":"true"},"#"),t(" Enumerations")],-1),S=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),T=e("h3",{id:"interfaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),t(" Interfaces")],-1),k=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),C=e("h3",{id:"variables",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),t(" Variables")],-1),P=e("h3",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),t(" Functions")],-1),w=e("h3",{id:"command",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),t(" Command")],-1),I=e("h3",{id:"event-bridge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#event-bridge","aria-hidden":"true"},"#"),t(" Event bridge")],-1),M=e("h3",{id:"helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#helper","aria-hidden":"true"},"#"),t(" Helper")],-1),E=e("h3",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),t(" Service")],-1),F=e("h3",{id:"store",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#store","aria-hidden":"true"},"#"),t(" Store")],-1),D=e("h3",{id:"subscription",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscription","aria-hidden":"true"},"#"),t(" Subscription")],-1),R=e("h3",{id:"unit-test-helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unit-test-helper","aria-hidden":"true"},"#"),t(" Unit test helper")],-1),B=d('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="authcredentials" tabindex="-1"><a class="header-anchor" href="#authcredentials" aria-hidden="true">#</a> AuthCredentials</h3><p>Ƭ <strong>AuthCredentials</strong>: <code>Object</code></p><p>HTTP authentication information</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basicAuth?</code></td><td style="text-align:left;">{ <code>password</code>: <code>string</code> ; <code>username</code>: <code>string</code> }</td><td style="text-align:left;">Basic-Auth information</td></tr><tr><td style="text-align:left;"><code>basicAuth.password</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth password</td></tr><tr><td style="text-align:left;"><code>basicAuth.username</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Basic-Auth username</td></tr><tr><td style="text-align:left;"><code>bearerToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bearer token header</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),N={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/AuthCredentials.ts#L4",target:"_blank",rel:"noopener noreferrer"},L=e("hr",null,null,-1),O=e("h3",{id:"brokerheadercommandmsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandmsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandMsg")],-1),A=e("strong",null,"BrokerHeaderCommandMsg",-1),H=e("code",null,"Prettify",-1),j=e("code",null,"BrokerHeaderCustomMsg",-1),G=e("code",null,"receiverInstanceId?",-1),q=e("code",null,"InstanceId",-1),V=e("code",null,"receiverServiceName",-1),z=e("code",null,"string",-1),Z=e("code",null,"receiverServiceTarget",-1),U=e("code",null,"string",-1),Q=e("code",null,"receiverServiceVersion",-1),K=e("code",null,"string",-1),W=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),J=e("h3",{id:"brokerheadercommandresponsemsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercommandresponsemsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCommandResponseMsg")],-1),X=e("strong",null,"BrokerHeaderCommandResponseMsg",-1),ee=e("code",null,"Prettify",-1),te=e("code",null,"BrokerHeaderCommandMsg",-1),ne=e("code",null,"receiverInstanceId",-1),oe=e("code",null,"InstanceId",-1),se=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),le={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCommandResponseMsg.ts#L5",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),ae=e("h3",{id:"brokerheadercustommsg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brokerheadercustommsg","aria-hidden":"true"},"#"),t(" BrokerHeaderCustomMsg")],-1),ie=e("p",null,[t("Ƭ "),e("strong",null,"BrokerHeaderCustomMsg"),t(": "),e("code",null,"Object")],-1),ce=e("h4",{id:"type-declaration-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-1","aria-hidden":"true"},"#"),t(" Type declaration")],-1),re=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),he=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),_e={style:{"text-align":"left"}},pe=e("code",null,"EBMessageType",-1),fe=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),ge={style:{"text-align":"left"}},me=e("code",null,"PrincipalId",-1),ye=e("td",{style:{"text-align":"left"}},[e("code",null,"senderInstanceId")],-1),be={style:{"text-align":"left"}},xe=e("code",null,"InstanceId",-1),ve=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"senderServiceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ke=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),Ce={style:{"text-align":"left"}},Pe=e("code",null,"TenantId",-1),we=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ie={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/BrokerHeaderCustomMsg.ts#L6",target:"_blank",rel:"noopener noreferrer"},Me=e("hr",null,null,-1),Ee=e("h3",{id:"command-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#command-1","aria-hidden":"true"},"#"),t(" Command")],-1),Fe=e("strong",null,"Command",-1),De=e("code",null,"PayloadType",-1),Re=e("code",null,"ParameterType",-1),Be=e("code",null,"Prettify",-1),Ne=e("code",null,"correlationId",-1),Le=e("code",null,"CorrelationId",-1),Oe=e("code",null,"messageType",-1),Ae=e("code",null,"Command",-1),He=e("code",null,"payload",-1),je=e("code",null,"parameter",-1),Ge=e("code",null,"ParameterType",-1),qe=e("code",null,"payload",-1),Ve=e("code",null,"PayloadType",-1),ze=e("code",null,"receiver",-1),Ze=e("code",null,"EBMessageAddress",-1),Ue=e("code",null,"EBMessageBase",-1),Qe=d('<p>Command is a event bridge message, which is emitted by sender to event bridge. The event bridge dispatches the event to the receiver. A command expects to get a response message from receiver back to sender.</p><p>Also if there are subscriptions which are matching given command, the event bridge also dispatches the command message to the subscriber(s).</p><p>BE AWARE: Subscribers should not respond with command responses if they are &quot;silent&quot; subscribers/listeners.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',6),Ke={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/Command.ts#L18",target:"_blank",rel:"noopener noreferrer"},We=e("hr",null,null,-1),$e=e("h3",{id:"commanddefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionlist","aria-hidden":"true"},"#"),t(" CommandDefinitionList")],-1),Ye=e("strong",null,"CommandDefinitionList",-1),Je=e("code",null,"ServiceClassType",-1),Xe=e("code",null,"CommandDefinition",-1),et=e("code",null,"ServiceClassType",-1),tt=e("code",null,"CommandDefinitionMetadataBase",-1),nt=e("code",null,"any",-1),ot=e("code",null,"any",-1),st=e("code",null,"any",-1),lt=e("code",null,"any",-1),dt=e("code",null,"any",-1),at=e("code",null,"any",-1),it=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> CommandDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>`,3),ct=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rt=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),ut={style:{"text-align":"left"}},ht=e("code",null,"ServiceClass",-1),_t=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),pt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionList.ts#L12",target:"_blank",rel:"noopener noreferrer"},ft=e("hr",null,null,-1),gt=e("h3",{id:"commanddefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanddefinitionmetadatabase","aria-hidden":"true"},"#"),t(" CommandDefinitionMetadataBase")],-1),mt=e("p",null,[t("Ƭ "),e("strong",null,"CommandDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),yt=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),bt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),xt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),vt={style:{"text-align":"left"}},St=e("code",null,"contentEncodingRequest?",-1),Tt=e("code",null,"string",-1),kt=e("code",null,"contentEncodingResponse?",-1),Ct=e("code",null,"string",-1),Pt=e("code",null,"contentTypeRequest?",-1),wt=e("code",null,"ContentType",-1),It=e("code",null,"contentTypeResponse?",-1),Mt=e("code",null,"ContentType",-1),Et=e("code",null,"deprecated?",-1),Ft=e("code",null,"boolean",-1),Dt=e("code",null,"inputPayload?",-1),Rt=e("code",null,"SchemaObject",-1),Bt=e("code",null,"outputPayload?",-1),Nt=e("code",null,"SchemaObject",-1),Lt=e("code",null,"parameter?",-1),Ot=e("code",null,"SchemaObject",-1),At=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ht=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),jt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),Gt={style:{"text-align":"left"}},qt=e("code",null,"ContentType",-1),Vt=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),zt={style:{"text-align":"left"}},Zt=e("code",null,"ContentType",-1),Ut=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.deprecated?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")])],-1),Qt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Kt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Wt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),$t=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Yt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},Jt=d(`<hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> Complete</h3><p>Ƭ <strong>Complete</strong>&lt;<code>T</code>&gt;: { [P in keyof Required&lt;T&gt;]: Pick&lt;T, P&gt; extends Required&lt;Pick&lt;T, P&gt;&gt; ? T[P] : T[P] | undefined }</p><p>A helper which forces to provide all object keys, even if they are optional.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 one<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
 two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
 three<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// without:</span>
<span class="token keyword">const</span> x<span class="token operator">:</span><span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>

<span class="token comment">// this will fail</span>
<span class="token keyword">const</span> y<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> three<span class="token operator">:</span> <span class="token string">&#39;will complain that one and two is missing&#39;</span><span class="token punctuation">}</span>
<span class="token comment">// needs to be like this:</span>
<span class="token keyword">const</span> z<span class="token operator">:</span>Complete<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> one<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token string">&#39;will work&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>`,9),Xt={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Complete.ts#L20",target:"_blank",rel:"noopener noreferrer"},en=d('<hr><h3 id="compressionmethod" tabindex="-1"><a class="header-anchor" href="#compressionmethod" aria-hidden="true">#</a> CompressionMethod</h3><p>Ƭ <strong>CompressionMethod</strong>: <code>&quot;gzip&quot;</code> | <code>&quot;deflat&quot;</code> | <code>&quot;br&quot;</code> | <code>undefined</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',4),tn={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/CompressionMethod.ts#L1",target:"_blank",rel:"noopener noreferrer"},nn=d('<hr><h3 id="contenttype" tabindex="-1"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> ContentType</h3><p>Ƭ <strong>ContentType</strong>: <code>&quot;application/json&quot;</code> | <code>&quot;application/javascript&quot;</code> | <code>&quot;text/csv&quot;</code> | <code>&quot;text/css&quot;</code> | <code>&quot;text/html&quot;</code> | <code>&quot;text/javascript&quot;</code> | <code>&quot;text/markdown&quot;</code> | <code>&quot;text/plain&quot;</code> | <code>&quot;text/xml&quot;</code> | <code>string</code></p><p>List of content types for message payloads. If the content type is other than <code>application/json</code>, the message payload must be a string. It is up to the implementation to extract the content type from the original message and to convert or transform data.</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',5),on={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContentType.ts#L6",target:"_blank",rel:"noopener noreferrer"},sn=e("hr",null,null,-1),ln=e("h3",{id:"contextbase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contextbase","aria-hidden":"true"},"#"),t(" ContextBase")],-1),dn=e("p",null,[t("Ƭ "),e("strong",null,"ContextBase"),t(": "),e("code",null,"Object")],-1),an=e("p",null,"The ContextBase provides is a basic type. Each context for command function, subscription function and all Hooks and transformers will have at least the properties of this type.",-1),cn=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),rn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),un=e("td",{style:{"text-align":"left"}},[e("code",null,"configs")],-1),hn={style:{"text-align":"left"}},_n=e("code",null,"getConfig",-1),pn=e("code",null,"ConfigGetterFunction",-1),fn=e("code",null,"removeConfig",-1),gn=e("code",null,"ConfigDeleteFunction",-1),mn=e("code",null,"setConfig",-1),yn=e("code",null,"ConfigSetterFunction",-1),bn=e("td",{style:{"text-align":"left"}},"the config store",-1),xn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.getConfig")],-1),vn={style:{"text-align":"left"}},Sn=e("code",null,"ConfigGetterFunction",-1),Tn=e("td",{style:{"text-align":"left"}},"get a config value from the config store",-1),kn=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.removeConfig")],-1),Cn={style:{"text-align":"left"}},Pn=e("code",null,"ConfigDeleteFunction",-1),wn=e("td",{style:{"text-align":"left"}},"delete a config value from the config store",-1),In=e("td",{style:{"text-align":"left"}},[e("code",null,"configs.setConfig")],-1),Mn={style:{"text-align":"left"}},En=e("code",null,"ConfigSetterFunction",-1),Fn=e("td",{style:{"text-align":"left"}},"set a config value in the config store",-1),Dn=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),Rn={style:{"text-align":"left"}},Bn=e("code",null,"Logger",-1),Nn=e("td",{style:{"text-align":"left"}},"the logger instance",-1),Ln=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets")],-1),On={style:{"text-align":"left"}},An=e("code",null,"getSecret",-1),Hn=e("code",null,"SecretGetterFunction",-1),jn=e("code",null,"removeSecret",-1),Gn=e("code",null,"SecretDeleteFunction",-1),qn=e("code",null,"setSecret",-1),Vn=e("code",null,"SecretSetterFunction",-1),zn=e("td",{style:{"text-align":"left"}},"the secret store",-1),Zn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.getSecret")],-1),Un={style:{"text-align":"left"}},Qn=e("code",null,"SecretGetterFunction",-1),Kn=e("td",{style:{"text-align":"left"}},"get a secret from the secret store",-1),Wn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.removeSecret")],-1),$n={style:{"text-align":"left"}},Yn=e("code",null,"SecretDeleteFunction",-1),Jn=e("td",{style:{"text-align":"left"}},"delete a secret from the secret store",-1),Xn=e("td",{style:{"text-align":"left"}},[e("code",null,"secrets.setSecret")],-1),eo={style:{"text-align":"left"}},to=e("code",null,"SecretSetterFunction",-1),no=e("td",{style:{"text-align":"left"}},"set a secret in the secret store",-1),oo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"Context"),t(" | "),e("code",null,"undefined"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry active span")],-1),so=e("td",{style:{"text-align":"left"}},[e("code",null,"states")],-1),lo={style:{"text-align":"left"}},ao=e("code",null,"getState",-1),io=e("code",null,"StateGetterFunction",-1),co=e("code",null,"removeState",-1),ro=e("code",null,"StateDeleteFunction",-1),uo=e("code",null,"setState",-1),ho=e("code",null,"StateSetterFunction",-1),_o=e("td",{style:{"text-align":"left"}},"the state store",-1),po=e("td",{style:{"text-align":"left"}},[e("code",null,"states.getState")],-1),fo={style:{"text-align":"left"}},go=e("code",null,"StateGetterFunction",-1),mo=e("td",{style:{"text-align":"left"}},"get a state value from the state store",-1),yo=e("td",{style:{"text-align":"left"}},[e("code",null,"states.removeState")],-1),bo={style:{"text-align":"left"}},xo=e("code",null,"StateDeleteFunction",-1),vo=e("td",{style:{"text-align":"left"}},"delete a state value from the state store",-1),So=e("td",{style:{"text-align":"left"}},[e("code",null,"states.setState")],-1),To={style:{"text-align":"left"}},ko=e("code",null,"StateSetterFunction",-1),Co=e("td",{style:{"text-align":"left"}},"set a state value in the state store",-1),Po=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")]),e("td",{style:{"text-align":"left"}},"wrap given function in an opentelemetry span")],-1),wo=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),Io={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ContextBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},Mo=e("hr",null,null,-1),Eo=e("h3",{id:"correlationid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#correlationid","aria-hidden":"true"},"#"),t(" CorrelationId")],-1),Fo=e("p",null,[t("Ƭ "),e("strong",null,"CorrelationId"),t(": "),e("code",null,"string")],-1),Do=e("p",null,"the correlation id links the command invocation message with the command response message",-1),Ro=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Bo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CorrelationId.ts#L2",target:"_blank",rel:"noopener noreferrer"},No=e("hr",null,null,-1),Lo=e("h3",{id:"custommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custommessage","aria-hidden":"true"},"#"),t(" CustomMessage")],-1),Oo=e("strong",null,"CustomMessage",-1),Ao=e("code",null,"Payload",-1),Ho=e("code",null,"Prettify",-1),jo=e("code",null,"eventName",-1),Go=e("code",null,"string",-1),qo=e("code",null,"messageType",-1),Vo=e("code",null,"CustomMessage",-1),zo=e("code",null,"payload?",-1),Zo=e("code",null,"Payload",-1),Uo=e("code",null,"receiver?",-1),Qo=e("code",null,"EBMessageAddress",-1),Ko=e("code",null,"EBMessageBase",-1),Wo=d('<p>A custom message is a message which can be used to pass business information. The producer emits the message without knowledge about any consumer. The producer does not expect a response from a consumer.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',4),$o={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/CustomMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},Yo=d('<hr><h3 id="defaultconfigstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultconfigstoreconfig" aria-hidden="true">#</a> DefaultConfigStoreConfig</h3><p>Ƭ <strong>DefaultConfigStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4>',4),Jo={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/types/DefaultConfigStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},Xo=d('<hr><h3 id="defaulteventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#defaulteventbridgeconfig" aria-hidden="true">#</a> DefaultEventBridgeConfig</h3><p>Ƭ <strong>DefaultEventBridgeConfig</strong>: <code>Object</code></p><p>The configuration for the DefaultEventBridge.</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>emitMessagesAsEventBridgeEvents?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Emit messages which have an event name set as javascript events on the event bridge instance</td></tr><tr><td style="text-align:left;"><code>logWarnOnMessagesWithoutReceiver?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Log warnings on messages which are emitted, but could not delivered to at least one receiver</td></tr></tbody></table><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4>',7),es={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/DefaultEventBridgeConfig.ts#L4",target:"_blank",rel:"noopener noreferrer"},ts=d('<hr><h3 id="defaultsecretstoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultsecretstoreconfig" aria-hidden="true">#</a> DefaultSecretStoreConfig</h3><p>Ƭ <strong>DefaultSecretStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',4),ns={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/types/DefaultSecretStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},os=d('<hr><h3 id="defaultstatestoreconfig" tabindex="-1"><a class="header-anchor" href="#defaultstatestoreconfig" aria-hidden="true">#</a> DefaultStateStoreConfig</h3><p>Ƭ <strong>DefaultStateStoreConfig</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4>',4),ss={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/types/DefaultStateStoreConfig.ts#L1",target:"_blank",rel:"noopener noreferrer"},ls=d('<hr><h3 id="definitioneventbridgeconfig" tabindex="-1"><a class="header-anchor" href="#definitioneventbridgeconfig" aria-hidden="true">#</a> DefinitionEventBridgeConfig</h3><p>Ƭ <strong>DefinitionEventBridgeConfig</strong>: <code>Object</code></p><p>Settings and advices for the event bridge, which are set in the command or subscription builder. The properties are advices and hints. It depends on the used event bridge implementation and underlaying message broker, if a specific property can be respected.</p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoacknowledge</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Send the acknowledge to message broker as soon as the message arrives - defaults to true for commands - defaults to false for subscriptions</td></tr><tr><td style="text-align:left;"><code>durable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Advise the underlaying message broker to store messages if no consumer is available. Messages will be send as soon as the service is able to consume.</td></tr><tr><td style="text-align:left;"><code>shared</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If set to true, the event bridge is adviced to deliver one message to at least one consumer instance. True is the default value. If set to false, the event bridge is adviced to deliver one message to all consumer instances. Use case: Receiving Info of message, which need to be passed to all instance to keep information in sync. In serverless environments, this flag should not have any effect <strong><code>Default</code></strong> <code>ts true </code></td></tr></tbody></table><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',7),ds={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/DefinitionEventBridgeConfig.ts#L6",target:"_blank",rel:"noopener noreferrer"},as=e("hr",null,null,-1),is=e("h3",{id:"ebmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessage","aria-hidden":"true"},"#"),t(" EBMessage")],-1),cs=e("strong",null,"EBMessage",-1),rs=e("code",null,"Command",-1),us=e("code",null,"CommandResponse",-1),hs=e("code",null,"InfoMessage",-1),_s=e("code",null,"CustomMessage",-1),ps=e("p",null,"EBMessage is some message which is handled by the event bridge.",-1),fs=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),gs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessage.ts#L8",target:"_blank",rel:"noopener noreferrer"},ms=e("hr",null,null,-1),ys=e("h3",{id:"ebmessageaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageaddress","aria-hidden":"true"},"#"),t(" EBMessageAddress")],-1),bs=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageAddress"),t(": "),e("code",null,"Object")],-1),xs=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),vs=e("h4",{id:"type-declaration-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-6","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ss=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ts=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),ks={style:{"text-align":"left"}},Cs=e("code",null,"InstanceId",-1),Ps=e("td",{style:{"text-align":"left"}},"instance id of eventbridge",-1),ws=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),Is=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),Ms=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),Es=e("h4",{id:"defined-in-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-19","aria-hidden":"true"},"#"),t(" Defined in")],-1),Fs={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageAddress.ts#L6",target:"_blank",rel:"noopener noreferrer"},Ds=e("hr",null,null,-1),Rs=e("h3",{id:"ebmessagebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagebase","aria-hidden":"true"},"#"),t(" EBMessageBase")],-1),Bs=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageBase"),t(": "),e("code",null,"Object")],-1),Ns=e("p",null,"Default fields which are part of any purista message",-1),Ls=e("h4",{id:"type-declaration-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-7","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Os=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),As=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Hs=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")],-1),js={style:{"text-align":"left"}},Gs=e("code",null,"ContentType",-1),qs=e("td",{style:{"text-align":"left"}},"content type of message payload",-1),Vs=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId?")],-1),zs={style:{"text-align":"left"}},Zs=e("code",null,"CorrelationId",-1),Us=e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command",-1),Qs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),Ks=e("td",{style:{"text-align":"left"}},[e("code",null,"id")],-1),Ws={style:{"text-align":"left"}},$s=e("code",null,"EBMessageId",-1),Ys=e("td",{style:{"text-align":"left"}},"global unique id of message",-1),Js=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),Xs=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),el={style:{"text-align":"left"}},tl=e("code",null,"PrincipalId",-1),nl=e("td",{style:{"text-align":"left"}},"principal id",-1),ol=e("td",{style:{"text-align":"left"}},[e("code",null,"sender")],-1),sl={style:{"text-align":"left"}},ll=e("code",null,"EBMessageSenderAddress",-1),dl=e("td",{style:{"text-align":"left"}},"-",-1),al=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),il={style:{"text-align":"left"}},cl=e("code",null,"TenantId",-1),rl=e("td",{style:{"text-align":"left"}},"principal id",-1),ul=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),hl=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),_l={style:{"text-align":"left"}},pl=e("code",null,"TraceId",-1),fl=e("td",{style:{"text-align":"left"}},"trace id of message",-1),gl=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),ml={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageBase.ts#L12",target:"_blank",rel:"noopener noreferrer"},yl=e("hr",null,null,-1),bl=e("h3",{id:"ebmessageid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessageid","aria-hidden":"true"},"#"),t(" EBMessageId")],-1),xl=e("p",null,[t("Ƭ "),e("strong",null,"EBMessageId"),t(": "),e("code",null,"string")],-1),vl=e("p",null,"Unique id of the event bridge message",-1),Sl=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Tl={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageId.ts#L4",target:"_blank",rel:"noopener noreferrer"},kl=e("hr",null,null,-1),Cl=e("h3",{id:"ebmessagesenderaddress",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ebmessagesenderaddress","aria-hidden":"true"},"#"),t(" EBMessageSenderAddress")],-1),Pl=e("strong",null,"EBMessageSenderAddress",-1),wl=e("code",null,"Prettify",-1),Il=e("code",null,"Omit",-1),Ml=e("code",null,"EBMessageAddress",-1),El=e("code",null,'"instanceId"',-1),Fl=e("code",null,"Required",-1),Dl=e("code",null,"Pick",-1),Rl=e("code",null,"EBMessageAddress",-1),Bl=e("code",null,'"instanceId"',-1),Nl=e("p",null,"A event bridge message address describes the sender or receiver of a message.",-1),Ll=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ol={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EBMessageSenderAddress.ts#L7",target:"_blank",rel:"noopener noreferrer"},Al=e("hr",null,null,-1),Hl=e("h3",{id:"emitcustommessagefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emitcustommessagefunction","aria-hidden":"true"},"#"),t(" EmitCustomMessageFunction")],-1),jl=e("strong",null,"EmitCustomMessageFunction",-1),Gl=e("code",null,"eventName",-1),ql=e("code",null,"string",-1),Vl=e("code",null,"payload?",-1),zl=e("code",null,"Payload",-1),Zl=e("code",null,"contentType?",-1),Ul=e("code",null,"ContentType",-1),Ql=e("code",null,"contentEncoding?",-1),Kl=e("code",null,"string",-1),Wl=e("code",null,"Promise",-1),$l=e("code",null,"void",-1),Yl=d('<h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>Payload</code>&gt;(<code>eventName</code>, <code>payload?</code>, <code>contentType?</code>, <code>contentEncoding?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Emits the given payload as custom message with the given event name.</p><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5>',6),Jl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Xl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ed=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Payload")])],-1),td=e("td",{style:{"text-align":"left"}},[e("code",null,"contentType?")],-1),nd={style:{"text-align":"left"}},od=e("code",null,"ContentType",-1),sd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ld=d(`<h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-custom-event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> the<span class="token operator">:</span> <span class="token string">&#39;payload&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-23" tabindex="-1"><a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a> Defined in</h4>`,5),dd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/EmitCustomMessageFunction.ts#L10",target:"_blank",rel:"noopener noreferrer"},ad=e("hr",null,null,-1),id=e("h3",{id:"errorresponsepayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorresponsepayload","aria-hidden":"true"},"#"),t(" ErrorResponsePayload")],-1),cd=e("p",null,[t("Ƭ "),e("strong",null,"ErrorResponsePayload"),t(": "),e("code",null,"Object")],-1),rd=e("p",null,"Error message payload",-1),ud=e("h4",{id:"type-declaration-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-9","aria-hidden":"true"},"#"),t(" Type declaration")],-1),hd=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),_d=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"data?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"addition data")],-1),pd=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"a human readable error message")],-1),fd=e("td",{style:{"text-align":"left"}},[e("code",null,"status")],-1),gd={style:{"text-align":"left"}},md=e("code",null,"StatusCode",-1),yd=e("td",{style:{"text-align":"left"}},"the error status code",-1),bd=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),xd={style:{"text-align":"left"}},vd=e("code",null,"TraceId",-1),Sd=e("td",{style:{"text-align":"left"}},"the trace if of the request",-1),Td=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),kd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ErrorResponsePayload.ts#L7",target:"_blank",rel:"noopener noreferrer"},Cd=d('<hr><h3 id="eventbridgeadapterevents" tabindex="-1"><a class="header-anchor" href="#eventbridgeadapterevents" aria-hidden="true">#</a> EventBridgeAdapterEvents</h3><p>Ƭ <strong>EventBridgeAdapterEvents</strong>: <code>Object</code></p><h4 id="index-signature" tabindex="-1"><a class="header-anchor" href="#index-signature" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4>',6),Pd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L42",target:"_blank",rel:"noopener noreferrer"},wd=e("hr",null,null,-1),Id=e("h3",{id:"eventbridgeconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeconfig","aria-hidden":"true"},"#"),t(" EventBridgeConfig")],-1),Md=e("strong",null,"EventBridgeConfig",-1),Ed=e("code",null,"CustomConfig",-1),Fd=e("code",null,"Prettify",-1),Dd=e("code",null,"defaultCommandTimeout?",-1),Rd=e("code",null,"number",-1),Bd=e("code",null,"instanceId?",-1),Nd=e("code",null,"string",-1),Ld=e("code",null,"logLevel?",-1),Od=e("code",null,"LogLevelName",-1),Ad=e("code",null,"logger?",-1),Hd=e("code",null,"Logger",-1),jd=e("code",null,"spanProcessor?",-1),Gd=e("code",null,"SpanProcessor",-1),qd=e("code",null,"CustomConfig",-1),Vd=d('<p>The config object for an event bridge. Every event bridge implementation must use this type for configuration.</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td></tr></tbody></table><h4 id="defined-in-26" tabindex="-1"><a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a> Defined in</h4>',4),zd={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeConfig.ts#L10",target:"_blank",rel:"noopener noreferrer"},Zd=d('<hr><h3 id="eventbridgecustomevents" tabindex="-1"><a class="header-anchor" href="#eventbridgecustomevents" aria-hidden="true">#</a> EventBridgeCustomEvents</h3><p>Ƭ <strong>EventBridgeCustomEvents</strong>: <code>Object</code></p><h4 id="index-signature-1" tabindex="-1"><a class="header-anchor" href="#index-signature-1" aria-hidden="true">#</a> Index signature</h4><p>▪ [key: <code>string</code>]: <code>unknown</code></p><h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4>',6),Ud={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L37",target:"_blank",rel:"noopener noreferrer"},Qd=e("hr",null,null,-1),Kd=e("h3",{id:"eventbridgeevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeevents","aria-hidden":"true"},"#"),t(" EventBridgeEvents")],-1),Wd=e("strong",null,"EventBridgeEvents",-1),$d=e("code",null,"Prettify",-1),Yd=e("code",null,"EventBridgeEventsBasic",-1),Jd=e("code",null,"addPrefixToObject",-1),Xd=e("code",null,"EventBridgeAdapterEvents",-1),ea=e("code",null,'"adapter-"',-1),ta=e("code",null,"addPrefixToObject",-1),na=e("code",null,"EventBridgeCustomEvents",-1),oa=e("code",null,'"custom-"',-1),sa=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),la={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L47",target:"_blank",rel:"noopener noreferrer"},da=d('<hr><h3 id="eventkey" tabindex="-1"><a class="header-anchor" href="#eventkey" aria-hidden="true">#</a> EventKey</h3><p>Ƭ <strong>EventKey</strong>&lt;<code>T</code>&gt;: <code>string</code> &amp; keyof <code>T</code></p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',4),aa=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ia=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),ca={style:{"text-align":"left"}},ra=e("code",null,"EventMap",-1),ua=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),ha={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L5",target:"_blank",rel:"noopener noreferrer"},_a=d('<hr><h3 id="eventmap" tabindex="-1"><a class="header-anchor" href="#eventmap" aria-hidden="true">#</a> EventMap</h3><p>Ƭ <strong>EventMap</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="defined-in-30" tabindex="-1"><a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a> Defined in</h4>',4),pa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/GenericEventEmitter.ts#L3",target:"_blank",rel:"noopener noreferrer"},fa=e("hr",null,null,-1),ga=e("h3",{id:"httpclientconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpclientconfig","aria-hidden":"true"},"#"),t(" HttpClientConfig")],-1),ma=e("strong",null,"HttpClientConfig",-1),ya=e("code",null,"CustomConfig",-1),ba=e("code",null,"Prettify",-1),xa=e("code",null,"baseUrl",-1),va=e("code",null,"string",-1),Sa=e("code",null,"basicAuth?",-1),Ta=e("code",null,"password",-1),ka=e("code",null,"string",-1),Ca=e("code",null,"username",-1),Pa=e("code",null,"string",-1),wa=e("code",null,"bearerToken?",-1),Ia=e("code",null,"string",-1),Ma=e("code",null,"defaultHeaders?",-1),Ea=e("code",null,"Record",-1),Fa=e("code",null,"string",-1),Da=e("code",null,"string",-1),Ra=e("code",null,"defaultTimeout?",-1),Ba=e("code",null,"number",-1),Na=e("code",null,"enableOpentelemetry?",-1),La=e("code",null,"boolean",-1),Oa=e("code",null,"isKeepAlive?",-1),Aa=e("code",null,"boolean",-1),Ha=e("code",null,"logLevel?",-1),ja=e("code",null,"LogLevelName",-1),Ga=e("code",null,"logger?",-1),qa=e("code",null,"Logger",-1),Va=e("code",null,"name?",-1),za=e("code",null,"string",-1),Za=e("code",null,"spanProcessor?",-1),Ua=e("code",null,"SpanProcessor",-1),Qa=e("code",null,"CustomConfig",-1),Ka=d('<p>Tha basic configuration for a HTTPClient Requires as least a <code>baseUrl</code></p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomConfig</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-31" tabindex="-1"><a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a> Defined in</h4>',4),Wa={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientConfig.ts#L9",target:"_blank",rel:"noopener noreferrer"},$a=d('<hr><h3 id="httpclientrequestoptions" tabindex="-1"><a class="header-anchor" href="#httpclientrequestoptions" aria-hidden="true">#</a> HttpClientRequestOptions</h3><p>Ƭ <strong>HttpClientRequestOptions</strong>: <code>Object</code></p><p>Options for a single request</p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>hash?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">url hash @example: http://example.com/index.html#hash</td></tr><tr><td style="text-align:left;"><code>headers?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">additional headers</td></tr><tr><td style="text-align:left;"><code>query?</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</td><td style="text-align:left;">query/search string parameter</td></tr><tr><td style="text-align:left;"><code>timeout?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Timeout for the request in ms <strong><code>Default</code></strong> <code>ts 30000 </code></td></tr></tbody></table><h4 id="defined-in-32" tabindex="-1"><a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a> Defined in</h4>',7),Ya={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/HttpClient/types/HttpClientRequestOptions.ts#L4",target:"_blank",rel:"noopener noreferrer"},Ja=e("hr",null,null,-1),Xa=e("h3",{id:"httpexposedservicemeta",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#httpexposedservicemeta","aria-hidden":"true"},"#"),t(" HttpExposedServiceMeta")],-1),ei=e("strong",null,"HttpExposedServiceMeta",-1),ti=e("code",null,"ParameterType",-1),ni=e("code",null,"Prettify",-1),oi=e("code",null,"CommandDefinitionMetadataBase",-1),si=e("code",null,"expose",-1),li=e("code",null,"http",-1),di=e("code",null,"method",-1),ai=e("code",null,'"GET"',-1),ii=e("code",null,'"POST"',-1),ci=e("code",null,'"PATCH"',-1),ri=e("code",null,'"PUT"',-1),ui=e("code",null,'"DELETE"',-1),hi=e("code",null,"openApi?",-1),_i=e("code",null,"additionalStatusCodes?",-1),pi=e("code",null,"StatusCode",-1),fi=e("code",null,"description",-1),gi=e("code",null,"string",-1),mi=e("code",null,"isSecure",-1),yi=e("code",null,"boolean",-1),bi=e("code",null,"operationId?",-1),xi=e("code",null,"string",-1),vi=e("code",null,"query?",-1),Si=e("code",null,"QueryParameter",-1),Ti=e("code",null,"ParameterType",-1),ki=e("code",null,"summary",-1),Ci=e("code",null,"string",-1),Pi=e("code",null,"tags?",-1),wi=e("code",null,"string",-1),Ii=e("code",null,"path",-1),Mi=e("code",null,"string",-1),Ei=d('<h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4>',3),Fi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/HttpExposedServiceMeta.ts#L4",target:"_blank",rel:"noopener noreferrer"},Di=e("hr",null,null,-1),Ri=e("h3",{id:"infoinvoketimeout",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeout","aria-hidden":"true"},"#"),t(" InfoInvokeTimeout")],-1),Bi=e("strong",null,"InfoInvokeTimeout",-1),Ni=e("code",null,"messageType",-1),Li=e("code",null,"InfoInvokeTimeout",-1),Oi=e("code",null,"InfoServiceBase",-1),Ai=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hi={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L22",target:"_blank",rel:"noopener noreferrer"},ji=e("hr",null,null,-1),Gi=e("h3",{id:"infoinvoketimeoutpayload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoinvoketimeoutpayload","aria-hidden":"true"},"#"),t(" InfoInvokeTimeoutPayload")],-1),qi=e("p",null,[t("Ƭ "),e("strong",null,"InfoInvokeTimeoutPayload"),t(": "),e("code",null,"Object")],-1),Vi=e("h4",{id:"type-declaration-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-11","aria-hidden":"true"},"#"),t(" Type declaration")],-1),zi=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Zi=e("td",{style:{"text-align":"left"}},[e("code",null,"correlationId")],-1),Ui={style:{"text-align":"left"}},Qi=e("code",null,"CorrelationId",-1),Ki=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),Wi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),$i=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Yi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ji=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"serviceName"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceTarget"),t(": "),e("code",null,"string"),t(" ; "),e("code",null,"serviceVersion"),t(": "),e("code",null,"string"),t(" }")])],-1),Xi=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),ec=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),tc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),nc=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),oc=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId")],-1),sc={style:{"text-align":"left"}},lc=e("code",null,"TraceId",-1),dc=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),ac={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoInvokeTimeout.ts#L6",target:"_blank",rel:"noopener noreferrer"},ic=e("hr",null,null,-1),cc=e("h3",{id:"infomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessage","aria-hidden":"true"},"#"),t(" InfoMessage")],-1),rc=e("strong",null,"InfoMessage",-1),uc=e("code",null,"InfoServiceDrain",-1),hc=e("code",null,"InfoServiceFunctionAdded",-1),_c=e("code",null,"InfoServiceInit",-1),pc=e("code",null,"InfoServiceNotReady",-1),fc=e("code",null,"InfoServiceReady",-1),gc=e("code",null,"InfoServiceShutdown",-1),mc=e("code",null,"InfoInvokeTimeout",-1),yc=e("code",null,"InfoSubscriptionError",-1),bc=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),xc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L11",target:"_blank",rel:"noopener noreferrer"},vc=e("hr",null,null,-1),Sc=e("h3",{id:"infomessagetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infomessagetype","aria-hidden":"true"},"#"),t(" InfoMessageType")],-1),Tc=e("strong",null,"InfoMessageType",-1),kc=e("code",null,"InfoServiceDrain",-1),Cc=e("code",null,"InfoServiceFunctionAdded",-1),Pc=e("code",null,"InfoServiceInit",-1),wc=e("code",null,"InfoServiceNotReady",-1),Ic=e("code",null,"InfoServiceReady",-1),Mc=e("code",null,"InfoServiceShutdown",-1),Ec=e("code",null,"InfoInvokeTimeout",-1),Fc=e("code",null,"InfoSubscriptionError",-1),Dc=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L21",target:"_blank",rel:"noopener noreferrer"},Bc=e("hr",null,null,-1),Nc=e("h3",{id:"infoservicebase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicebase","aria-hidden":"true"},"#"),t(" InfoServiceBase")],-1),Lc=e("strong",null,"InfoServiceBase",-1),Oc=e("code",null,"Prettify",-1),Ac=e("code",null,"contentEncoding",-1),Hc=e("code",null,'"utf-8"',-1),jc=e("code",null,"contentType",-1),Gc=e("code",null,'"application/json"',-1),qc=e("code",null,"payload?",-1),Vc=e("code",null,"unknown",-1),zc=e("code",null,"EBMessageBase",-1),Zc=e("h4",{id:"defined-in-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-38","aria-hidden":"true"},"#"),t(" Defined in")],-1),Uc={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceBase.ts#L4",target:"_blank",rel:"noopener noreferrer"},Qc=e("hr",null,null,-1),Kc=e("h3",{id:"infoservicedrain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicedrain","aria-hidden":"true"},"#"),t(" InfoServiceDrain")],-1),Wc=e("strong",null,"InfoServiceDrain",-1),$c=e("code",null,"Prettify",-1),Yc=e("code",null,"messageType",-1),Jc=e("code",null,"InfoServiceDrain",-1),Xc=e("code",null,"InfoServiceBase",-1),er=e("h4",{id:"defined-in-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-39","aria-hidden":"true"},"#"),t(" Defined in")],-1),tr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceDrain.ts#L5",target:"_blank",rel:"noopener noreferrer"},nr=e("hr",null,null,-1),or=e("h3",{id:"infoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicefunctionadded","aria-hidden":"true"},"#"),t(" InfoServiceFunctionAdded")],-1),sr=e("strong",null,"InfoServiceFunctionAdded",-1),lr=e("code",null,"Prettify",-1),dr=e("code",null,"messageType",-1),ar=e("code",null,"InfoServiceFunctionAdded",-1),ir=e("code",null,"InfoServiceBase",-1),cr=e("h4",{id:"defined-in-40",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-40","aria-hidden":"true"},"#"),t(" Defined in")],-1),rr={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceFunctionAdded.ts#L5",target:"_blank",rel:"noopener noreferrer"},ur=e("hr",null,null,-1),hr=e("h3",{id:"infoserviceinit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceinit","aria-hidden":"true"},"#"),t(" InfoServiceInit")],-1),_r=e("strong",null,"InfoServiceInit",-1),pr=e("code",null,"Prettify",-1),fr=e("code",null,"messageType",-1),gr=e("code",null,"InfoServiceInit",-1),mr=e("code",null,"InfoServiceBase",-1),yr=e("h4",{id:"defined-in-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-41","aria-hidden":"true"},"#"),t(" Defined in")],-1),br={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceInit.ts#L5",target:"_blank",rel:"noopener noreferrer"},xr=e("hr",null,null,-1),vr=e("h3",{id:"infoservicenotready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoservicenotready","aria-hidden":"true"},"#"),t(" InfoServiceNotReady")],-1),Sr=e("strong",null,"InfoServiceNotReady",-1),Tr=e("code",null,"Prettify",-1),kr=e("code",null,"messageType",-1),Cr=e("code",null,"InfoServiceNotReady",-1),Pr=e("code",null,"InfoServiceBase",-1),wr=e("h4",{id:"defined-in-42",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-42","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ir={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceNotReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Mr=e("hr",null,null,-1),Er=e("h3",{id:"infoserviceready",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceready","aria-hidden":"true"},"#"),t(" InfoServiceReady")],-1),Fr=e("strong",null,"InfoServiceReady",-1),Dr=e("code",null,"Prettify",-1),Rr=e("code",null,"messageType",-1),Br=e("code",null,"InfoServiceReady",-1),Nr=e("code",null,"InfoServiceBase",-1),Lr=e("h4",{id:"defined-in-43",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-43","aria-hidden":"true"},"#"),t(" Defined in")],-1),Or={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceReady.ts#L5",target:"_blank",rel:"noopener noreferrer"},Ar=e("hr",null,null,-1),Hr=e("h3",{id:"infoserviceshutdown",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infoserviceshutdown","aria-hidden":"true"},"#"),t(" InfoServiceShutdown")],-1),jr=e("strong",null,"InfoServiceShutdown",-1),Gr=e("code",null,"Prettify",-1),qr=e("code",null,"messageType",-1),Vr=e("code",null,"InfoServiceShutdown",-1),zr=e("code",null,"InfoServiceBase",-1),Zr=e("h4",{id:"defined-in-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-44","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ur={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoServiceShutdown.ts#L5",target:"_blank",rel:"noopener noreferrer"},Qr=e("hr",null,null,-1),Kr=e("h3",{id:"infosubscriptionerror",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#infosubscriptionerror","aria-hidden":"true"},"#"),t(" InfoSubscriptionError")],-1),Wr=e("strong",null,"InfoSubscriptionError",-1),$r=e("code",null,"Prettify",-1),Yr=e("code",null,"messageType",-1),Jr=e("code",null,"InfoSubscriptionError",-1),Xr=e("code",null,"InfoServiceBase",-1),eu=e("h4",{id:"defined-in-45",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-45","aria-hidden":"true"},"#"),t(" Defined in")],-1),tu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoSubscriptionError.ts#L5",target:"_blank",rel:"noopener noreferrer"},nu=e("hr",null,null,-1),ou=e("h3",{id:"instanceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instanceid","aria-hidden":"true"},"#"),t(" InstanceId")],-1),su=e("p",null,[t("Ƭ "),e("strong",null,"InstanceId"),t(": "),e("code",null,"string")],-1),lu=e("p",null,"the instance id of the event bridge",-1),du=e("h4",{id:"defined-in-46",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-46","aria-hidden":"true"},"#"),t(" Defined in")],-1),au={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InstanceId.ts#L2",target:"_blank",rel:"noopener noreferrer"},iu=e("hr",null,null,-1),cu=e("h3",{id:"invokefunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#invokefunction","aria-hidden":"true"},"#"),t(" InvokeFunction")],-1),ru=e("strong",null,"InvokeFunction",-1),uu=e("code",null,"address",-1),hu=e("code",null,"EBMessageAddress",-1),_u=e("code",null,"payload",-1),pu=e("code",null,"PayloadType",-1),fu=e("code",null,"parameter",-1),gu=e("code",null,"ParameterType",-1),mu=e("code",null,"Promise",-1),yu=e("code",null,"InvokeResponseType",-1),bu=d('<h4 id="type-declaration-12" tabindex="-1"><a class="header-anchor" href="#type-declaration-12" aria-hidden="true">#</a> Type declaration</h4><p>▸ &lt;<code>InvokeResponseType</code>, <code>PayloadType</code>, <code>ParameterType</code>&gt;(<code>address</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p>Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need.</p><h5 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>InvokeResponseType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5>',6),xu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vu=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),Su={style:{"text-align":"left"}},Tu=e("code",null,"EBMessageAddress",-1),ku=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),Cu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")])],-1),Pu=d(`<h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>InvokeResponseType</code>&gt;</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">const</span> address<span class="token operator">:</span> EBMessageAddress <span class="token operator">=</span> <span class="token punctuation">{</span>
  serviceName<span class="token operator">:</span> <span class="token string">&#39;name-of-service-to-invoke&#39;</span><span class="token punctuation">,</span>
  serviceVersion<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
  serviceTarget<span class="token operator">:</span> <span class="token string">&#39;command-name-to-invoke&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> inputPayload <span class="token operator">=</span> <span class="token punctuation">{</span> my<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> inputParameter <span class="token operator">=</span> <span class="token punctuation">{</span> search<span class="token operator">:</span> <span class="token string">&#39;for_me&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">invoke</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyResultType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> inputPayload inputParameter <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-47" tabindex="-1"><a class="header-anchor" href="#defined-in-47" aria-hidden="true">#</a> Defined in</h4>`,5),wu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/InvokeFunction.ts#L21",target:"_blank",rel:"noopener noreferrer"},Iu=d('<hr><h3 id="logfnparamtype" tabindex="-1"><a class="header-anchor" href="#logfnparamtype" aria-hidden="true">#</a> LogFnParamType</h3><p>Ƭ <strong>LogFnParamType</strong>: [<code>unknown</code>, string?, ...any] | [<code>string</code>, ...any]</p><h4 id="defined-in-48" tabindex="-1"><a class="header-anchor" href="#defined-in-48" aria-hidden="true">#</a> Defined in</h4>',4),Mu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L19",target:"_blank",rel:"noopener noreferrer"},Eu=d('<hr><h3 id="loglevelname" tabindex="-1"><a class="header-anchor" href="#loglevelname" aria-hidden="true">#</a> LogLevelName</h3><p>Ƭ <strong>LogLevelName</strong>: <code>&quot;info&quot;</code> | <code>&quot;error&quot;</code> | <code>&quot;warn&quot;</code> | <code>&quot;debug&quot;</code> | <code>&quot;trace&quot;</code> | <code>&quot;fatal&quot;</code></p><h4 id="defined-in-49" tabindex="-1"><a class="header-anchor" href="#defined-in-49" aria-hidden="true">#</a> Defined in</h4>',4),Fu={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/LogLevelName.ts#L1",target:"_blank",rel:"noopener noreferrer"},Du=e("hr",null,null,-1),Ru=e("h3",{id:"loggeroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loggeroptions","aria-hidden":"true"},"#"),t(" LoggerOptions")],-1),Bu=e("p",null,[t("Ƭ "),e("strong",null,"LoggerOptions"),t(": "),e("code",null,"Object")],-1),Nu=e("h4",{id:"type-declaration-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-13","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Lu=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ou=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hostname?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Au=e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId?")],-1),Hu={style:{"text-align":"left"}},ju=e("code",null,"InstanceId",-1),Gu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),qu=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),Vu={style:{"text-align":"left"}},zu=e("code",null,"PrincipalId",-1),Zu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"puristaVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Uu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Qu=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Ku=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Wu=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),$u={style:{"text-align":"left"}},Yu=e("code",null,"TenantId",-1),Ju=e("td",{style:{"text-align":"left"}},[e("code",null,"traceId?")],-1),Xu={style:{"text-align":"left"}},eh=e("code",null,"TraceId",-1),th=e("h4",{id:"defined-in-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-50","aria-hidden":"true"},"#"),t(" Defined in")],-1),nh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Logger.ts#L6",target:"_blank",rel:"noopener noreferrer"},oh=d('<hr><h3 id="loggerstubs" tabindex="-1"><a class="header-anchor" href="#loggerstubs" aria-hidden="true">#</a> LoggerStubs</h3><p>Ƭ <strong>LoggerStubs</strong>: <code>Object</code></p><h4 id="type-declaration-14" tabindex="-1"><a class="header-anchor" href="#type-declaration-14" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>debug</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>info</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>trace</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr><tr><td style="text-align:left;"><code>warn</code></td><td style="text-align:left;"><code>SinonStub</code></td></tr></tbody></table><h4 id="defined-in-51" tabindex="-1"><a class="header-anchor" href="#defined-in-51" aria-hidden="true">#</a> Defined in</h4>',6),sh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L41",target:"_blank",rel:"noopener noreferrer"},lh=e("hr",null,null,-1),dh=e("h3",{id:"newable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#newable","aria-hidden":"true"},"#"),t(" Newable")],-1),ah=e("strong",null,"Newable",-1),ih=e("code",null,"T",-1),ch=e("code",null,"ConfigType",-1),rh=e("code",null,"config",-1),uh=e("code",null,"ServiceConstructorInput",-1),hh=e("code",null,"ConfigType",-1),_h=e("code",null,"T",-1),ph=d('<h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-15" tabindex="-1"><a class="header-anchor" href="#type-declaration-15" aria-hidden="true">#</a> Type declaration</h4><p>• <strong>new Newable</strong>(<code>config</code>): <code>T</code></p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5>',5),fh=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),gh=e("td",{style:{"text-align":"left"}},[e("code",null,"config")],-1),mh={style:{"text-align":"left"}},yh=e("code",null,"ServiceConstructorInput",-1),bh=e("code",null,"ConfigType",-1),xh=e("h5",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),vh=e("p",null,[e("code",null,"T")],-1),Sh=e("h4",{id:"defined-in-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-52","aria-hidden":"true"},"#"),t(" Defined in")],-1),Th={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L28",target:"_blank",rel:"noopener noreferrer"},kh=e("hr",null,null,-1),Ch=e("h3",{id:"pendiginvocation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pendiginvocation","aria-hidden":"true"},"#"),t(" PendigInvocation")],-1),Ph=e("p",null,[t("Ƭ "),e("strong",null,"PendigInvocation"),t(": "),e("code",null,"Object")],-1),wh=e("h4",{id:"type-declaration-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-16","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ih=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Mh=e("td",{style:{"text-align":"left"}},[e("code",null,"reject")],-1),Eh={style:{"text-align":"left"}},Fh=e("code",null,"error",-1),Dh=e("code",null,"HandledError",-1),Rh=e("code",null,"UnhandledError",-1),Bh=e("code",null,"void",-1),Nh=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"resolve")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"responsePayload"),t(": "),e("code",null,"unknown"),t(") => "),e("code",null,"void")])],-1),Lh=e("h4",{id:"defined-in-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-53","aria-hidden":"true"},"#"),t(" Defined in")],-1),Oh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/PendingInvocations.ts#L3",target:"_blank",rel:"noopener noreferrer"},Ah=d('<hr><h3 id="prettify" tabindex="-1"><a class="header-anchor" href="#prettify" aria-hidden="true">#</a> Prettify</h3><p>Ƭ <strong>Prettify</strong>&lt;<code>T</code>&gt;: { [K in keyof T]: T[K] } &amp; {}</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-54" tabindex="-1"><a class="header-anchor" href="#defined-in-54" aria-hidden="true">#</a> Defined in</h4>',6),Hh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/Prettify.ts#L1",target:"_blank",rel:"noopener noreferrer"},jh=e("hr",null,null,-1),Gh=e("h3",{id:"principalid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#principalid","aria-hidden":"true"},"#"),t(" PrincipalId")],-1),qh=e("p",null,[t("Ƭ "),e("strong",null,"PrincipalId"),t(": "),e("code",null,"string")],-1),Vh=e("p",null,"the principal id",-1),zh=e("h4",{id:"defined-in-55",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-55","aria-hidden":"true"},"#"),t(" Defined in")],-1),Zh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/PrincipalId.ts#L2",target:"_blank",rel:"noopener noreferrer"},Uh=d('<hr><h3 id="queryparameter" tabindex="-1"><a class="header-anchor" href="#queryparameter" aria-hidden="true">#</a> QueryParameter</h3><p>Ƭ <strong>QueryParameter</strong>&lt;<code>ParameterType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="type-declaration-17" tabindex="-1"><a class="header-anchor" href="#type-declaration-17" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">keyof <code>ParameterType</code></td></tr><tr><td style="text-align:left;"><code>required</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="defined-in-56" tabindex="-1"><a class="header-anchor" href="#defined-in-56" aria-hidden="true">#</a> Defined in</h4>',8),Qh={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/QueryParameter.ts#L1",target:"_blank",rel:"noopener noreferrer"},Kh=e("hr",null,null,-1),Wh=e("h3",{id:"serviceevents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#serviceevents","aria-hidden":"true"},"#"),t(" ServiceEvents")],-1),$h=e("strong",null,"ServiceEvents",-1),Yh=e("code",null,"ServiceEventsInternal",-1),Jh=e("code",null,"addPrefixToObject",-1),Xh=e("code",null,"CustomEvents",-1),e_=e("code",null,'"custom-"',-1),t_=e("code",null,"addPrefixToObject",-1),n_=e("code",null,"CustomEvents",-1),o_=e("code",null,'"misc-"',-1),s_=e("p",null,"ServiceEvents are plain javascript events sent by the service. There are three types:",-1),l_=e("ul",null,[e("li",null,[t("technical events when a services starts, stops, an error occurs and so on are prefixed with "),e("code",null,"service-")]),e("li",null,[t("response messages, which have a event name assigned, are prefixed with "),e("code",null,"custom-")]),e("li",null,[t("additional events, free defined by developer are prefixed with "),e("code",null,"misc-")])],-1),d_=e("h4",{id:"defined-in-57",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-57","aria-hidden":"true"},"#"),t(" Defined in")],-1),a_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L98",target:"_blank",rel:"noopener noreferrer"},i_=d('<hr><h3 id="serviceinfotype" tabindex="-1"><a class="header-anchor" href="#serviceinfotype" aria-hidden="true">#</a> ServiceInfoType</h3><p>Ƭ <strong>ServiceInfoType</strong>: <code>Object</code></p><p>General service information</p><h4 id="type-declaration-18" tabindex="-1"><a class="header-anchor" href="#type-declaration-18" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>serviceDescription</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>serviceVersion</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-58" tabindex="-1"><a class="header-anchor" href="#defined-in-58" aria-hidden="true">#</a> Defined in</h4>',7),c_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/ServiceInfoType.ts#L4",target:"_blank",rel:"noopener noreferrer"},r_=d('<hr><h3 id="shutdownentry" tabindex="-1"><a class="header-anchor" href="#shutdownentry" aria-hidden="true">#</a> ShutdownEntry</h3><p>Ƭ <strong>ShutdownEntry</strong>: <code>Object</code></p><p>Entry of thing you like to shutdown gracefully</p><h4 id="type-declaration-19" tabindex="-1"><a class="header-anchor" href="#type-declaration-19" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>destroy</code></td><td style="text-align:left;">() =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td><td style="text-align:left;">a async function that is called during shutdown</td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the name</td></tr></tbody></table><h4 id="defined-in-59" tabindex="-1"><a class="header-anchor" href="#defined-in-59" aria-hidden="true">#</a> Defined in</h4>',7),u_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/types/ShutdownEntry.ts#L4",target:"_blank",rel:"noopener noreferrer"},h_=e("hr",null,null,-1),__=e("h3",{id:"storebaseconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#storebaseconfig","aria-hidden":"true"},"#"),t(" StoreBaseConfig")],-1),p_=e("strong",null,"StoreBaseConfig",-1),f_=e("code",null,"Config",-1),g_=e("code",null,"Prettify",-1),m_=e("code",null,"enableGet?",-1),y_=e("code",null,"boolean",-1),b_=e("code",null,"enableRemove?",-1),x_=e("code",null,"boolean",-1),v_=e("code",null,"enableSet?",-1),S_=e("code",null,"boolean",-1),T_=e("code",null,"logLevel?",-1),k_=e("code",null,"LogLevelName",-1),C_=e("code",null,"logger?",-1),P_=e("code",null,"Logger",-1),w_=e("code",null,"Config",-1),I_=d('<p>Basic configuration object which is used by any store</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Config</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="defined-in-60" tabindex="-1"><a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a> Defined in</h4>',4),M_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/StoreBaseConfig.ts#L8",target:"_blank",rel:"noopener noreferrer"},E_=e("hr",null,null,-1),F_=e("h3",{id:"subscriptiondefinitionlist",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionlist","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionList")],-1),D_=e("strong",null,"SubscriptionDefinitionList",-1),R_=e("code",null,"ServiceClassType",-1),B_=e("code",null,"SubscriptionDefinition",-1),N_=e("code",null,"ServiceClassType",-1),L_=e("code",null,"any",-1),O_=e("code",null,"any",-1),A_=e("code",null,"any",-1),H_=e("code",null,"any",-1),j_=d(`<p>Helper type for creating list of service commands to be passed as input to service class</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userServiceCommands<span class="token operator">:</span> SubscriptionDefinitionList<span class="token operator">&lt;</span>UserService<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>signUp<span class="token punctuation">.</span><span class="token function">getDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4>`,3),G_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),q_=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),V_={style:{"text-align":"left"}},z_=e("code",null,"ServiceClass",-1),Z_=e("h4",{id:"defined-in-61",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-61","aria-hidden":"true"},"#"),t(" Defined in")],-1),U_={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionList.ts#L11",target:"_blank",rel:"noopener noreferrer"},Q_=e("hr",null,null,-1),K_=e("h3",{id:"subscriptiondefinitionmetadatabase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiondefinitionmetadatabase","aria-hidden":"true"},"#"),t(" SubscriptionDefinitionMetadataBase")],-1),W_=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionDefinitionMetadataBase"),t(": "),e("code",null,"Object")],-1),$_=e("h4",{id:"type-declaration-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-20","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Y_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),J_=e("td",{style:{"text-align":"left"}},[e("code",null,"expose")],-1),X_={style:{"text-align":"left"}},ep=e("code",null,"contentEncodingRequest?",-1),tp=e("code",null,"string",-1),np=e("code",null,"contentEncodingResponse?",-1),op=e("code",null,"string",-1),sp=e("code",null,"contentTypeRequest?",-1),lp=e("code",null,"ContentType",-1),dp=e("code",null,"contentTypeResponse?",-1),ap=e("code",null,"ContentType",-1),ip=e("code",null,"inputPayload?",-1),cp=e("code",null,"SchemaObject",-1),rp=e("code",null,"outputPayload?",-1),up=e("code",null,"SchemaObject",-1),hp=e("code",null,"parameter?",-1),_p=e("code",null,"SchemaObject",-1),pp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingRequest?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),fp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentEncodingResponse?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),gp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeRequest?")],-1),mp={style:{"text-align":"left"}},yp=e("code",null,"ContentType",-1),bp=e("td",{style:{"text-align":"left"}},[e("code",null,"expose.contentTypeResponse?")],-1),xp={style:{"text-align":"left"}},vp=e("code",null,"ContentType",-1),Sp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.inputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Tp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.outputPayload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),kp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expose.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SchemaObject")])],-1),Cp=e("h4",{id:"defined-in-62",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-62","aria-hidden":"true"},"#"),t(" Defined in")],-1),Pp={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinitionMetadataBase.ts#L5",target:"_blank",rel:"noopener noreferrer"},wp=e("hr",null,null,-1),Ip=e("h3",{id:"subscriptionstorageentry",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionstorageentry","aria-hidden":"true"},"#"),t(" SubscriptionStorageEntry")],-1),Mp=e("p",null,[t("Ƭ "),e("strong",null,"SubscriptionStorageEntry"),t(": "),e("code",null,"Object")],-1),Ep=e("h4",{id:"type-declaration-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-21","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Fp=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Dp=e("td",{style:{"text-align":"left"}},[e("code",null,"cb")],-1),Rp={style:{"text-align":"left"}},Bp=e("code",null,"message",-1),Np=e("code",null,"EBMessage",-1),Lp=e("code",null,"Promise",-1),Op=e("code",null,"Omit",-1),Ap=e("code",null,"CustomMessage",-1),Hp=e("code",null,'"id"',-1),jp=e("code",null,'"timestamp"',-1),Gp=e("code",null,"undefined",-1),qp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),Vp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingEventName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),zp=e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingMessageType")],-1),Zp={style:{"text-align":"left"}},Up=e("code",null,"input",-1),Qp=e("code",null,"EBMessageType",-1),Kp=e("code",null,"boolean",-1),Wp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingPrincipalId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),$p=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Yp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Jp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),Xp=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingReceiverServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),e1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderInstanceId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),t1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceName")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),n1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceTarget")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),o1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingSenderServiceVersion")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),s1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isMatchingTenantId")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"input?"),t(": "),e("code",null,"string"),t(") => "),e("code",null,"boolean")])],-1),l1=e("h4",{id:"defined-in-63",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-63","aria-hidden":"true"},"#"),t(" Defined in")],-1),d1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/types/SubscriptionStorageEntry.ts#L3",target:"_blank",rel:"noopener noreferrer"},a1=d('<hr><h3 id="supportedhttpmethod" tabindex="-1"><a class="header-anchor" href="#supportedhttpmethod" aria-hidden="true">#</a> SupportedHttpMethod</h3><p>Ƭ <strong>SupportedHttpMethod</strong>: <code>&quot;GET&quot;</code> | <code>&quot;POST&quot;</code> | <code>&quot;PATCH&quot;</code> | <code>&quot;PUT&quot;</code> | <code>&quot;DELETE&quot;</code></p><p>Supported HTTP-Methods for defining endpoints</p><h4 id="defined-in-64" tabindex="-1"><a class="header-anchor" href="#defined-in-64" aria-hidden="true">#</a> Defined in</h4>',5),i1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/SupportedHttpMethod.ts#L2",target:"_blank",rel:"noopener noreferrer"},c1=e("hr",null,null,-1),r1=e("h3",{id:"tenantid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tenantid","aria-hidden":"true"},"#"),t(" TenantId")],-1),u1=e("p",null,[t("Ƭ "),e("strong",null,"TenantId"),t(": "),e("code",null,"string")],-1),h1=e("p",null,"the tenant id",-1),_1=e("h4",{id:"defined-in-65",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-65","aria-hidden":"true"},"#"),t(" Defined in")],-1),p1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/TenantId.ts#L2",target:"_blank",rel:"noopener noreferrer"},f1=e("hr",null,null,-1),g1=e("h3",{id:"traceid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traceid","aria-hidden":"true"},"#"),t(" TraceId")],-1),m1=e("p",null,[t("Ƭ "),e("strong",null,"TraceId"),t(": "),e("code",null,"string")],-1),y1=e("p",null,"The trace id which will be passed through all commands, invocations and subscriptions",-1),b1=e("h4",{id:"defined-in-66",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-66","aria-hidden":"true"},"#"),t(" Defined in")],-1),x1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/TraceId.ts#L4",target:"_blank",rel:"noopener noreferrer"},v1=d('<hr><h3 id="addprefixtoobject" tabindex="-1"><a class="header-anchor" href="#addprefixtoobject" aria-hidden="true">#</a> addPrefixToObject</h3><p>Ƭ <strong>addPrefixToObject</strong>&lt;<code>T</code>, <code>P</code>&gt;: { [K in keyof T as K extends string ? `${P}${K}` : never]: T[K] }</p><p>Helper for better typescript type. All keys of given object must start with the given prefix. Otherwise Typescript will complain.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | `T` |\n| `P` | extends `string` |\n\n#### Defined in\n\n[core/types/addPrefixToObject.ts:7](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/addPrefixToObject.ts#L7)\n\n## Variables\n\n### MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION\n\n• `Const` **MIN\\_CONTENT\\_SIZE\\_FOR\\_COMPRESSION**: ``1024``\n\n#### Defined in\n\n[core/HttpServer/MinContentSizeForCompression.const.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/MinContentSizeForCompression.const.ts#L1)\n\n___\n\n### ServiceInfoValidator\n\n• `Const` **ServiceInfoValidator**: `Object`\n\n#### Type declaration\n\n| Name | Type |\n| :------ | :------ |\n| `set` | (`obj`: [`ServiceInfoType`](purista_core.md#serviceinfotype), `prop`: keyof [`ServiceInfoType`](purista_core.md#serviceinfotype), `value`: `string`) =&gt; `boolean` |\n\n#### Defined in\n\n[core/Service/ServiceInfoValidator.impl.ts:5](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/ServiceInfoValidator.impl.ts#L5)\n\n___\n\n### infoMessageTypes\n\n• `Const` **infoMessageTypes**: [`EBMessageType`](../enums/purista_core.EBMessageType.md)[]\n\n#### Defined in\n\n[core/types/infoType/InfoMessage.ts:30](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/InfoMessage.ts#L30)\n\n___\n\n### puristaVersion\n\n• `Const` **puristaVersion**: ``&quot;1.8.2&quot;``\n\n#### Defined in\n\n[version.ts:1](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/version.ts#L1)\n\n## Functions\n\n### extendApi\n\n▸ **extendApi**&lt;`T`\\&gt;(`schema`, `SchemaObject?`): `T`\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | extends [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md) |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `schema` | `T` |\n| `SchemaObject` | `SchemaObject` |\n\n#### Returns\n\n`T`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:25](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L25)\n\n___\n\n### generateSchema\n\n▸ **generateSchema**(`zodRef`, `useOutput?`): `SchemaObject`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `zodRef` | [`OpenApiZodAny`](../interfaces/purista_core.OpenApiZodAny.md) |\n| `useOutput?` | `boolean` |\n\n#### Returns\n\n`SchemaObject`\n\n#### Defined in\n\n[zodOpenApi/zodOpenApi.impl.ts:414](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/zodOpenApi/zodOpenApi.impl.ts#L414)\n\n___\n\n### getCommandFunctionWithValidation\n\n▸ **getCommandFunctionWithValidation**&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)&lt;`unknown`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`&lt;`string`, [`CommandBeforeGuardHook`](purista_core.md#commandbeforeguardhook)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`CommandFunction`](purista_core.md#commandfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/getCommandFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getDefaultEventBridgeConfig\n\n▸ **getDefaultEventBridgeConfig**(): [`Complete`](purista_core.md#complete)&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Returns\n\n[`Complete`](purista_core.md#complete)&lt;[`DefaultEventBridgeConfig`](purista_core.md#defaulteventbridgeconfig)\\&gt;\n\n#### Defined in\n\n[DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getDefaultEventBridgeConfig.impl.ts#L4)\n\n___\n\n### getDefaultLogLevel\n\n▸ **getDefaultLogLevel**(): [`LogLevelName`](purista_core.md#loglevelname)\n\n#### Returns\n\n[`LogLevelName`](purista_core.md#loglevelname)\n\n#### Defined in\n\n[DefaultLogger/getDefaultLogLevel.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/getDefaultLogLevel.ts#L4)\n\n___\n\n### getNewSubscriptionStorageEntry\n\n▸ **getNewSubscriptionStorageEntry**(`subscription`, `cb`): [`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `subscription` | [`Subscription`](purista_core.md#subscription) |\n| `cb` | (`message`: [`EBMessage`](purista_core.md#ebmessage)) =&gt; `Promise`&lt;`undefined` \\| `Omit`&lt;{ `contentEncoding`: `string` ; `contentType`: `string` ; `correlationId?`: `string` ; `eventName`: `string` ; `id`: `string` ; `messageType`: [`CustomMessage`](../enums/purista_core.EBMessageType.md#custommessage) ; `otp?`: `string` ; `payload?`: `unknown` ; `principalId?`: `string` ; `receiver?`: [`EBMessageAddress`](purista_core.md#ebmessageaddress) ; `sender`: { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; `tenantId?`: `string` ; `timestamp`: `number` ; `traceId?`: `string`  }, ``&quot;id&quot;`` \\| ``&quot;timestamp&quot;``\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionStorageEntry`](purista_core.md#subscriptionstorageentry)\n\n#### Defined in\n\n[DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts:4](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/getNewSubscriptionStorageEntry.impl.ts#L4)\n\n___\n\n### getSubscriptionFunctionWithValidation\n\n▸ **getSubscriptionFunctionWithValidation**&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `MessageResultType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;(`fn`, `inputPayloadSchema`, `inputParameterSchema`, `outputPayloadSchema`, `beforeGuards?`): [`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ServiceClassType` | extends [`ServiceClass`](../interfaces/purista_core.ServiceClass.md)&lt;`unknown`\\&gt; |\n| `MessagePayloadType` | `unknown` |\n| `MessageParamsType` | `unknown` |\n| `MessageResultType` | `unknown` |\n| `FunctionPayloadType` | `MessagePayloadType` |\n| `FunctionParamsType` | `MessageParamsType` |\n| `FunctionResultType` | `MessageResultType` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `fn` | [`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt; |\n| `inputPayloadSchema` | `undefined` \\| `ZodType`&lt;`FunctionPayloadType`, `ZodTypeDef`, `MessagePayloadType`\\&gt; |\n| `inputParameterSchema` | `undefined` \\| `ZodType`&lt;`FunctionParamsType`, `ZodTypeDef`, `MessageParamsType`\\&gt; |\n| `outputPayloadSchema` | `undefined` \\| `ZodType`&lt;`MessageResultType`, `ZodTypeDef`, `FunctionResultType`\\&gt; |\n| `beforeGuards` | `Record`&lt;`string`, [`SubscriptionBeforeGuardHook`](purista_core.md#subscriptionbeforeguardhook)&lt;`ServiceClassType`, `FunctionPayloadType`, `FunctionParamsType`\\&gt;\\&gt; |\n\n#### Returns\n\n[`SubscriptionFunction`](purista_core.md#subscriptionfunction)&lt;`ServiceClassType`, `MessagePayloadType`, `MessageParamsType`, `FunctionPayloadType`, `FunctionParamsType`, `FunctionResultType`\\&gt;\n\n#### Defined in\n\n[SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts:13](https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/getSubscriptionFunctionWithValidation.impl.ts#L13)\n\n___\n\n### getTimeoutPromise\n\n▸ **getTimeoutPromise**&lt;`T`\\&gt;(`fn`, `ttl?`): `Promise`&lt;`T`\\&gt;\n\n#### Type parameters\n\n| Name |\n| :------ |\n| `T` |\n\n#### Parameters\n\n| Name | Type | Default value | Description |\n| :------ | :------ | :------ | :------ |\n| `fn` | `Promise`&lt;`T`\\&gt; | `undefined` | the promise which should get a timeout |\n| `ttl` | `number` | `30000` | the timeout in ms |\n\n#### Returns\n\n`Promise`&lt;`T`\\&gt;\n\n**`Default`**\n\n```ts\n30000\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-67" tabindex="-1"><a class="header-anchor" href="#defined-in-67" aria-hidden="true">#</a> Defined in</h4>',6),S1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/getTimeoutPromise.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},T1=e("hr",null,null,-1),k1=e("h3",{id:"initdefaultconfigstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultconfigstore","aria-hidden":"true"},"#"),t(" initDefaultConfigStore")],-1),C1=e("strong",null,"initDefaultConfigStore",-1),P1=e("code",null,"options",-1),w1=e("code",null,"DefaultConfigStore",-1),I1=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),M1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),E1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),F1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),D1={style:{"text-align":"left"}},R1=e("code",null,"Logger",-1),B1=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),N1=e("code",null,"DefaultConfigStore",-1),L1=e("h4",{id:"defined-in-68",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-68","aria-hidden":"true"},"#"),t(" Defined in")],-1),O1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/initDefaultConfigStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},A1=e("hr",null,null,-1),H1=e("h3",{id:"initdefaultsecretstore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultsecretstore","aria-hidden":"true"},"#"),t(" initDefaultSecretStore")],-1),j1=e("strong",null,"initDefaultSecretStore",-1),G1=e("code",null,"options",-1),q1=e("code",null,"DefaultSecretStore",-1),V1=e("h4",{id:"parameters-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),t(" Parameters")],-1),z1=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Z1=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),U1=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),Q1={style:{"text-align":"left"}},K1=e("code",null,"Logger",-1),W1=e("h4",{id:"returns-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),t(" Returns")],-1),$1=e("code",null,"DefaultSecretStore",-1),Y1=e("h4",{id:"defined-in-69",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-69","aria-hidden":"true"},"#"),t(" Defined in")],-1),J1={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/initDefaultSecretStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},X1=e("hr",null,null,-1),ef=e("h3",{id:"initdefaultstatestore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initdefaultstatestore","aria-hidden":"true"},"#"),t(" initDefaultStateStore")],-1),tf=e("strong",null,"initDefaultStateStore",-1),nf=e("code",null,"options",-1),of=e("code",null,"DefaultStateStore",-1),sf=e("h4",{id:"parameters-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),t(" Parameters")],-1),lf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),df=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),af=e("td",{style:{"text-align":"left"}},[e("code",null,"options.logger")],-1),cf={style:{"text-align":"left"}},rf=e("code",null,"Logger",-1),uf=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),hf=e("code",null,"DefaultStateStore",-1),_f=e("h4",{id:"defined-in-70",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-70","aria-hidden":"true"},"#"),t(" Defined in")],-1),pf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/initDefaultStateStore.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},ff=e("hr",null,null,-1),gf=e("h3",{id:"initlogger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#initlogger","aria-hidden":"true"},"#"),t(" initLogger")],-1),mf=e("strong",null,"initLogger",-1),yf=e("code",null,"level?",-1),bf=e("code",null,"opt?",-1),xf=e("code",null,"Logger",-1),vf=e("p",null,"Create a new logger with the given minimum log level",-1),Sf=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),Tf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),kf=e("td",{style:{"text-align":"left"}},[e("code",null,"level")],-1),Cf={style:{"text-align":"left"}},Pf=e("code",null,"LogLevelName",-1),wf=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"opt?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LoggerOptions")])],-1),If=e("h4",{id:"returns-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),t(" Returns")],-1),Mf=e("code",null,"Logger",-1),Ef=e("h4",{id:"defined-in-71",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-71","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ff={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultLogger/initLogger.impl.ts#L13",target:"_blank",rel:"noopener noreferrer"},Df=e("hr",null,null,-1),Rf=e("h3",{id:"iscustommessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscustommessage","aria-hidden":"true"},"#"),t(" isCustomMessage")],-1),Bf=e("p",null,[t("▸ "),e("strong",null,"isCustomMessage"),t("("),e("code",null,"message"),t("): message is Object")],-1),Nf=e("p",null,"Checks if a PURISTA message is type of custom message",-1),Lf=e("h4",{id:"parameters-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),t(" Parameters")],-1),Of=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Af=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Hf={style:{"text-align":"left"}},jf=e("code",null,"EBMessage",-1),Gf=e("td",{style:{"text-align":"left"}},"any PURISTA message",-1),qf=e("h4",{id:"returns-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),t(" Returns")],-1),Vf=e("p",null,"message is Object",-1),zf=e("p",null,"true if message is type of custom message",-1),Zf=e("h4",{id:"defined-in-72",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-72","aria-hidden":"true"},"#"),t(" Defined in")],-1),Uf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/isCustomMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},Qf=d('<hr><h3 id="ishttpexposedservicemeta" tabindex="-1"><a class="header-anchor" href="#ishttpexposedservicemeta" aria-hidden="true">#</a> isHttpExposedServiceMeta</h3><p>▸ <strong>isHttpExposedServiceMeta</strong>(<code>input?</code>): input is Object</p><p>Checks if given input is type of HttpExposedServiceMeta</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p>input is Object</p><p>boolean - true if input is type of HttpExposedServiceMeta</p><h4 id="defined-in-73" tabindex="-1"><a class="header-anchor" href="#defined-in-73" aria-hidden="true">#</a> Defined in</h4>',10),Kf={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/HttpServer/types/isHttpExposedServiceMeta.impl.ts#L8",target:"_blank",rel:"noopener noreferrer"},Wf=e("hr",null,null,-1),$f=e("h3",{id:"isinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfomessage","aria-hidden":"true"},"#"),t(" isInfoMessage")],-1),Yf=e("p",null,[t("▸ "),e("strong",null,"isInfoMessage"),t("("),e("code",null,"message"),t("): message is InfoMessage")],-1),Jf=e("h4",{id:"parameters-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),t(" Parameters")],-1),Xf=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),eg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),tg={style:{"text-align":"left"}},ng=e("code",null,"EBMessage",-1),og=e("h4",{id:"returns-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),t(" Returns")],-1),sg=e("p",null,"message is InfoMessage",-1),lg=e("h4",{id:"defined-in-74",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-74","aria-hidden":"true"},"#"),t(" Defined in")],-1),dg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoMessage.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},ag=e("hr",null,null,-1),ig=e("h3",{id:"isinfoservicefunctionadded",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#isinfoservicefunctionadded","aria-hidden":"true"},"#"),t(" isInfoServiceFunctionAdded")],-1),cg=e("p",null,[t("▸ "),e("strong",null,"isInfoServiceFunctionAdded"),t("("),e("code",null,"message"),t("): message is Object")],-1),rg=e("h4",{id:"parameters-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),t(" Parameters")],-1),ug=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),hg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),_g={style:{"text-align":"left"}},pg=e("code",null,"EBMessage",-1),fg=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),t(" Returns")],-1),gg=e("p",null,"message is Object",-1),mg=e("h4",{id:"defined-in-75",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-75","aria-hidden":"true"},"#"),t(" Defined in")],-1),yg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/infoType/isInfoServiceFunctionAdded.impl.ts#L5",target:"_blank",rel:"noopener noreferrer"},bg=d('<hr><h3 id="ismessagematchingsubscription" tabindex="-1"><a class="header-anchor" href="#ismessagematchingsubscription" aria-hidden="true">#</a> isMessageMatchingSubscription</h3><p>▸ <strong>isMessageMatchingSubscription</strong>(<code>_log</code>, <code>message</code>, <code>subscription</code>): <code>boolean</code></p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4>',4),xg=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),vg=e("td",{style:{"text-align":"left"}},[e("code",null,"_log")],-1),Sg={style:{"text-align":"left"}},Tg=e("code",null,"Logger",-1),kg=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),Cg={style:{"text-align":"left"}},Pg=e("code",null,"EBMessage",-1),wg=e("td",{style:{"text-align":"left"}},[e("code",null,"subscription")],-1),Ig={style:{"text-align":"left"}},Mg=e("code",null,"SubscriptionStorageEntry",-1),Eg=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),t(" Returns")],-1),Fg=e("p",null,[e("code",null,"boolean")],-1),Dg=e("h4",{id:"defined-in-76",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-76","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/isMessageMatchingSubscription.impl.ts#L4",target:"_blank",rel:"noopener noreferrer"},Bg=d('<hr><h3 id="throwifnotvalidmessage" tabindex="-1"><a class="header-anchor" href="#throwifnotvalidmessage" aria-hidden="true">#</a> throwIfNotValidMessage</h3><p>▸ <strong>throwIfNotValidMessage</strong>(<code>input</code>): <code>void</code></p><p>Validates if the given input might be valid event bridge message It only checks for &quot;technically possible&quot;</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-77" tabindex="-1"><a class="header-anchor" href="#defined-in-77" aria-hidden="true">#</a> Defined in</h4>',9),Ng={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/throwIfNotValidMessage.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},Lg=d('<h2 id="command-2" tabindex="-1"><a class="header-anchor" href="#command-2" aria-hidden="true">#</a> Command</h2><p>• <strong>CommandDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Command definition builder is a helper to create and define a command for a service. It helps to set all needed information like schemas and hooks. With these information, the types are automatically set and extended.</p><p>A working schema definition needs at least a command name, a short description and the function implementation.</p><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4>',5),Og=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ag=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Hg={style:{"text-align":"left"}},jg=e("code",null,"ServiceClass",-1),Gg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),qg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Vg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),zg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Zg=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Ug=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),Qg=e("h4",{id:"defined-in-78",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-78","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kg={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},Wg=e("h3",{id:"commandafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandafterguardhook","aria-hidden":"true"},"#"),t(" CommandAfterGuardHook")],-1),$g=e("strong",null,"CommandAfterGuardHook",-1),Yg=e("code",null,"ServiceClassType",-1),Jg=e("code",null,"MessagePayloadType",-1),Xg=e("code",null,"MessageParamsType",-1),em=e("code",null,"FunctionResultType",-1),tm=e("code",null,"FunctionPayloadType",-1),nm=e("code",null,"FunctionParamsType",-1),om=e("code",null,"this",-1),sm=e("code",null,"ServiceClassType",-1),lm=e("code",null,"context",-1),dm=e("code",null,"CommandFunctionContext",-1),am=e("code",null,"MessagePayloadType",-1),im=e("code",null,"MessageParamsType",-1),cm=e("code",null,"result",-1),rm=e("code",null,"Readonly",-1),um=e("code",null,"FunctionResultType",-1),hm=e("code",null,"input",-1),_m=e("code",null,"Readonly",-1),pm=e("code",null,"FunctionPayloadType",-1),fm=e("code",null,"parameter",-1),gm=e("code",null,"Readonly",-1),mm=e("code",null,"FunctionParamsType",-1),ym=e("code",null,"Promise",-1),bm=e("code",null,"void",-1),xm=e("h4",{id:"type-parameters-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-16","aria-hidden":"true"},"#"),t(" Type parameters")],-1),vm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Sm=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Tm={style:{"text-align":"left"}},km=e("code",null,"ServiceClass",-1),Cm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Pm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),wm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Im=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Mm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Em=d('<h4 id="type-declaration-22" tabindex="-1"><a class="header-anchor" href="#type-declaration-22" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>input</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h5>',4),Fm=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Dm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Rm=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Bm={style:{"text-align":"left"}},Nm=e("code",null,"CommandFunctionContext",-1),Lm=e("code",null,"MessagePayloadType",-1),Om=e("code",null,"MessageParamsType",-1),Am=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),Hm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"input")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),jm=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Gm=e("h5",{id:"returns-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),t(" Returns")],-1),qm=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),Vm=e("h4",{id:"defined-in-79",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-79","aria-hidden":"true"},"#"),t(" Defined in")],-1),zm={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},Zm=e("hr",null,null,-1),Um=e("h3",{id:"commandbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandbeforeguardhook","aria-hidden":"true"},"#"),t(" CommandBeforeGuardHook")],-1),Qm=e("strong",null,"CommandBeforeGuardHook",-1),Km=e("code",null,"ServiceClassType",-1),Wm=e("code",null,"MessagePayloadType",-1),$m=e("code",null,"MessageParamsType",-1),Ym=e("code",null,"FunctionPayloadType",-1),Jm=e("code",null,"FunctionParamsType",-1),Xm=e("code",null,"this",-1),ey=e("code",null,"ServiceClassType",-1),ty=e("code",null,"context",-1),ny=e("code",null,"CommandFunctionContext",-1),oy=e("code",null,"MessagePayloadType",-1),sy=e("code",null,"MessageParamsType",-1),ly=e("code",null,"payload",-1),dy=e("code",null,"Readonly",-1),ay=e("code",null,"FunctionPayloadType",-1),iy=e("code",null,"parameter",-1),cy=e("code",null,"Readonly",-1),ry=e("code",null,"FunctionParamsType",-1),uy=e("code",null,"Promise",-1),hy=e("code",null,"void",-1),_y=e("h4",{id:"type-parameters-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-17","aria-hidden":"true"},"#"),t(" Type parameters")],-1),py=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),fy=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),gy={style:{"text-align":"left"}},my=e("code",null,"ServiceClass",-1),yy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),by=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),xy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),vy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),Sy=d('<h4 id="type-declaration-23" tabindex="-1"><a class="header-anchor" href="#type-declaration-23" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h5>',4),Ty=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ky=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Cy=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Py={style:{"text-align":"left"}},wy=e("code",null,"CommandFunctionContext",-1),Iy=e("code",null,"MessagePayloadType",-1),My=e("code",null,"MessageParamsType",-1),Ey=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Fy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Dy=e("h5",{id:"returns-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),t(" Returns")],-1),Ry=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),By=e("h4",{id:"defined-in-80",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-80","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ny={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},Ly=d('<hr><h3 id="commanddefinition" tabindex="-1"><a class="header-anchor" href="#commanddefinition" aria-hidden="true">#</a> CommandDefinition</h3><p>Ƭ <strong>CommandDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a command provided by some service.</p><h4 id="type-parameters-18" tabindex="-1"><a class="header-anchor" href="#type-parameters-18" aria-hidden="true">#</a> Type parameters</h4>',5),Oy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ay=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Hy={style:{"text-align":"left"}},jy=e("code",null,"ServiceClass",-1),Gy=e("code",null,"ServiceClass",-1),qy=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),Vy={style:{"text-align":"left"}},zy=e("code",null,"CommandDefinitionMetadataBase",-1),Zy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Uy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Qy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Ky=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Wy=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),$y=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Yy=e("h4",{id:"type-declaration-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-24","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Jy=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Xy=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),eb={style:{"text-align":"left"}},tb=e("code",null,"CommandFunction",-1),nb=e("code",null,"ServiceClassType",-1),ob=e("code",null,"MessagePayloadType",-1),sb=e("code",null,"MessageParamsType",-1),lb=e("code",null,"FunctionPayloadType",-1),db=e("code",null,"FunctionParamsType",-1),ab=e("code",null,"FunctionResultType",-1),ib=e("td",{style:{"text-align":"left"}},"the command function",-1),cb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the command")],-1),rb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command")],-1),ub=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),hb={style:{"text-align":"left"}},_b=e("code",null,"DefinitionEventBridgeConfig",-1),pb=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),fb=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the eventName for the command response")],-1),gb=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),mb={style:{"text-align":"left"}},yb=e("code",null,"afterGuard?",-1),bb=e("code",null,"Record",-1),xb=e("code",null,"string",-1),vb=e("code",null,"CommandAfterGuardHook",-1),Sb=e("code",null,"ServiceClassType",-1),Tb=e("code",null,"MessagePayloadType",-1),kb=e("code",null,"MessageParamsType",-1),Cb=e("code",null,"FunctionResultType",-1),Pb=e("code",null,"FunctionPayloadType",-1),wb=e("code",null,"FunctionParamsType",-1),Ib=e("code",null,"beforeGuard?",-1),Mb=e("code",null,"Record",-1),Eb=e("code",null,"string",-1),Fb=e("code",null,"CommandBeforeGuardHook",-1),Db=e("code",null,"ServiceClassType",-1),Rb=e("code",null,"MessagePayloadType",-1),Bb=e("code",null,"MessageParamsType",-1),Nb=e("code",null,"FunctionPayloadType",-1),Lb=e("code",null,"FunctionParamsType",-1),Ob=e("code",null,"transformInput?",-1),Ab=e("code",null,"transformFunction",-1),Hb=e("code",null,"CommandTransformInputHook",-1),jb=e("code",null,"ServiceClassType",-1),Gb=e("code",null,"MessagePayloadType",-1),qb=e("code",null,"MessageParamsType",-1),Vb=e("code",null,"transformInputSchema",-1),zb=e("code",null,"z.ZodType",-1),Zb=e("code",null,"transformParameterSchema",-1),Ub=e("code",null,"z.ZodType",-1),Qb=e("code",null,"transformOutput?",-1),Kb=e("code",null,"transformFunction",-1),Wb=e("code",null,"CommandTransformOutputHook",-1),$b=e("code",null,"ServiceClassType",-1),Yb=e("code",null,"MessagePayloadType",-1),Jb=e("code",null,"MessageResultType",-1),Xb=e("code",null,"FunctionParamsType",-1),ex=e("code",null,"unknown",-1),tx=e("code",null,"transformOutputSchema",-1),nx=e("code",null,"z.ZodType",-1),ox=e("td",{style:{"text-align":"left"}},"hooks of command",-1),sx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),lx={style:{"text-align":"left"}},dx=e("code",null,"Record",-1),ax=e("code",null,"string",-1),ix=e("code",null,"CommandAfterGuardHook",-1),cx=e("code",null,"ServiceClassType",-1),rx=e("code",null,"MessagePayloadType",-1),ux=e("code",null,"MessageParamsType",-1),hx=e("code",null,"FunctionResultType",-1),_x=e("code",null,"FunctionPayloadType",-1),px=e("code",null,"FunctionParamsType",-1),fx=e("td",{style:{"text-align":"left"}},"-",-1),gx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),mx={style:{"text-align":"left"}},yx=e("code",null,"Record",-1),bx=e("code",null,"string",-1),xx=e("code",null,"CommandBeforeGuardHook",-1),vx=e("code",null,"ServiceClassType",-1),Sx=e("code",null,"MessagePayloadType",-1),Tx=e("code",null,"MessageParamsType",-1),kx=e("code",null,"FunctionPayloadType",-1),Cx=e("code",null,"FunctionParamsType",-1),Px=e("td",{style:{"text-align":"left"}},"-",-1),wx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),Ix={style:{"text-align":"left"}},Mx=e("code",null,"transformFunction",-1),Ex=e("code",null,"CommandTransformInputHook",-1),Fx=e("code",null,"ServiceClassType",-1),Dx=e("code",null,"MessagePayloadType",-1),Rx=e("code",null,"MessageParamsType",-1),Bx=e("code",null,"transformInputSchema",-1),Nx=e("code",null,"z.ZodType",-1),Lx=e("code",null,"transformParameterSchema",-1),Ox=e("code",null,"z.ZodType",-1),Ax=e("td",{style:{"text-align":"left"}},"-",-1),Hx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),jx={style:{"text-align":"left"}},Gx=e("code",null,"CommandTransformInputHook",-1),qx=e("code",null,"ServiceClassType",-1),Vx=e("code",null,"MessagePayloadType",-1),zx=e("code",null,"MessageParamsType",-1),Zx=e("td",{style:{"text-align":"left"}},"-",-1),Ux=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Qx=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Kx=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),Wx={style:{"text-align":"left"}},$x=e("code",null,"transformFunction",-1),Yx=e("code",null,"CommandTransformOutputHook",-1),Jx=e("code",null,"ServiceClassType",-1),Xx=e("code",null,"MessagePayloadType",-1),e3=e("code",null,"MessageResultType",-1),t3=e("code",null,"FunctionParamsType",-1),n3=e("code",null,"unknown",-1),o3=e("code",null,"transformOutputSchema",-1),s3=e("code",null,"z.ZodType",-1),l3=e("td",{style:{"text-align":"left"}},"-",-1),d3=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),a3={style:{"text-align":"left"}},i3=e("code",null,"CommandTransformOutputHook",-1),c3=e("code",null,"ServiceClassType",-1),r3=e("code",null,"MessagePayloadType",-1),u3=e("code",null,"MessageResultType",-1),h3=e("code",null,"FunctionParamsType",-1),_3=e("code",null,"unknown",-1),p3=e("td",{style:{"text-align":"left"}},"-",-1),f3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),g3=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the command")],-1),m3=e("h4",{id:"defined-in-81",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-81","aria-hidden":"true"},"#"),t(" Defined in")],-1),y3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandDefinition.ts#L17",target:"_blank",rel:"noopener noreferrer"},b3=e("hr",null,null,-1),x3=e("h3",{id:"commanderrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commanderrorresponse","aria-hidden":"true"},"#"),t(" CommandErrorResponse")],-1),v3=e("strong",null,"CommandErrorResponse",-1),S3=e("code",null,"Prettify",-1),T3=e("code",null,"contentEncoding",-1),k3=e("code",null,'"utf-8"',-1),C3=e("code",null,"contentType",-1),P3=e("code",null,'"application/json"',-1),w3=e("code",null,"correlationId",-1),I3=e("code",null,"CorrelationId",-1),M3=e("code",null,"isHandledError",-1),E3=e("code",null,"boolean",-1),F3=e("code",null,"messageType",-1),D3=e("code",null,"CommandErrorResponse",-1),R3=e("code",null,"payload",-1),B3=e("code",null,"data?",-1),N3=e("code",null,"unknown",-1),L3=e("code",null,"message",-1),O3=e("code",null,"string",-1),A3=e("code",null,"status",-1),H3=e("code",null,"StatusCode",-1),j3=e("code",null,"receiver",-1),G3=e("code",null,"EBMessageSenderAddress",-1),q3=e("code",null,"EBMessageBase",-1),V3=e("p",null,"CommandErrorResponse is a response to a specific previously received command which indicates some failure.",-1),z3=e("h4",{id:"defined-in-82",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-82","aria-hidden":"true"},"#"),t(" Defined in")],-1),Z3={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandErrorResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},U3=e("hr",null,null,-1),Q3=e("h3",{id:"commandfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunction","aria-hidden":"true"},"#"),t(" CommandFunction")],-1),K3=e("strong",null,"CommandFunction",-1),W3=e("code",null,"ServiceClassType",-1),$3=e("code",null,"MessagePayloadType",-1),Y3=e("code",null,"MessageParamsType",-1),J3=e("code",null,"FunctionPayloadType",-1),X3=e("code",null,"FunctionParamsType",-1),ev=e("code",null,"FunctionResultType",-1),tv=e("code",null,"this",-1),nv=e("code",null,"ServiceClassType",-1),ov=e("code",null,"context",-1),sv=e("code",null,"CommandFunctionContext",-1),lv=e("code",null,"MessagePayloadType",-1),dv=e("code",null,"MessageParamsType",-1),av=e("code",null,"payload",-1),iv=e("code",null,"Readonly",-1),cv=e("code",null,"FunctionPayloadType",-1),rv=e("code",null,"parameter",-1),uv=e("code",null,"Readonly",-1),hv=e("code",null,"FunctionParamsType",-1),_v=e("code",null,"Promise",-1),pv=e("code",null,"FunctionResultType",-1),fv=e("h4",{id:"type-parameters-19",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-19","aria-hidden":"true"},"#"),t(" Type parameters")],-1),gv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),mv=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),yv={style:{"text-align":"left"}},bv=e("code",null,"ServiceClass",-1),xv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),vv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Sv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Tv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),kv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Cv=d('<h4 id="type-declaration-25" tabindex="-1"><a class="header-anchor" href="#type-declaration-25" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5>',4),Pv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),wv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),Iv=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Mv={style:{"text-align":"left"}},Ev=e("code",null,"CommandFunctionContext",-1),Fv=e("code",null,"MessagePayloadType",-1),Dv=e("code",null,"MessageParamsType",-1),Rv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),Bv=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),Nv=e("h5",{id:"returns-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),t(" Returns")],-1),Lv=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),Ov=e("h4",{id:"defined-in-83",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-83","aria-hidden":"true"},"#"),t(" Defined in")],-1),Av={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunction.ts#L9",target:"_blank",rel:"noopener noreferrer"},Hv=e("hr",null,null,-1),jv=e("h3",{id:"commandfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandfunctioncontext","aria-hidden":"true"},"#"),t(" CommandFunctionContext")],-1),Gv=e("strong",null,"CommandFunctionContext",-1),qv=e("code",null,"MessagePayloadType",-1),Vv=e("code",null,"MessageParamsType",-1),zv=e("code",null,"Prettify",-1),Zv=e("code",null,"ContextBase",-1),Uv=e("code",null,"CommandFunctionContextEnhancements",-1),Qv=e("code",null,"MessagePayloadType",-1),Kv=e("code",null,"MessageParamsType",-1),Wv=d('<p>The command function context which will be passed into command function.</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-84" tabindex="-1"><a class="header-anchor" href="#defined-in-84" aria-hidden="true">#</a> Defined in</h4>',4),$v={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},Yv=d('<hr><h3 id="commandfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#commandfunctioncontextenhancements" aria-hidden="true">#</a> CommandFunctionContextEnhancements</h3><p>Ƭ <strong>CommandFunctionContextEnhancements</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;: <code>Object</code></p><p>It provides the original command message with types for payload and parameter. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-parameters-21" tabindex="-1"><a class="header-anchor" href="#type-parameters-21" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-26" tabindex="-1"><a class="header-anchor" href="#type-declaration-26" aria-hidden="true">#</a> Type declaration</h4>',8),Jv=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Xv=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),e2={style:{"text-align":"left"}},t2=e("code",null,"EmitCustomMessageFunction",-1),n2=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),o2=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),s2={style:{"text-align":"left"}},l2=e("code",null,"InvokeFunction",-1),d2=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),a2=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),i2={style:{"text-align":"left"}},c2=e("code",null,"Readonly",-1),r2=e("code",null,"Command",-1),u2=e("code",null,"MessagePayloadType",-1),h2=e("code",null,"MessageParamsType",-1),_2=e("td",{style:{"text-align":"left"}},"the original message",-1),p2=e("h4",{id:"defined-in-85",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-85","aria-hidden":"true"},"#"),t(" Defined in")],-1),f2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},g2=e("hr",null,null,-1),m2=e("h3",{id:"commandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandresponse","aria-hidden":"true"},"#"),t(" CommandResponse")],-1),y2=e("strong",null,"CommandResponse",-1),b2=e("code",null,"T",-1),x2=e("code",null,"CommandSuccessResponse",-1),v2=e("code",null,"T",-1),S2=e("code",null,"CommandErrorResponse",-1),T2=d('<p>CommandResponse is a response to a specific previously received command which can be either a success or failure</p><h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-86" tabindex="-1"><a class="header-anchor" href="#defined-in-86" aria-hidden="true">#</a> Defined in</h4>',4),k2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandResponse.ts#L9",target:"_blank",rel:"noopener noreferrer"},C2=e("hr",null,null,-1),P2=e("h3",{id:"commandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandsuccessresponse","aria-hidden":"true"},"#"),t(" CommandSuccessResponse")],-1),w2=e("strong",null,"CommandSuccessResponse",-1),I2=e("code",null,"PayloadType",-1),M2=e("code",null,"Prettify",-1),E2=e("code",null,"correlationId",-1),F2=e("code",null,"CorrelationId",-1),D2=e("code",null,"messageType",-1),R2=e("code",null,"CommandSuccessResponse",-1),B2=e("code",null,"payload",-1),N2=e("code",null,"PayloadType",-1),L2=e("code",null,"receiver",-1),O2=e("code",null,"EBMessageSenderAddress",-1),A2=e("code",null,"EBMessageBase",-1),H2=d('<p>CommandSuccessResponse is a response to a specific previously received command. It indicates that the command was executed successfully and contains the result payload</p><h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="defined-in-87" tabindex="-1"><a class="header-anchor" href="#defined-in-87" aria-hidden="true">#</a> Defined in</h4>',4),j2={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandSuccessResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},G2=e("hr",null,null,-1),q2=e("h3",{id:"commandtransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformfunctioncontext","aria-hidden":"true"},"#"),t(" CommandTransformFunctionContext")],-1),V2=e("strong",null,"CommandTransformFunctionContext",-1),z2=e("code",null,"PayloadType",-1),Z2=e("code",null,"ParameterType",-1),U2=e("code",null,"Prettify",-1),Q2=e("code",null,"ContextBase",-1),K2=e("code",null,"message",-1),W2=e("code",null,"Readonly",-1),$2=e("code",null,"Command",-1),Y2=e("code",null,"PayloadType",-1),J2=e("code",null,"ParameterType",-1),X2=d('<h4 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td></tr></tbody></table><h4 id="defined-in-88" tabindex="-1"><a class="header-anchor" href="#defined-in-88" aria-hidden="true">#</a> Defined in</h4>',3),e4={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},t4=e("hr",null,null,-1),n4=e("h3",{id:"commandtransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransforminputhook","aria-hidden":"true"},"#"),t(" CommandTransformInputHook")],-1),o4=e("strong",null,"CommandTransformInputHook",-1),s4=e("code",null,"ServiceClassType",-1),l4=e("code",null,"PayloadOutput",-1),d4=e("code",null,"ParamsOutput",-1),a4=e("code",null,"PayloadInput",-1),i4=e("code",null,"ParamsInput",-1),c4=e("code",null,"this",-1),r4=e("code",null,"ServiceClassType",-1),u4=e("code",null,"context",-1),h4=e("code",null,"CommandTransformFunctionContext",-1),_4=e("code",null,"PayloadInput",-1),p4=e("code",null,"ParamsInput",-1),f4=e("code",null,"payload",-1),g4=e("code",null,"Readonly",-1),m4=e("code",null,"PayloadInput",-1),y4=e("code",null,"parameter",-1),b4=e("code",null,"Readonly",-1),x4=e("code",null,"ParamsInput",-1),v4=e("code",null,"Promise",-1),S4=e("code",null,"parameter",-1),T4=e("code",null,"Readonly",-1),k4=e("code",null,"ParamsOutput",-1),C4=e("code",null,"payload",-1),P4=e("code",null,"Readonly",-1),w4=e("code",null,"PayloadOutput",-1),I4=d('<h4 id="type-parameters-25" tabindex="-1"><a class="header-anchor" href="#type-parameters-25" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-27" tabindex="-1"><a class="header-anchor" href="#type-declaration-27" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><p>The command transform gets the raw message payload and parameter input, which is validated against the transform input schemas. The command transform function is called before guard hooks and before the actual command function.</p><p>It should throw HandledError or return an object with the transformed payload and parameter. The type of returned payload and parameter must match the command function input for payload and parameter</p><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5>',7),M4=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),E4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),F4=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),D4={style:{"text-align":"left"}},R4=e("code",null,"CommandTransformFunctionContext",-1),B4=e("code",null,"PayloadInput",-1),N4=e("code",null,"ParamsInput",-1),L4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),O4=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),A4=d('<h5 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-89" tabindex="-1"><a class="header-anchor" href="#defined-in-89" aria-hidden="true">#</a> Defined in</h4>',3),H4={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformInputHook.ts#L12",target:"_blank",rel:"noopener noreferrer"},j4=e("hr",null,null,-1),G4=e("h3",{id:"commandtransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commandtransformoutputhook","aria-hidden":"true"},"#"),t(" CommandTransformOutputHook")],-1),q4=e("strong",null,"CommandTransformOutputHook",-1),V4=e("code",null,"ServiceClassType",-1),z4=e("code",null,"MessagePayloadType",-1),Z4=e("code",null,"MessageResultType",-1),U4=e("code",null,"MessageParamsType",-1),Q4=e("code",null,"ResponseOutput",-1),K4=e("code",null,"this",-1),W4=e("code",null,"ServiceClassType",-1),$4=e("code",null,"context",-1),Y4=e("code",null,"CommandTransformFunctionContext",-1),J4=e("code",null,"MessagePayloadType",-1),X4=e("code",null,"MessageParamsType",-1),eS=e("code",null,"payload",-1),tS=e("code",null,"Readonly",-1),nS=e("code",null,"MessageResultType",-1),oS=e("code",null,"parameter",-1),sS=e("code",null,"Readonly",-1),lS=e("code",null,"MessageParamsType",-1),dS=e("code",null,"Promise",-1),aS=e("code",null,"ResponseOutput",-1),iS=d('<h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>MessageResultType</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-28" tabindex="-1"><a class="header-anchor" href="#type-declaration-28" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5>',6),cS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),rS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),uS=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),hS={style:{"text-align":"left"}},_S=e("code",null,"CommandTransformFunctionContext",-1),pS=e("code",null,"MessagePayloadType",-1),fS=e("code",null,"MessageParamsType",-1),gS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),mS=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),yS=e("h5",{id:"returns-17",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),t(" Returns")],-1),bS=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),xS=e("h4",{id:"defined-in-90",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-90","aria-hidden":"true"},"#"),t(" Defined in")],-1),vS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/CommandTransformOutputHook.ts#L7",target:"_blank",rel:"noopener noreferrer"},SS=e("hr",null,null,-1),TS=e("h3",{id:"iscommand",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommand","aria-hidden":"true"},"#"),t(" isCommand")],-1),kS=e("p",null,[t("▸ "),e("strong",null,"isCommand"),t("("),e("code",null,"message"),t("): message is Object")],-1),CS=e("p",null,"Checks if given message is type of Command",-1),PS=e("h4",{id:"parameters-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-18","aria-hidden":"true"},"#"),t(" Parameters")],-1),wS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),IS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),MS={style:{"text-align":"left"}},ES=e("code",null,"EBMessage",-1),FS=e("h4",{id:"returns-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),t(" Returns")],-1),DS=e("p",null,"message is Object",-1),RS=e("p",null,"boolean",-1),BS=e("h4",{id:"defined-in-91",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-91","aria-hidden":"true"},"#"),t(" Defined in")],-1),NS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommand.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},LS=d('<hr><h3 id="iscommanderrorresponse" tabindex="-1"><a class="header-anchor" href="#iscommanderrorresponse" aria-hidden="true">#</a> isCommandErrorResponse</h3><p>▸ <strong>isCommandErrorResponse</strong>(<code>message</code>): message is Object</p><p>Checks if given message is type of CommandErrorResponse</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4><p>message is Object</p><p>boolean</p><h4 id="defined-in-92" tabindex="-1"><a class="header-anchor" href="#defined-in-92" aria-hidden="true">#</a> Defined in</h4>',10),OS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandErrorResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},AS=e("hr",null,null,-1),HS=e("h3",{id:"iscommandresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandresponse","aria-hidden":"true"},"#"),t(" isCommandResponse")],-1),jS=e("p",null,[t("▸ "),e("strong",null,"isCommandResponse"),t("("),e("code",null,"message"),t("): message is CommandResponse")],-1),GS=e("p",null,"Checks if given message is type of CommandResponse (success or error)",-1),qS=e("h4",{id:"parameters-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-20","aria-hidden":"true"},"#"),t(" Parameters")],-1),VS=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),zS=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),ZS={style:{"text-align":"left"}},US=e("code",null,"EBMessage",-1),QS=e("h4",{id:"returns-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-20","aria-hidden":"true"},"#"),t(" Returns")],-1),KS=e("p",null,"message is CommandResponse",-1),WS=e("p",null,"boolean",-1),$S=e("h4",{id:"defined-in-93",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-93","aria-hidden":"true"},"#"),t(" Defined in")],-1),YS={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},JS=e("hr",null,null,-1),XS=e("h3",{id:"iscommandsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iscommandsuccessresponse","aria-hidden":"true"},"#"),t(" isCommandSuccessResponse")],-1),eT=e("p",null,[t("▸ "),e("strong",null,"isCommandSuccessResponse"),t("("),e("code",null,"message"),t("): message is Object")],-1),tT=e("p",null,"Checks if given message is type of CommandSuccessResponse",-1),nT=e("h4",{id:"parameters-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-21","aria-hidden":"true"},"#"),t(" Parameters")],-1),oT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),sT=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),lT={style:{"text-align":"left"}},dT=e("code",null,"EBMessage",-1),aT=e("h4",{id:"returns-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-21","aria-hidden":"true"},"#"),t(" Returns")],-1),iT=e("p",null,"message is Object",-1),cT=e("p",null,"boolean",-1),rT=e("h4",{id:"defined-in-94",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-94","aria-hidden":"true"},"#"),t(" Defined in")],-1),uT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/commandType/isCommandSuccessResponse.impl.ts#L12",target:"_blank",rel:"noopener noreferrer"},hT=d(`<h2 id="event-bridge-1" tabindex="-1"><a class="header-anchor" href="#event-bridge-1" aria-hidden="true">#</a> Event bridge</h2><p>• <strong>DefaultEventBridge</strong>: <code>Object</code></p><p>Simple implementation of some simple in-memory event bridge. Does not support threads and does not need any external databases.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DefaultEventBridge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@purista/core&#39;</span>

<span class="token keyword">const</span> eventBridge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEventBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> eventBridge<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// add your services</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-95" tabindex="-1"><a class="header-anchor" href="#defined-in-95" aria-hidden="true">#</a> Defined in</h4>`,6),_T={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultEventBridge/DefaultEventBridge.impl.ts#L61",target:"_blank",rel:"noopener noreferrer"},pT=d('<p>• <strong>EventBridgeBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The base class to be extended by event bridge implementations</p><h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="defined-in-96" tabindex="-1"><a class="header-anchor" href="#defined-in-96" aria-hidden="true">#</a> Defined in</h4>',5),fT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/EventBridgeBaseClass.impl.ts#L17",target:"_blank",rel:"noopener noreferrer"},gT=e("p",null,[t("• "),e("strong",null,"EventBridge"),t(": "),e("code",null,"Object")],-1),mT=e("p",null,"Event bridge interface The event bridge must implement this interface.",-1),yT=e("h4",{id:"defined-in-97",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-97","aria-hidden":"true"},"#"),t(" Defined in")],-1),bT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridge.ts#L19",target:"_blank",rel:"noopener noreferrer"},xT=e("h3",{id:"eventbridgeeventsbasic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventbridgeeventsbasic","aria-hidden":"true"},"#"),t(" EventBridgeEventsBasic")],-1),vT=e("p",null,[t("Ƭ "),e("strong",null,"EventBridgeEventsBasic"),t(": "),e("code",null,"Object")],-1),ST=e("p",null,"Events which can be emitted by a event bridge",-1),TT=e("h4",{id:"type-declaration-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-29","aria-hidden":"true"},"#"),t(" Type declaration")],-1),kT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),CT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when then connection to event bridge is established")],-1),PT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-connection-error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown"),t(" | "),e("code",null,"Error")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge can not be established or a connection has issues or gets closed unexpectedly")],-1),wT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-disconnected")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted when the connection to event bridge closed")],-1),IT=e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-error")],-1),MT={style:{"text-align":"left"}},ET=e("code",null,"UnhandledError",-1),FT=e("code",null,"unknown",-1),DT=e("td",{style:{"text-align":"left"}},"emitted on internal event bridge error",-1),RT=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventbridge-reconnecting")]),e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"emitted on retry to connect to event bridge")],-1),BT=e("h4",{id:"defined-in-98",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-98","aria-hidden":"true"},"#"),t(" Defined in")],-1),NT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/EventBridge/types/EventBridgeEvents.ts#L20",target:"_blank",rel:"noopener noreferrer"},LT=e("hr",null,null,-1),OT=e("h3",{id:"getcommandqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandqueuename","aria-hidden":"true"},"#"),t(" getCommandQueueName")],-1),AT=e("p",null,[t("▸ "),e("strong",null,"getCommandQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),HT=e("h4",{id:"parameters-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-22","aria-hidden":"true"},"#"),t(" Parameters")],-1),jT=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),GT=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),qT={style:{"text-align":"left"}},VT=e("code",null,"EBMessageAddress",-1),zT=e("h4",{id:"returns-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),t(" Returns")],-1),ZT=e("p",null,[e("code",null,"string")],-1),UT=e("h4",{id:"defined-in-99",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-99","aria-hidden":"true"},"#"),t(" Defined in")],-1),QT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCommandQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},KT=d('<h2 id="helper-1" tabindex="-1"><a class="header-anchor" href="#helper-1" aria-hidden="true">#</a> Helper</h2><h3 id="converttocamelcase" tabindex="-1"><a class="header-anchor" href="#converttocamelcase" aria-hidden="true">#</a> convertToCamelCase</h3><p>▸ <strong>convertToCamelCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into camelCase</p><h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to camelCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-100" tabindex="-1"><a class="header-anchor" href="#defined-in-100" aria-hidden="true">#</a> Defined in</h4>',12),WT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToCamelCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},$T=d('<hr><h3 id="converttokebabcase" tabindex="-1"><a class="header-anchor" href="#converttokebabcase" aria-hidden="true">#</a> convertToKebabCase</h3><p>▸ <strong>convertToKebabCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into kebab-case</p><h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to kebab-case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-101" tabindex="-1"><a class="header-anchor" href="#defined-in-101" aria-hidden="true">#</a> Defined in</h4>',12),YT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToKebabCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},JT=d('<hr><h3 id="converttopascalcase" tabindex="-1"><a class="header-anchor" href="#converttopascalcase" aria-hidden="true">#</a> convertToPascalCase</h3><p>▸ <strong>convertToPascalCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into PascalCase</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to PascalCase</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-102" tabindex="-1"><a class="header-anchor" href="#defined-in-102" aria-hidden="true">#</a> Defined in</h4>',12),XT={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToPascalCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},e5=d('<hr><h3 id="converttosnakecase" tabindex="-1"><a class="header-anchor" href="#converttosnakecase" aria-hidden="true">#</a> convertToSnakeCase</h3><p>▸ <strong>convertToSnakeCase</strong>(<code>str</code>): <code>string</code></p><p>Converts a string into snake_case</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string</td></tr></tbody></table><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>string converted to snake_case</p><p><strong><code>Link</code></strong></p><p>https://github.com/30-seconds/30-seconds-of-code</p><h4 id="defined-in-103" tabindex="-1"><a class="header-anchor" href="#defined-in-103" aria-hidden="true">#</a> Defined in</h4>',12),t5={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/string/convertToSnakeCase.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},n5=e("hr",null,null,-1),o5=e("h3",{id:"createerrorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createerrorresponse","aria-hidden":"true"},"#"),t(" createErrorResponse")],-1),s5=e("strong",null,"createErrorResponse",-1),l5=e("code",null,"instanceId",-1),d5=e("code",null,"originalEBMessage",-1),a5=e("code",null,"statusCode?",-1),i5=e("code",null,"error?",-1),c5=e("code",null,"Readonly",-1),r5=e("code",null,"Omit",-1),u5=e("code",null,"contentEncoding",-1),h5=e("code",null,'"utf-8"',-1),_5=e("code",null,"contentType",-1),p5=e("code",null,'"application/json"',-1),f5=e("code",null,"correlationId",-1),g5=e("code",null,"string",-1),m5=e("code",null,"eventName?",-1),y5=e("code",null,"string",-1),b5=e("code",null,"id",-1),x5=e("code",null,"string",-1),v5=e("code",null,"isHandledError",-1),S5=e("code",null,"boolean",-1),T5=e("code",null,"messageType",-1),k5=e("code",null,"CommandErrorResponse",-1),C5=e("code",null,"otp?",-1),P5=e("code",null,"string",-1),w5=e("code",null,"payload",-1),I5=e("code",null,"data?",-1),M5=e("code",null,"unknown",-1),E5=e("code",null,"message",-1),F5=e("code",null,"string",-1),D5=e("code",null,"status",-1),R5=e("code",null,"StatusCode",-1),B5=e("code",null,"principalId?",-1),N5=e("code",null,"string",-1),L5=e("code",null,"receiver",-1),O5=e("code",null,"sender",-1),A5=e("code",null,"tenantId?",-1),H5=e("code",null,"string",-1),j5=e("code",null,"timestamp",-1),G5=e("code",null,"number",-1),q5=e("code",null,"traceId?",-1),V5=e("code",null,"string",-1),z5=e("code",null,'"instanceId"',-1),Z5=e("p",null,"Creates a error response object based on original command Toggles sender and receiver",-1),U5=e("h4",{id:"parameters-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-27","aria-hidden":"true"},"#"),t(" Parameters")],-1),Q5=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),K5=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),W5=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),$5={style:{"text-align":"left"}},Y5=e("code",null,"Readonly",-1),J5=e("code",null,"contentEncoding",-1),X5=e("code",null,"string",-1),ek=e("code",null,"contentType",-1),tk=e("code",null,"string",-1),nk=e("code",null,"correlationId",-1),ok=e("code",null,"string",-1),sk=e("code",null,"eventName?",-1),lk=e("code",null,"string",-1),dk=e("code",null,"id",-1),ak=e("code",null,"string",-1),ik=e("code",null,"messageType",-1),ck=e("code",null,"Command",-1),rk=e("code",null,"otp?",-1),uk=e("code",null,"string",-1),hk=e("code",null,"payload",-1),_k=e("code",null,"parameter",-1),pk=e("code",null,"unknown",-1),fk=e("code",null,"payload",-1),gk=e("code",null,"unknown",-1),mk=e("code",null,"principalId?",-1),yk=e("code",null,"string",-1),bk=e("code",null,"receiver",-1),xk=e("code",null,"EBMessageAddress",-1),vk=e("code",null,"sender",-1),Sk=e("code",null,"tenantId?",-1),Tk=e("code",null,"string",-1),kk=e("code",null,"timestamp",-1),Ck=e("code",null,"number",-1),Pk=e("code",null,"traceId?",-1),wk=e("code",null,"string",-1),Ik=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),Mk=e("td",{style:{"text-align":"left"}},[e("code",null,"statusCode")],-1),Ek={style:{"text-align":"left"}},Fk=e("code",null,"StatusCode",-1),Dk=e("td",{style:{"text-align":"left"}},[e("code",null,"StatusCode.InternalServerError")],-1),Rk=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"error?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Bk=e("h4",{id:"returns-27",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-27","aria-hidden":"true"},"#"),t(" Returns")],-1),Nk=e("code",null,"Readonly",-1),Lk=e("code",null,"Omit",-1),Ok=e("code",null,"contentEncoding",-1),Ak=e("code",null,'"utf-8"',-1),Hk=e("code",null,"contentType",-1),jk=e("code",null,'"application/json"',-1),Gk=e("code",null,"correlationId",-1),qk=e("code",null,"string",-1),Vk=e("code",null,"eventName?",-1),zk=e("code",null,"string",-1),Zk=e("code",null,"id",-1),Uk=e("code",null,"string",-1),Qk=e("code",null,"isHandledError",-1),Kk=e("code",null,"boolean",-1),Wk=e("code",null,"messageType",-1),$k=e("code",null,"CommandErrorResponse",-1),Yk=e("code",null,"otp?",-1),Jk=e("code",null,"string",-1),Xk=e("code",null,"payload",-1),e9=e("code",null,"data?",-1),t9=e("code",null,"unknown",-1),n9=e("code",null,"message",-1),o9=e("code",null,"string",-1),s9=e("code",null,"status",-1),l9=e("code",null,"StatusCode",-1),d9=e("code",null,"principalId?",-1),a9=e("code",null,"string",-1),i9=e("code",null,"receiver",-1),c9=e("code",null,"sender",-1),r9=e("code",null,"tenantId?",-1),u9=e("code",null,"string",-1),h9=e("code",null,"timestamp",-1),_9=e("code",null,"number",-1),p9=e("code",null,"traceId?",-1),f9=e("code",null,"string",-1),g9=e("code",null,'"instanceId"',-1),m9=e("p",null,"CommandErrorResponse message object",-1),y9=e("h4",{id:"defined-in-104",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-104","aria-hidden":"true"},"#"),t(" Defined in")],-1),b9={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createErrorResponse.impl.ts#L18",target:"_blank",rel:"noopener noreferrer"},x9=e("hr",null,null,-1),v9=e("h3",{id:"createinfomessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createinfomessage","aria-hidden":"true"},"#"),t(" createInfoMessage")],-1),S9=e("strong",null,"createInfoMessage",-1),T9=e("code",null,"messageType",-1),k9=e("code",null,"sender",-1),C9=e("code",null,"additional?",-1),P9=e("code",null,"InfoMessage",-1),w9=e("h4",{id:"parameters-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-28","aria-hidden":"true"},"#"),t(" Parameters")],-1),I9=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),M9=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType")],-1),E9={style:{"text-align":"left"}},F9=e("code",null,"InfoMessageType",-1),D9=e("td",{style:{"text-align":"left"}},"-",-1),R9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),B9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"instance id of eventbridge")],-1),N9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the service")],-1),L9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the command or subscription")],-1),O9=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the version of the service")],-1),A9=e("td",{style:{"text-align":"left"}},[e("code",null,"additional?")],-1),H9={style:{"text-align":"left"}},j9=e("code",null,"Partial",-1),G9=e("code",null,"InfoMessage",-1),q9=e("td",{style:{"text-align":"left"}},"-",-1),V9=e("h4",{id:"returns-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-28","aria-hidden":"true"},"#"),t(" Returns")],-1),z9=e("code",null,"InfoMessage",-1),Z9=e("h4",{id:"defined-in-105",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-105","aria-hidden":"true"},"#"),t(" Defined in")],-1),U9={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createInfoMessage.impl.ts#L14",target:"_blank",rel:"noopener noreferrer"},Q9=e("hr",null,null,-1),K9=e("h3",{id:"createsuccessresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createsuccessresponse","aria-hidden":"true"},"#"),t(" createSuccessResponse")],-1),W9=e("strong",null,"createSuccessResponse",-1),$9=e("code",null,"T",-1),Y9=e("code",null,"instanceId",-1),J9=e("code",null,"originalEBMessage",-1),X9=e("code",null,"payload",-1),e6=e("code",null,"eventName?",-1),t6=e("code",null,"contentType?",-1),n6=e("code",null,"contentEncoding?",-1),o6=e("code",null,"Readonly",-1),s6=e("code",null,"contentEncoding",-1),l6=e("code",null,"string",-1),d6=e("code",null,"contentType",-1),a6=e("code",null,"string",-1),i6=e("code",null,"correlationId",-1),c6=e("code",null,"string",-1),r6=e("code",null,"eventName?",-1),u6=e("code",null,"string",-1),h6=e("code",null,"id",-1),_6=e("code",null,"string",-1),p6=e("code",null,"messageType",-1),f6=e("code",null,"CommandSuccessResponse",-1),g6=e("code",null,"otp?",-1),m6=e("code",null,"string",-1),y6=e("code",null,"payload",-1),b6=e("code",null,"T",-1),x6=e("code",null,"principalId?",-1),v6=e("code",null,"string",-1),S6=e("code",null,"receiver",-1),T6=e("code",null,"sender",-1),k6=e("code",null,"tenantId?",-1),C6=e("code",null,"string",-1),P6=e("code",null,"timestamp",-1),w6=e("code",null,"number",-1),I6=e("code",null,"traceId?",-1),M6=e("code",null,"string",-1),E6=d('<h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-29" tabindex="-1"><a class="header-anchor" href="#parameters-29" aria-hidden="true">#</a> Parameters</h4>',3),F6=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),D6=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),R6=e("td",{style:{"text-align":"left"}},[e("code",null,"originalEBMessage")],-1),B6={style:{"text-align":"left"}},N6=e("code",null,"Readonly",-1),L6=e("code",null,"contentEncoding",-1),O6=e("code",null,"string",-1),A6=e("code",null,"contentType",-1),H6=e("code",null,"string",-1),j6=e("code",null,"correlationId",-1),G6=e("code",null,"string",-1),q6=e("code",null,"eventName?",-1),V6=e("code",null,"string",-1),z6=e("code",null,"id",-1),Z6=e("code",null,"string",-1),U6=e("code",null,"messageType",-1),Q6=e("code",null,"Command",-1),K6=e("code",null,"otp?",-1),W6=e("code",null,"string",-1),$6=e("code",null,"payload",-1),Y6=e("code",null,"parameter",-1),J6=e("code",null,"unknown",-1),X6=e("code",null,"payload",-1),e0=e("code",null,"unknown",-1),t0=e("code",null,"principalId?",-1),n0=e("code",null,"string",-1),o0=e("code",null,"receiver",-1),s0=e("code",null,"EBMessageAddress",-1),l0=e("code",null,"sender",-1),d0=e("code",null,"tenantId?",-1),a0=e("code",null,"string",-1),i0=e("code",null,"timestamp",-1),c0=e("code",null,"number",-1),r0=e("code",null,"traceId?",-1),u0=e("code",null,"string",-1),h0=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),_0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"T")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),p0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),f0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'application/json'")])],-1),g0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[e("code",null,"'utf-8'")])],-1),m0=e("h4",{id:"returns-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-29","aria-hidden":"true"},"#"),t(" Returns")],-1),y0=e("code",null,"Readonly",-1),b0=e("code",null,"contentEncoding",-1),x0=e("code",null,"string",-1),v0=e("code",null,"contentType",-1),S0=e("code",null,"string",-1),T0=e("code",null,"correlationId",-1),k0=e("code",null,"string",-1),C0=e("code",null,"eventName?",-1),P0=e("code",null,"string",-1),w0=e("code",null,"id",-1),I0=e("code",null,"string",-1),M0=e("code",null,"messageType",-1),E0=e("code",null,"CommandSuccessResponse",-1),F0=e("code",null,"otp?",-1),D0=e("code",null,"string",-1),R0=e("code",null,"payload",-1),B0=e("code",null,"T",-1),N0=e("code",null,"principalId?",-1),L0=e("code",null,"string",-1),O0=e("code",null,"receiver",-1),A0=e("code",null,"sender",-1),H0=e("code",null,"tenantId?",-1),j0=e("code",null,"string",-1),G0=e("code",null,"timestamp",-1),q0=e("code",null,"number",-1),V0=e("code",null,"traceId?",-1),z0=e("code",null,"string",-1),Z0=e("h4",{id:"defined-in-106",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-106","aria-hidden":"true"},"#"),t(" Defined in")],-1),U0={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/createSuccessResponse.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},Q0=d('<hr><h3 id="deserializeotp" tabindex="-1"><a class="header-anchor" href="#deserializeotp" aria-hidden="true">#</a> deserializeOtp</h3><p>▸ <strong>deserializeOtp</strong>(<code>logger</code>, <code>otp?</code>): <code>undefined</code> | <code>Context</code></p><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a> Parameters</h4>',4),K0=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),W0=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),$0={style:{"text-align":"left"}},Y0=e("code",null,"Logger",-1),J0=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),X0=e("h4",{id:"returns-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),t(" Returns")],-1),e7=e("p",null,[e("code",null,"undefined"),t(" | "),e("code",null,"Context")],-1),t7=e("h4",{id:"defined-in-107",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-107","aria-hidden":"true"},"#"),t(" Defined in")],-1),n7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L26",target:"_blank",rel:"noopener noreferrer"},o7=d('<hr><h3 id="getcleanedmessage" tabindex="-1"><a class="header-anchor" href="#getcleanedmessage" aria-hidden="true">#</a> getCleanedMessage</h3><p>▸ <strong>getCleanedMessage</strong>(<code>message</code>, <code>stripeOutContent?</code>): <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><p>Helper function for logging. Returns a message object, where fields which might contain sensitive data, are overwritten with string values. For command messages, parameter and payload are overwritten with string values.</p><p>For command success responses, the response field is overwritten.</p><p>Command error responses are not changed.</p><h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a> Parameters</h4>',7),s7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value")])],-1),l7=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),d7={style:{"text-align":"left"}},a7=e("code",null,"Readonly",-1),i7=e("code",null,"EBMessage",-1),c7=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),r7=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stripeOutContent")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[e("code",null,"!isDevelop()")])],-1),u7=e("h4",{id:"returns-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-31","aria-hidden":"true"},"#"),t(" Returns")],-1),h7=e("p",null,[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")],-1),_7=e("h4",{id:"defined-in-108",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-108","aria-hidden":"true"},"#"),t(" Defined in")],-1),p7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getCleanedMessage.impl.ts#L15",target:"_blank",rel:"noopener noreferrer"},f7=e("hr",null,null,-1),g7=e("h3",{id:"geterrormessageforcode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#geterrormessageforcode","aria-hidden":"true"},"#"),t(" getErrorMessageForCode")],-1),m7=e("p",null,[t("▸ "),e("strong",null,"getErrorMessageForCode"),t("("),e("code",null,"code"),t("): "),e("code",null,"string")],-1),y7=e("h4",{id:"parameters-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-32","aria-hidden":"true"},"#"),t(" Parameters")],-1),b7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),x7=e("td",{style:{"text-align":"left"}},[e("code",null,"code")],-1),v7={style:{"text-align":"left"}},S7=e("code",null,"StatusCode",-1),T7=e("h4",{id:"returns-32",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),t(" Returns")],-1),k7=e("p",null,[e("code",null,"string")],-1),C7=e("h4",{id:"defined-in-109",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-109","aria-hidden":"true"},"#"),t(" Defined in")],-1),P7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getErrorMessageForCode.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},w7=d('<hr><h3 id="getnewcorrelationid" tabindex="-1"><a class="header-anchor" href="#getnewcorrelationid" aria-hidden="true">#</a> getNewCorrelationId</h3><p>▸ <strong>getNewCorrelationId</strong>(): <code>string</code></p><p>Create a new unique event bridge correlation id</p><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-110" tabindex="-1"><a class="header-anchor" href="#defined-in-110" aria-hidden="true">#</a> Defined in</h4>',8),I7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewCorrelationId.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},M7=d('<hr><h3 id="getnewebmessageid" tabindex="-1"><a class="header-anchor" href="#getnewebmessageid" aria-hidden="true">#</a> getNewEBMessageId</h3><p>▸ <strong>getNewEBMessageId</strong>(): <code>string</code></p><p>Create a new unique event bridge message id</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>EBMessageId</p><h4 id="defined-in-111" tabindex="-1"><a class="header-anchor" href="#defined-in-111" aria-hidden="true">#</a> Defined in</h4>',8),E7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewEBMessageId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},F7=d('<hr><h3 id="getnewinstanceid" tabindex="-1"><a class="header-anchor" href="#getnewinstanceid" aria-hidden="true">#</a> getNewInstanceId</h3><p>▸ <strong>getNewInstanceId</strong>(): <code>string</code></p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-112" tabindex="-1"><a class="header-anchor" href="#defined-in-112" aria-hidden="true">#</a> Defined in</h4>',6),D7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewInstanceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},R7=d('<hr><h3 id="getnewtraceid" tabindex="-1"><a class="header-anchor" href="#getnewtraceid" aria-hidden="true">#</a> getNewTraceId</h3><p>▸ <strong>getNewTraceId</strong>(): <code>string</code></p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-113" tabindex="-1"><a class="header-anchor" href="#defined-in-113" aria-hidden="true">#</a> Defined in</h4>',6),B7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getNewTraceId.impl.ts#L9",target:"_blank",rel:"noopener noreferrer"},N7=e("hr",null,null,-1),L7=e("h3",{id:"getsubscriptionqueuename",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsubscriptionqueuename","aria-hidden":"true"},"#"),t(" getSubscriptionQueueName")],-1),O7=e("p",null,[t("▸ "),e("strong",null,"getSubscriptionQueueName"),t("("),e("code",null,"address"),t("): "),e("code",null,"string")],-1),A7=e("h4",{id:"parameters-33",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-33","aria-hidden":"true"},"#"),t(" Parameters")],-1),H7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),j7=e("td",{style:{"text-align":"left"}},[e("code",null,"address")],-1),G7={style:{"text-align":"left"}},q7=e("code",null,"EBMessageAddress",-1),V7=e("h4",{id:"returns-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-37","aria-hidden":"true"},"#"),t(" Returns")],-1),z7=e("p",null,[e("code",null,"string")],-1),Z7=e("h4",{id:"defined-in-114",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-114","aria-hidden":"true"},"#"),t(" Defined in")],-1),U7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getSubscriptionQueueName.impl.ts#L10",target:"_blank",rel:"noopener noreferrer"},Q7=d('<hr><h3 id="getuniqueid" tabindex="-1"><a class="header-anchor" href="#getuniqueid" aria-hidden="true">#</a> getUniqueId</h3><p>▸ <strong>getUniqueId</strong>(): <code>string</code></p><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-115" tabindex="-1"><a class="header-anchor" href="#defined-in-115" aria-hidden="true">#</a> Defined in</h4>',6),K7={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/getUniqueId.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},W7=d('<hr><h3 id="gracefulshutdown" tabindex="-1"><a class="header-anchor" href="#gracefulshutdown" aria-hidden="true">#</a> gracefulShutdown</h3><p>▸ <strong>gracefulShutdown</strong>(<code>logger</code>, <code>list</code>, <code>timeoutMs?</code>): <code>void</code></p><p>Helps to gracefully shut down your application. Provide in list objects. The objects contains a name and a promise function which should be executed.</p><p>The execution of array list functions is done sequential.</p><h4 id="parameters-34" tabindex="-1"><a class="header-anchor" href="#parameters-34" aria-hidden="true">#</a> Parameters</h4>',6),$7=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default value"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Y7=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),J7={style:{"text-align":"left"}},X7=e("code",null,"Logger",-1),e8=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),t8=e("td",{style:{"text-align":"left"}},"the logger object",-1),n8=e("td",{style:{"text-align":"left"}},[e("code",null,"list")],-1),o8={style:{"text-align":"left"}},s8=e("code",null,"ShutdownEntry",-1),l8=e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")],-1),d8=e("td",{style:{"text-align":"left"}},"a object containing name and function",-1),a8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"timeoutMs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},[e("code",null,"30000")]),e("td",{style:{"text-align":"left"}},"in ms to shut")],-1),i8=d(`<h4 id="returns-39" tabindex="-1"><a class="header-anchor" href="#returns-39" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> shutDownList <span class="token operator">=</span> <span class="token punctuation">[</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceA<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceA<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>serviceB<span class="token punctuation">.</span>info<span class="token punctuation">.</span>serviceVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   fn<span class="token operator">:</span> serviceB<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
   name<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
   fn<span class="token operator">:</span> eventbridge<span class="token punctuation">.</span>destroy
 <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token function">gracefulShutdown</span><span class="token punctuation">(</span>logger<span class="token punctuation">,</span> shutDownList<span class="token punctuation">)</span>

<span class="token comment">// will shutdown ServiceA, then ServiceB, then the event bridge</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Default</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token number">30000</span> milliseconds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="defined-in-116" tabindex="-1"><a class="header-anchor" href="#defined-in-116" aria-hidden="true">#</a> Defined in</h4>`,7),c8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/helper/gracefulShutdown.impl.ts#L36",target:"_blank",rel:"noopener noreferrer"},r8=d('<hr><h3 id="isdevelop" tabindex="-1"><a class="header-anchor" href="#isdevelop" aria-hidden="true">#</a> isDevelop</h3><p>▸ <strong>isDevelop</strong>(): <code>boolean</code></p><p>returns true if NODE_ENV is set to value starting with &quot;develop&quot;</p><h4 id="returns-40" tabindex="-1"><a class="header-anchor" href="#returns-40" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-117" tabindex="-1"><a class="header-anchor" href="#defined-in-117" aria-hidden="true">#</a> Defined in</h4>',7),u8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/isDevelop.impl.ts#L6",target:"_blank",rel:"noopener noreferrer"},h8=d('<hr><h3 id="serializeotp" tabindex="-1"><a class="header-anchor" href="#serializeotp" aria-hidden="true">#</a> serializeOtp</h3><p>▸ <strong>serializeOtp</strong>(): <code>string</code></p><h4 id="returns-41" tabindex="-1"><a class="header-anchor" href="#returns-41" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-118" tabindex="-1"><a class="header-anchor" href="#defined-in-118" aria-hidden="true">#</a> Defined in</h4>',6),_8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/helper/serializeOtp.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},p8=e("h2",{id:"service-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service-1","aria-hidden":"true"},"#"),t(" Service")],-1),f8=e("p",null,[t("• "),e("strong",null,"ServiceEventsNames"),t(": "),e("code",null,"Object")],-1),g8=e("p",null,[t("Events which can be emitted by a service. Internal events are prefixed with "),e("code",null,"service-")],-1),m8=e("h4",{id:"defined-in-119",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-119","aria-hidden":"true"},"#"),t(" Defined in")],-1),y8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L11",target:"_blank",rel:"noopener noreferrer"},b8=d(`<p>• <strong>Service</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for all services. This class provides base functions to work with the event bridge, logging and so on</p><p>Every service should extend this class and should not directly access the eventbridge or other service</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>

  <span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// your custom implementation</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// your custom implementation</span>
   <span class="token keyword">await</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-120" tabindex="-1"><a class="header-anchor" href="#defined-in-120" aria-hidden="true">#</a> Defined in</h4>`,7),x8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/Service/Service.impl.ts#L76",target:"_blank",rel:"noopener noreferrer"},v8=d('<p>• <strong>ServiceBuilder</strong>&lt;<code>ConfigType</code>, <code>ConfigInputType</code>, <code>ServiceClassType</code>&gt;: <code>Object</code></p><p>This class is used to build a service. The <code>ServiceBuilder</code> class is used to build a service. It has a few methods that are used to add command definitions and subscription definitions to the service. It also has a method that is used to create an instance of the service class.</p><h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4>',3),S8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),T8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),k8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigInputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"unknown"),t(">")])],-1),C8=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),P8={style:{"text-align":"left"}},w8=e("code",null,"ServiceClass",-1),I8=e("code",null,"Service",-1),M8=e("code",null,"ConfigType",-1),E8=e("h4",{id:"defined-in-121",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-121","aria-hidden":"true"},"#"),t(" Defined in")],-1),F8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/ServiceBuilder/ServiceBuilder.impl.ts#L38",target:"_blank",rel:"noopener noreferrer"},D8=d('<p>• <strong>ServiceClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>The ServiceClass interface</p><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;"><code>unknown</code> | <code>undefined</code></td></tr></tbody></table><h4 id="defined-in-122" tabindex="-1"><a class="header-anchor" href="#defined-in-122" aria-hidden="true">#</a> Defined in</h4>',5),R8={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceClass.ts#L11",target:"_blank",rel:"noopener noreferrer"},B8=d('<h3 id="serviceconstructorinput" tabindex="-1"><a class="header-anchor" href="#serviceconstructorinput" aria-hidden="true">#</a> ServiceConstructorInput</h3><p>Ƭ <strong>ServiceConstructorInput</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><h4 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td></tr></tbody></table><h4 id="type-declaration-30" tabindex="-1"><a class="header-anchor" href="#type-declaration-30" aria-hidden="true">#</a> Type declaration</h4>',5),N8=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),L8=e("td",{style:{"text-align":"left"}},[e("code",null,"commandDefinitionList")],-1),O8={style:{"text-align":"left"}},A8=e("code",null,"CommandDefinitionList",-1),H8=e("code",null,"any",-1),j8=e("td",{style:{"text-align":"left"}},"The list of command definitions for this service",-1),G8=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"config")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ConfigType")]),e("td",{style:{"text-align":"left"}},"The service specific config")],-1),q8=e("td",{style:{"text-align":"left"}},[e("code",null,"configStore?")],-1),V8={style:{"text-align":"left"}},z8=e("code",null,"ConfigStore",-1),Z8=e("td",{style:{"text-align":"left"}},"The config store instance",-1),U8=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridge")],-1),Q8={style:{"text-align":"left"}},K8=e("code",null,"EventBridge",-1),W8=e("td",{style:{"text-align":"left"}},"The eventBridge instance",-1),$8=e("td",{style:{"text-align":"left"}},[e("code",null,"info")],-1),Y8={style:{"text-align":"left"}},J8=e("code",null,"ServiceInfoType",-1),X8=e("td",{style:{"text-align":"left"}},"The service info with name, version and description of service",-1),eC=e("td",{style:{"text-align":"left"}},[e("code",null,"logger")],-1),tC={style:{"text-align":"left"}},nC=e("code",null,"Logger",-1),oC=e("td",{style:{"text-align":"left"}},"A logger instance",-1),sC=e("td",{style:{"text-align":"left"}},[e("code",null,"secretStore?")],-1),lC={style:{"text-align":"left"}},dC=e("code",null,"SecretStore",-1),aC=e("td",{style:{"text-align":"left"}},"The secret store instance",-1),iC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"spanProcessor?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SpanProcessor")]),e("td",{style:{"text-align":"left"}},"The opentelemetry span processor instance")],-1),cC=e("td",{style:{"text-align":"left"}},[e("code",null,"stateStore?")],-1),rC={style:{"text-align":"left"}},uC=e("code",null,"StateStore",-1),hC=e("td",{style:{"text-align":"left"}},"the state store instance",-1),_C=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDefinitionList")],-1),pC={style:{"text-align":"left"}},fC=e("code",null,"SubscriptionDefinitionList",-1),gC=e("code",null,"any",-1),mC=e("td",{style:{"text-align":"left"}},"The list of subscription definitions for this service",-1),yC=e("h4",{id:"defined-in-123",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-123","aria-hidden":"true"},"#"),t(" Defined in")],-1),bC={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceConstructorInput.ts#L15",target:"_blank",rel:"noopener noreferrer"},xC=d('<hr><h3 id="serviceeventsinternal" tabindex="-1"><a class="header-anchor" href="#serviceeventsinternal" aria-hidden="true">#</a> ServiceEventsInternal</h3><p>Ƭ <strong>ServiceEventsInternal</strong>: <code>Object</code></p><p>Events which can be emitted by a service. Internal events are prefixed with <code>service-</code>.</p><p>Response messages, which have an event name assigned, are prefixed with <code>custom-</code> If you like to use your own events, the event name must be prefixed with <code>misc-</code>.</p><h4 id="type-declaration-31" tabindex="-1"><a class="header-anchor" href="#type-declaration-31" aria-hidden="true">#</a> Type declaration</h4>',6),vC=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),SC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is fully initialized and ready Should be emitted by custom service class. It is not emitted by default")],-1),TC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-drain")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is going to be stopped")],-1),kC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error")],-1),CC={style:{"text-align":"left"}},PC=e("code",null,"commandName",-1),wC=e("code",null,"string",-1),IC=e("code",null,"error",-1),MC=e("code",null,"HandledError",-1),EC=e("code",null,"traceId",-1),FC=e("code",null,"TraceId",-1),DC=e("td",{style:{"text-align":"left"}},"emitted when a command throws a HandledError",-1),RC=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),BC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.error")],-1),NC={style:{"text-align":"left"}},LC=e("code",null,"HandledError",-1),OC=e("td",{style:{"text-align":"left"}},"-",-1),AC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-command-error.traceId")],-1),HC={style:{"text-align":"left"}},jC=e("code",null,"TraceId",-1),GC=e("td",{style:{"text-align":"left"}},"-",-1),qC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error")],-1),VC={style:{"text-align":"left"}},zC=e("code",null,"error",-1),ZC=e("code",null,"HandledError",-1),UC=e("code",null,"subscriptionName",-1),QC=e("code",null,"string",-1),KC=e("code",null,"traceId",-1),WC=e("code",null,"TraceId",-1),$C=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws a HandledError",-1),YC=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.error")],-1),JC={style:{"text-align":"left"}},XC=e("code",null,"HandledError",-1),eP=e("td",{style:{"text-align":"left"}},"-",-1),tP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),nP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-handled-subscription-error.traceId")],-1),oP={style:{"text-align":"left"}},sP=e("code",null,"TraceId",-1),lP=e("td",{style:{"text-align":"left"}},"-",-1),dP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-not-available")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined"),t(" | "),e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"emitted when the service is not available (for example database connection could not be established)")],-1),aP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-started")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service is started, but not fully initialized and not ready yet")],-1),iP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-stopped")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")]),e("td",{style:{"text-align":"left"}},"emitted when the service has been stopped")],-1),cP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error")],-1),rP={style:{"text-align":"left"}},uP=e("code",null,"commandName",-1),hP=e("code",null,"string",-1),_P=e("code",null,"error",-1),pP=e("code",null,"unknown",-1),fP=e("code",null,"traceId",-1),gP=e("code",null,"TraceId",-1),mP=e("td",{style:{"text-align":"left"}},"emitted when a command throws an error other than a HandledError",-1),yP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.commandName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),bP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),xP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-command-error.traceId")],-1),vP={style:{"text-align":"left"}},SP=e("code",null,"TraceId",-1),TP=e("td",{style:{"text-align":"left"}},"-",-1),kP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error")],-1),CP={style:{"text-align":"left"}},PP=e("code",null,"error",-1),wP=e("code",null,"unknown",-1),IP=e("code",null,"subscriptionName",-1),MP=e("code",null,"string",-1),EP=e("code",null,"traceId",-1),FP=e("code",null,"TraceId",-1),DP=e("td",{style:{"text-align":"left"}},"emitted when a subscription throws an error other than a HandledError",-1),RP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),BP=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),NP=e("td",{style:{"text-align":"left"}},[e("code",null,"service-unhandled-subscription-error.traceId")],-1),LP={style:{"text-align":"left"}},OP=e("code",null,"TraceId",-1),AP=e("td",{style:{"text-align":"left"}},"-",-1),HP=e("h4",{id:"defined-in-124",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-124","aria-hidden":"true"},"#"),t(" Defined in")],-1),jP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/ServiceEvents.ts#L54",target:"_blank",rel:"noopener noreferrer"},GP=d('<h2 id="store-1" tabindex="-1"><a class="header-anchor" href="#store-1" aria-hidden="true">#</a> Store</h2><p>• <strong>ConfigStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store adapters</p><h4 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-125" tabindex="-1"><a class="header-anchor" href="#defined-in-125" aria-hidden="true">#</a> Defined in</h4>',6),qP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/ConfigStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},VP=d(`<p>• <strong>DefaultConfigStore</strong>: <code>Object</code></p><p>The DefaultConfigStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConfigStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   config<span class="token operator">:</span> <span class="token punctuation">{</span>
     initialValue<span class="token operator">:</span> <span class="token string">&#39;initial&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token string">&#39;initialValue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// outputs: { initialValue: &#39;initial&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-126" tabindex="-1"><a class="header-anchor" href="#defined-in-126" aria-hidden="true">#</a> Defined in</h4>`,6),zP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultConfigStore/DefaultConfigStore.impl.ts#L25",target:"_blank",rel:"noopener noreferrer"},ZP=d(`<p>• <strong>DefaultSecretStore</strong>: <code>Object</code></p><p>The DefaultSecretStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status <code>Unauthorized</code>, when a disabled operation is called.</p><p>For development and testing purpose, you can initiate the store with values.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 config<span class="token operator">:</span> <span class="token punctuation">{</span>
   secretOne<span class="token operator">:</span> <span class="token string">&#39;my_secret_one_value&#39;</span><span class="token punctuation">,</span>
   secretTwo<span class="token operator">:</span> <span class="token string">&#39;my_secret_two_value&#39;</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token string">&#39;secretOne&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secretTwo) // outputs: { secretOne: my_secret_one_value, secretTwo: &#39;</span>my_secret_two_value&#39; <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Per default, setting/changing and removal of values are disabled. You can enable it on instance creation:</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSecretStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defined-in-127" tabindex="-1"><a class="header-anchor" href="#defined-in-127" aria-hidden="true">#</a> Defined in</h4>`,9),UP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultSecretStore/DefaultSecretStore.impl.ts#L33",target:"_blank",rel:"noopener noreferrer"},QP=e("p",null,[t("• "),e("strong",null,"DefaultStateStore"),t(": "),e("code",null,"Object")],-1),KP=e("p",null,[t("The DefaultStateStore is a placeholder which offers all needed methods. Getters and setters will throw a UnhandledError with status "),e("code",null,"Not implemented")],-1),WP=e("h4",{id:"defined-in-128",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-128","aria-hidden":"true"},"#"),t(" Defined in")],-1),$P={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/DefaultStateStore/DefaultStateStore.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},YP=d('<p>• <strong>SecretStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for secret store adapters</p><h4 id="type-parameters-34" tabindex="-1"><a class="header-anchor" href="#type-parameters-34" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-129" tabindex="-1"><a class="header-anchor" href="#defined-in-129" aria-hidden="true">#</a> Defined in</h4>',5),JP={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/SecretStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},XP=d('<p>• <strong>StateStoreBaseClass</strong>&lt;<code>ConfigType</code>&gt;: <code>Object</code></p><p>Base class for config store implementations</p><h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ConfigType</code></td><td style="text-align:left;">extends <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; = {}</td></tr></tbody></table><h4 id="defined-in-130" tabindex="-1"><a class="header-anchor" href="#defined-in-130" aria-hidden="true">#</a> Defined in</h4>',5),ew={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/StateStoreBaseClass.impl.ts#L11",target:"_blank",rel:"noopener noreferrer"},tw=e("p",null,[t("• "),e("strong",null,"ConfigStore"),t(": "),e("code",null,"Object")],-1),nw=e("p",null,"Interface definition for config store adapters",-1),ow=e("h4",{id:"defined-in-131",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-131","aria-hidden":"true"},"#"),t(" Defined in")],-1),sw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},lw=e("p",null,[t("• "),e("strong",null,"SecretStore"),t(": "),e("code",null,"Object")],-1),dw=e("p",null,"Interface definition for a secret store implementation",-1),aw=e("h4",{id:"defined-in-132",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-132","aria-hidden":"true"},"#"),t(" Defined in")],-1),iw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretStore.ts#L9",target:"_blank",rel:"noopener noreferrer"},cw=e("p",null,[t("• "),e("strong",null,"StateStore"),t(": "),e("code",null,"Object")],-1),rw=e("p",null,"Interface definition for state store implementations",-1),uw=e("h4",{id:"defined-in-133",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-133","aria-hidden":"true"},"#"),t(" Defined in")],-1),hw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateStore.ts#L10",target:"_blank",rel:"noopener noreferrer"},_w=d('<h3 id="configdeletefunction" tabindex="-1"><a class="header-anchor" href="#configdeletefunction" aria-hidden="true">#</a> ConfigDeleteFunction</h3><p>Ƭ <strong>ConfigDeleteFunction</strong>: (<code>configName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-32" tabindex="-1"><a class="header-anchor" href="#type-declaration-32" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>configName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a config value from the config store</p><h5 id="parameters-35" tabindex="-1"><a class="header-anchor" href="#parameters-35" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>configName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-42" tabindex="-1"><a class="header-anchor" href="#returns-42" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-134" tabindex="-1"><a class="header-anchor" href="#defined-in-134" aria-hidden="true">#</a> Defined in</h4>',10),pw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},fw=d('<hr><h3 id="configgetterfunction" tabindex="-1"><a class="header-anchor" href="#configgetterfunction" aria-hidden="true">#</a> ConfigGetterFunction</h3><p>Ƭ <strong>ConfigGetterFunction</strong>: (...<code>configNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-33" tabindex="-1"><a class="header-anchor" href="#type-declaration-33" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...configNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a config value from the config store</p><h5 id="parameters-36" tabindex="-1"><a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...configNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-135" tabindex="-1"><a class="header-anchor" href="#defined-in-135" aria-hidden="true">#</a> Defined in</h4>',11),gw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},mw=d('<hr><h3 id="configsetterfunction" tabindex="-1"><a class="header-anchor" href="#configsetterfunction" aria-hidden="true">#</a> ConfigSetterFunction</h3><p>Ƭ <strong>ConfigSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-34" tabindex="-1"><a class="header-anchor" href="#type-declaration-34" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a config value in the config store</p><h5 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-136" tabindex="-1"><a class="header-anchor" href="#defined-in-136" aria-hidden="true">#</a> Defined in</h4>',11),yw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/ConfigStore/types/ConfigSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},bw=d('<hr><h3 id="secretdeletefunction" tabindex="-1"><a class="header-anchor" href="#secretdeletefunction" aria-hidden="true">#</a> SecretDeleteFunction</h3><p>Ƭ <strong>SecretDeleteFunction</strong>: (<code>secretName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-35" tabindex="-1"><a class="header-anchor" href="#type-declaration-35" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a secret from the secret store</p><h5 id="parameters-38" tabindex="-1"><a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-137" tabindex="-1"><a class="header-anchor" href="#defined-in-137" aria-hidden="true">#</a> Defined in</h4>',11),xw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},vw=d('<hr><h3 id="secretgetterfunction" tabindex="-1"><a class="header-anchor" href="#secretgetterfunction" aria-hidden="true">#</a> SecretGetterFunction</h3><p>Ƭ <strong>SecretGetterFunction</strong>: (...<code>secretName</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-36" tabindex="-1"><a class="header-anchor" href="#type-declaration-36" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...secretName</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><p>get a secret from the secret store</p><h5 id="parameters-39" tabindex="-1"><a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...secretName</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-138" tabindex="-1"><a class="header-anchor" href="#defined-in-138" aria-hidden="true">#</a> Defined in</h4>',11),Sw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Tw=d('<hr><h3 id="secretsetterfunction" tabindex="-1"><a class="header-anchor" href="#secretsetterfunction" aria-hidden="true">#</a> SecretSetterFunction</h3><p>Ƭ <strong>SecretSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-37" tabindex="-1"><a class="header-anchor" href="#type-declaration-37" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a secret in the secret store</p><h5 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-139" tabindex="-1"><a class="header-anchor" href="#defined-in-139" aria-hidden="true">#</a> Defined in</h4>',11),kw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/SecretStore/types/SecretSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Cw=d('<hr><h3 id="statedeletefunction" tabindex="-1"><a class="header-anchor" href="#statedeletefunction" aria-hidden="true">#</a> StateDeleteFunction</h3><p>Ƭ <strong>StateDeleteFunction</strong>: (<code>stateName</code>: <code>string</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-38" tabindex="-1"><a class="header-anchor" href="#type-declaration-38" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>delete a state value from the state store</p><h5 id="parameters-41" tabindex="-1"><a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-140" tabindex="-1"><a class="header-anchor" href="#defined-in-140" aria-hidden="true">#</a> Defined in</h4>',11),Pw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateDeleteFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},ww=d('<hr><h3 id="stategetterfunction" tabindex="-1"><a class="header-anchor" href="#stategetterfunction" aria-hidden="true">#</a> StateGetterFunction</h3><p>Ƭ <strong>StateGetterFunction</strong>: (...<code>stateNames</code>: <code>string</code>[]) =&gt; <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="type-declaration-39" tabindex="-1"><a class="header-anchor" href="#type-declaration-39" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><p>get a state value from the state store</p><h5 id="parameters-42" tabindex="-1"><a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h5 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code> | <code>undefined</code>&gt;&gt;</p><h4 id="defined-in-141" tabindex="-1"><a class="header-anchor" href="#defined-in-141" aria-hidden="true">#</a> Defined in</h4>',11),Iw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateGetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Mw=d('<hr><h3 id="statesetterfunction" tabindex="-1"><a class="header-anchor" href="#statesetterfunction" aria-hidden="true">#</a> StateSetterFunction</h3><p>Ƭ <strong>StateSetterFunction</strong>: (<code>secretName</code>: <code>string</code>, <code>secretValue</code>: <code>unknown</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration-40" tabindex="-1"><a class="header-anchor" href="#type-declaration-40" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>secretName</code>, <code>secretValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>set a state value in the state store</p><h5 id="parameters-43" tabindex="-1"><a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>secretName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>secretValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h5 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-142" tabindex="-1"><a class="header-anchor" href="#defined-in-142" aria-hidden="true">#</a> Defined in</h4>',11),Ew={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/StateStore/types/StateSetterFunction.ts#L2",target:"_blank",rel:"noopener noreferrer"},Fw=d('<h2 id="subscription-1" tabindex="-1"><a class="header-anchor" href="#subscription-1" aria-hidden="true">#</a> Subscription</h2><p>• <strong>SubscriptionDefinitionBuilder</strong>&lt;<code>ServiceClassType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>Subscription definition builder is a helper to create and define a subscriptions for a service. It helps to set all needed filters.</p><p>A working schema definition needs at least a subscription name, a short description and the subscription implementation.</p><h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4>',5),Dw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Rw=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),Bw={style:{"text-align":"left"}},Nw=e("code",null,"ServiceClass",-1),Lw=e("code",null,"ServiceClass",-1),Ow=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),Aw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),Hw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"void")])],-1),jw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),Gw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),qw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType"),t(" | "),e("code",null,"void"),t(" | "),e("code",null,"undefined")])],-1),Vw=e("h4",{id:"defined-in-143",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-143","aria-hidden":"true"},"#"),t(" Defined in")],-1),zw={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts#L31",target:"_blank",rel:"noopener noreferrer"},Zw=d('<h3 id="subscription-2" tabindex="-1"><a class="header-anchor" href="#subscription-2" aria-hidden="true">#</a> Subscription</h3><p>Ƭ <strong>Subscription</strong>&lt;<code>PayloadType</code>, <code>ParameterType</code>&gt;: <code>Object</code></p><p>A subscription managed by the event bridge</p><h4 id="type-parameters-37" tabindex="-1"><a class="header-anchor" href="#type-parameters-37" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParameterType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-41" tabindex="-1"><a class="header-anchor" href="#type-declaration-41" aria-hidden="true">#</a> Type declaration</h4>',6),Uw=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Qw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to be used for custom message if the subscriptions returns a result")],-1),Kw=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),Ww={style:{"text-align":"left"}},$w=e("code",null,"DefinitionEventBridgeConfig",-1),Yw=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),Jw=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the event name to subscribe for")],-1),Xw=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),eI={style:{"text-align":"left"}},tI=e("code",null,"EBMessageType",-1),nI=e("td",{style:{"text-align":"left"}},"the message type",-1),oI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload?")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"parameter?"),t(": "),e("code",null,"ParameterType"),t(" ; "),e("code",null,"payload?"),t(": "),e("code",null,"PayloadType"),t(" }")]),e("td",{style:{"text-align":"left"}},"the message payload")],-1),sI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.parameter?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ParameterType")]),e("td",{style:{"text-align":"left"}},"-")],-1),lI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload.payload?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),dI=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),aI={style:{"text-align":"left"}},iI=e("code",null,"PrincipalId",-1),cI=e("td",{style:{"text-align":"left"}},"the principal id",-1),rI=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),uI={style:{"text-align":"left"}},hI=e("code",null,"instanceId?",-1),_I=e("code",null,"InstanceId",-1),pI=e("code",null,"serviceName?",-1),fI=e("code",null,"string",-1),gI=e("code",null,"serviceTarget?",-1),mI=e("code",null,"string",-1),yI=e("code",null,"serviceVersion?",-1),bI=e("code",null,"string",-1),xI=e("td",{style:{"text-align":"left"}},"the consumer address of the message",-1),vI=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),SI={style:{"text-align":"left"}},TI=e("code",null,"InstanceId",-1),kI=e("td",{style:{"text-align":"left"}},"-",-1),CI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),PI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),wI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),II=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),MI={style:{"text-align":"left"}},EI=e("code",null,"instanceId?",-1),FI=e("code",null,"InstanceId",-1),DI=e("code",null,"serviceName?",-1),RI=e("code",null,"string",-1),BI=e("code",null,"serviceTarget?",-1),NI=e("code",null,"string",-1),LI=e("code",null,"serviceVersion?",-1),OI=e("code",null,"string",-1),AI=e("td",{style:{"text-align":"left"}},"the producer address of the message",-1),HI=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),jI={style:{"text-align":"left"}},GI=e("code",null,"InstanceId",-1),qI=e("td",{style:{"text-align":"left"}},"-",-1),VI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),zI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),ZI=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),UI=e("td",{style:{"text-align":"left"}},[e("code",null,"subscriber")],-1),QI={style:{"text-align":"left"}},KI=e("code",null,"EBMessageAddress",-1),WI=e("td",{style:{"text-align":"left"}},"the address of the subscription (service name, version and subscription name)",-1),$I=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),YI={style:{"text-align":"left"}},JI=e("code",null,"TenantId",-1),XI=e("td",{style:{"text-align":"left"}},"the tenant id",-1),eM=e("h4",{id:"defined-in-144",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-144","aria-hidden":"true"},"#"),t(" Defined in")],-1),tM={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/Subscription.ts#L13",target:"_blank",rel:"noopener noreferrer"},nM=e("hr",null,null,-1),oM=e("h3",{id:"subscriptionafterguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionafterguardhook","aria-hidden":"true"},"#"),t(" SubscriptionAfterGuardHook")],-1),sM=e("strong",null,"SubscriptionAfterGuardHook",-1),lM=e("code",null,"ServiceClassType",-1),dM=e("code",null,"FunctionResultType",-1),aM=e("code",null,"FunctionPayloadOutputType",-1),iM=e("code",null,"FunctionParameterType",-1),cM=e("code",null,"this",-1),rM=e("code",null,"ServiceClassType",-1),uM=e("code",null,"context",-1),hM=e("code",null,"SubscriptionFunctionContext",-1),_M=e("code",null,"result",-1),pM=e("code",null,"Readonly",-1),fM=e("code",null,"FunctionResultType",-1),gM=e("code",null,"payload",-1),mM=e("code",null,"Readonly",-1),yM=e("code",null,"FunctionPayloadOutputType",-1),bM=e("code",null,"parameter",-1),xM=e("code",null,"Readonly",-1),vM=e("code",null,"FunctionParameterType",-1),SM=e("code",null,"Promise",-1),TM=e("code",null,"void",-1),kM=e("h4",{id:"type-parameters-38",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-38","aria-hidden":"true"},"#"),t(" Type parameters")],-1),CM=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),PM=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),wM={style:{"text-align":"left"}},IM=e("code",null,"ServiceClass",-1),MM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),EM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadOutputType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),FM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParameterType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),DM=d('<h4 id="type-declaration-42" tabindex="-1"><a class="header-anchor" href="#type-declaration-42" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>result</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Definition of after guard hook functions. This guard is called after function successfully returns and after output validation.</p><h5 id="parameters-44" tabindex="-1"><a class="header-anchor" href="#parameters-44" aria-hidden="true">#</a> Parameters</h5>',4),RM=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),BM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),NM=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),LM={style:{"text-align":"left"}},OM=e("code",null,"SubscriptionFunctionContext",-1),AM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"result")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionResultType"),t(">")])],-1),HM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadOutputType"),t(">")])],-1),jM=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParameterType"),t(">")])],-1),GM=e("h5",{id:"returns-51",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-51","aria-hidden":"true"},"#"),t(" Returns")],-1),qM=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),VM=e("h4",{id:"defined-in-145",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-145","aria-hidden":"true"},"#"),t(" Defined in")],-1),zM={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionAfterGuardHook.ts#L10",target:"_blank",rel:"noopener noreferrer"},ZM=e("hr",null,null,-1),UM=e("h3",{id:"subscriptionbeforeguardhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionbeforeguardhook","aria-hidden":"true"},"#"),t(" SubscriptionBeforeGuardHook")],-1),QM=e("strong",null,"SubscriptionBeforeGuardHook",-1),KM=e("code",null,"ServiceClassType",-1),WM=e("code",null,"FunctionPayloadType",-1),$M=e("code",null,"FunctionParamsType",-1),YM=e("code",null,"this",-1),JM=e("code",null,"ServiceClassType",-1),XM=e("code",null,"context",-1),eE=e("code",null,"SubscriptionFunctionContext",-1),tE=e("code",null,"payload",-1),nE=e("code",null,"Readonly",-1),oE=e("code",null,"FunctionPayloadType",-1),sE=e("code",null,"parameter",-1),lE=e("code",null,"Readonly",-1),dE=e("code",null,"FunctionParamsType",-1),aE=e("code",null,"Promise",-1),iE=e("code",null,"void",-1),cE=e("h4",{id:"type-parameters-39",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-39","aria-hidden":"true"},"#"),t(" Type parameters")],-1),rE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),uE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),hE={style:{"text-align":"left"}},_E=e("code",null,"ServiceClass",-1),pE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),fE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),gE=d('<h4 id="type-declaration-43" tabindex="-1"><a class="header-anchor" href="#type-declaration-43" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Guard is called after command function input validation and before executing the command function. The guard is usefull to separate for example auth checks from business logic. It should throw HandledError or return void.</p><h5 id="parameters-45" tabindex="-1"><a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a> Parameters</h5>',4),mE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),bE=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),xE={style:{"text-align":"left"}},vE=e("code",null,"SubscriptionFunctionContext",-1),SE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),TE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),kE=e("h5",{id:"returns-52",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-52","aria-hidden":"true"},"#"),t(" Returns")],-1),CE=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"void"),t(">")],-1),PE=e("h4",{id:"defined-in-146",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-146","aria-hidden":"true"},"#"),t(" Defined in")],-1),wE={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionBeforeGuardHook.ts#L11",target:"_blank",rel:"noopener noreferrer"},IE=d('<hr><h3 id="subscriptiondefinition" tabindex="-1"><a class="header-anchor" href="#subscriptiondefinition" aria-hidden="true">#</a> SubscriptionDefinition</h3><p>Ƭ <strong>SubscriptionDefinition</strong>&lt;<code>ServiceClassType</code>, <code>MetadataType</code>, <code>MessagePayloadType</code>, <code>MessageParamsType</code>, <code>MessageResultType</code>, <code>FunctionPayloadType</code>, <code>FunctionParamsType</code>, <code>FunctionResultType</code>&gt;: <code>Object</code></p><p>The definition for a subscription provided by some service.</p><h4 id="type-parameters-40" tabindex="-1"><a class="header-anchor" href="#type-parameters-40" aria-hidden="true">#</a> Type parameters</h4>',5),ME=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),EE=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),FE={style:{"text-align":"left"}},DE=e("code",null,"ServiceClass",-1),RE=e("code",null,"ServiceClass",-1),BE=e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")],-1),NE={style:{"text-align":"left"}},LE=e("code",null,"SubscriptionDefinitionMetadataBase",-1),OE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),AE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),HE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),jE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),GE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),qE=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageResultType")])],-1),VE=e("h4",{id:"type-declaration-44",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-44","aria-hidden":"true"},"#"),t(" Type declaration")],-1),zE=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ZE=e("td",{style:{"text-align":"left"}},[e("code",null,"call")],-1),UE={style:{"text-align":"left"}},QE=e("code",null,"SubscriptionFunction",-1),KE=e("code",null,"ServiceClassType",-1),WE=e("code",null,"MessagePayloadType",-1),$E=e("code",null,"MessageParamsType",-1),YE=e("code",null,"FunctionPayloadType",-1),JE=e("code",null,"FunctionParamsType",-1),XE=e("code",null,"FunctionResultType",-1),eF=e("td",{style:{"text-align":"left"}},"the subscription function",-1),tF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"emitEventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name to be used for custom message if the subscription functions returns value")],-1),nF=e("td",{style:{"text-align":"left"}},[e("code",null,"eventBridgeConfig")],-1),oF={style:{"text-align":"left"}},sF=e("code",null,"DefinitionEventBridgeConfig",-1),lF=e("td",{style:{"text-align":"left"}},"config information for event bridge",-1),dF=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"filter forevent name")],-1),aF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks")],-1),iF={style:{"text-align":"left"}},cF=e("code",null,"afterGuard?",-1),rF=e("code",null,"Record",-1),uF=e("code",null,"string",-1),hF=e("code",null,"SubscriptionAfterGuardHook",-1),_F=e("code",null,"ServiceClassType",-1),pF=e("code",null,"FunctionResultType",-1),fF=e("code",null,"FunctionPayloadType",-1),gF=e("code",null,"FunctionParamsType",-1),mF=e("code",null,"beforeGuard?",-1),yF=e("code",null,"Record",-1),bF=e("code",null,"string",-1),xF=e("code",null,"SubscriptionBeforeGuardHook",-1),vF=e("code",null,"ServiceClassType",-1),SF=e("code",null,"FunctionPayloadType",-1),TF=e("code",null,"FunctionParamsType",-1),kF=e("code",null,"transformInput?",-1),CF=e("code",null,"transformFunction",-1),PF=e("code",null,"SubscriptionTransformInputHook",-1),wF=e("code",null,"ServiceClassType",-1),IF=e("code",null,"MessagePayloadType",-1),MF=e("code",null,"MessageParamsType",-1),EF=e("code",null,"transformInputSchema",-1),FF=e("code",null,"z.ZodType",-1),DF=e("code",null,"transformParameterSchema",-1),RF=e("code",null,"z.ZodType",-1),BF=e("code",null,"transformOutput?",-1),NF=e("code",null,"transformFunction",-1),LF=e("code",null,"SubscriptionTransformOutputHook",-1),OF=e("code",null,"ServiceClassType",-1),AF=e("code",null,"FunctionResultType",-1),HF=e("code",null,"FunctionParamsType",-1),jF=e("code",null,"any",-1),GF=e("code",null,"transformOutputSchema",-1),qF=e("code",null,"z.ZodType",-1),VF=e("td",{style:{"text-align":"left"}},"hooks of subscription",-1),zF=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.afterGuard?")],-1),ZF={style:{"text-align":"left"}},UF=e("code",null,"Record",-1),QF=e("code",null,"string",-1),KF=e("code",null,"SubscriptionAfterGuardHook",-1),WF=e("code",null,"ServiceClassType",-1),$F=e("code",null,"FunctionResultType",-1),YF=e("code",null,"FunctionPayloadType",-1),JF=e("code",null,"FunctionParamsType",-1),XF=e("td",{style:{"text-align":"left"}},"-",-1),eD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.beforeGuard?")],-1),tD={style:{"text-align":"left"}},nD=e("code",null,"Record",-1),oD=e("code",null,"string",-1),sD=e("code",null,"SubscriptionBeforeGuardHook",-1),lD=e("code",null,"ServiceClassType",-1),dD=e("code",null,"FunctionPayloadType",-1),aD=e("code",null,"FunctionParamsType",-1),iD=e("td",{style:{"text-align":"left"}},"-",-1),cD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput?")],-1),rD={style:{"text-align":"left"}},uD=e("code",null,"transformFunction",-1),hD=e("code",null,"SubscriptionTransformInputHook",-1),_D=e("code",null,"ServiceClassType",-1),pD=e("code",null,"MessagePayloadType",-1),fD=e("code",null,"MessageParamsType",-1),gD=e("code",null,"transformInputSchema",-1),mD=e("code",null,"z.ZodType",-1),yD=e("code",null,"transformParameterSchema",-1),bD=e("code",null,"z.ZodType",-1),xD=e("td",{style:{"text-align":"left"}},"-",-1),vD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformFunction")],-1),SD={style:{"text-align":"left"}},TD=e("code",null,"SubscriptionTransformInputHook",-1),kD=e("code",null,"ServiceClassType",-1),CD=e("code",null,"MessagePayloadType",-1),PD=e("code",null,"MessageParamsType",-1),wD=e("td",{style:{"text-align":"left"}},"-",-1),ID=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformInputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),MD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformInput.transformParameterSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),ED=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput?")],-1),FD={style:{"text-align":"left"}},DD=e("code",null,"transformFunction",-1),RD=e("code",null,"SubscriptionTransformOutputHook",-1),BD=e("code",null,"ServiceClassType",-1),ND=e("code",null,"FunctionResultType",-1),LD=e("code",null,"FunctionParamsType",-1),OD=e("code",null,"any",-1),AD=e("code",null,"transformOutputSchema",-1),HD=e("code",null,"z.ZodType",-1),jD=e("td",{style:{"text-align":"left"}},"-",-1),GD=e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformFunction")],-1),qD={style:{"text-align":"left"}},VD=e("code",null,"SubscriptionTransformOutputHook",-1),zD=e("code",null,"ServiceClassType",-1),ZD=e("code",null,"FunctionResultType",-1),UD=e("code",null,"FunctionParamsType",-1),QD=e("code",null,"any",-1),KD=e("td",{style:{"text-align":"left"}},"-",-1),WD=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hooks.transformOutput.transformOutputSchema")]),e("td",{style:{"text-align":"left"}},[e("code",null,"z.ZodType")]),e("td",{style:{"text-align":"left"}},"-")],-1),$D=e("td",{style:{"text-align":"left"}},[e("code",null,"messageType?")],-1),YD={style:{"text-align":"left"}},JD=e("code",null,"EBMessageType",-1),XD=e("td",{style:{"text-align":"left"}},"filter for message type",-1),eR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"metadata")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MetadataType")]),e("td",{style:{"text-align":"left"}},"the metadata of the subscription")],-1),tR=e("td",{style:{"text-align":"left"}},[e("code",null,"principalId?")],-1),nR={style:{"text-align":"left"}},oR=e("code",null,"PrincipalId",-1),sR=e("td",{style:{"text-align":"left"}},"filter for principal id",-1),lR=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver?")],-1),dR={style:{"text-align":"left"}},aR=e("code",null,"instanceId?",-1),iR=e("code",null,"InstanceId",-1),cR=e("code",null,"serviceName?",-1),rR=e("code",null,"string",-1),uR=e("code",null,"serviceTarget?",-1),hR=e("code",null,"string",-1),_R=e("code",null,"serviceVersion?",-1),pR=e("code",null,"string",-1),fR=e("td",{style:{"text-align":"left"}},"filter for messages consumed by given receiver",-1),gR=e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.instanceId?")],-1),mR={style:{"text-align":"left"}},yR=e("code",null,"InstanceId",-1),bR=e("td",{style:{"text-align":"left"}},"-",-1),xR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),vR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),SR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"receiver.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),TR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender?")],-1),kR={style:{"text-align":"left"}},CR=e("code",null,"instanceId?",-1),PR=e("code",null,"InstanceId",-1),wR=e("code",null,"serviceName?",-1),IR=e("code",null,"string",-1),MR=e("code",null,"serviceTarget?",-1),ER=e("code",null,"string",-1),FR=e("code",null,"serviceVersion?",-1),DR=e("code",null,"string",-1),RR=e("td",{style:{"text-align":"left"}},"filter for messages produced by given sender",-1),BR=e("td",{style:{"text-align":"left"}},[e("code",null,"sender.instanceId?")],-1),NR={style:{"text-align":"left"}},LR=e("code",null,"InstanceId",-1),OR=e("td",{style:{"text-align":"left"}},"-",-1),AR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),HR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceTarget?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),jR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sender.serviceVersion?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"-")],-1),GR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionDescription")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the description of the subscription")],-1),qR=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"subscriptionName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"the name of the subscription")],-1),VR=e("td",{style:{"text-align":"left"}},[e("code",null,"tenantId?")],-1),zR={style:{"text-align":"left"}},ZR=e("code",null,"TenantId",-1),UR=e("td",{style:{"text-align":"left"}},"filter for tenant id",-1),QR=e("h4",{id:"defined-in-147",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-147","aria-hidden":"true"},"#"),t(" Defined in")],-1),KR={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionDefinition.ts#L21",target:"_blank",rel:"noopener noreferrer"},WR=e("hr",null,null,-1),$R=e("h3",{id:"subscriptionfunction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunction","aria-hidden":"true"},"#"),t(" SubscriptionFunction")],-1),YR=e("strong",null,"SubscriptionFunction",-1),JR=e("code",null,"ServiceClassType",-1),XR=e("code",null,"MessagePayloadType",-1),eB=e("code",null,"MessageParamsType",-1),tB=e("code",null,"FunctionPayloadType",-1),nB=e("code",null,"FunctionParamsType",-1),oB=e("code",null,"FunctionResultType",-1),sB=e("code",null,"this",-1),lB=e("code",null,"ServiceClassType",-1),dB=e("code",null,"context",-1),aB=e("code",null,"SubscriptionFunctionContext",-1),iB=e("code",null,"payload",-1),cB=e("code",null,"Readonly",-1),rB=e("code",null,"FunctionPayloadType",-1),uB=e("code",null,"parameter",-1),hB=e("code",null,"Readonly",-1),_B=e("code",null,"FunctionParamsType",-1),pB=e("code",null,"Promise",-1),fB=e("code",null,"FunctionResultType",-1),gB=e("h4",{id:"type-parameters-41",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters-41","aria-hidden":"true"},"#"),t(" Type parameters")],-1),mB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yB=e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")],-1),bB={style:{"text-align":"left"}},xB=e("code",null,"ServiceClass",-1),vB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")])],-1),SB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),TB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionPayloadType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessagePayloadType")])],-1),kB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionParamsType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MessageParamsType")])],-1),CB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FunctionResultType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"undefined")])],-1),PB=d('<h4 id="type-declaration-45" tabindex="-1"><a class="header-anchor" href="#type-declaration-45" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>FunctionResultType</code>&gt;</p><p>CommandFunction is a function which will be triggered when a matching event bridge message is received by the service</p><h5 id="parameters-46" tabindex="-1"><a class="header-anchor" href="#parameters-46" aria-hidden="true">#</a> Parameters</h5>',4),wB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),IB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),MB=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),EB={style:{"text-align":"left"}},FB=e("code",null,"SubscriptionFunctionContext",-1),DB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionPayloadType"),t(">")])],-1),RB=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"FunctionParamsType"),t(">")])],-1),BB=e("h5",{id:"returns-53",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-53","aria-hidden":"true"},"#"),t(" Returns")],-1),NB=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"FunctionResultType"),t(">")],-1),LB=e("h4",{id:"defined-in-148",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-148","aria-hidden":"true"},"#"),t(" Defined in")],-1),OB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunction.ts#L8",target:"_blank",rel:"noopener noreferrer"},AB=e("hr",null,null,-1),HB=e("h3",{id:"subscriptionfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptionfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionFunctionContext")],-1),jB=e("strong",null,"SubscriptionFunctionContext",-1),GB=e("code",null,"Prettify",-1),qB=e("code",null,"ContextBase",-1),VB=e("code",null,"SubscriptionFunctionContextEnhancements",-1),zB=e("p",null,"The subscription function context which will be passed into subscription function.",-1),ZB=e("h4",{id:"defined-in-149",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-149","aria-hidden":"true"},"#"),t(" Defined in")],-1),UB={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L47",target:"_blank",rel:"noopener noreferrer"},QB=d('<hr><h3 id="subscriptionfunctioncontextenhancements" tabindex="-1"><a class="header-anchor" href="#subscriptionfunctioncontextenhancements" aria-hidden="true">#</a> SubscriptionFunctionContextEnhancements</h3><p>Ƭ <strong>SubscriptionFunctionContextEnhancements</strong>: <code>Object</code></p><p>It provides the original command message. Also, the methods:</p><ul><li><code>emit</code> which allows to emit custom events to the event bridge</li><li><code>invoke</code> which allows to call other commands</li></ul><h4 id="type-declaration-46" tabindex="-1"><a class="header-anchor" href="#type-declaration-46" aria-hidden="true">#</a> Type declaration</h4>',6),KB=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),WB=e("td",{style:{"text-align":"left"}},[e("code",null,"emit")],-1),$B={style:{"text-align":"left"}},YB=e("code",null,"EmitCustomMessageFunction",-1),JB=e("td",{style:{"text-align":"left"}},"emit a custom message",-1),XB=e("td",{style:{"text-align":"left"}},[e("code",null,"invoke")],-1),eN={style:{"text-align":"left"}},tN=e("code",null,"InvokeFunction",-1),nN=e("td",{style:{"text-align":"left"}},[t("Invokes a command and returns the result. It is recommended to validate the result against a schema which only contains the data you actually need. "),e("strong",null,[e("code",null,"Example")]),t(),e("code",null,"typescript const address: EBMessageAddress = { serviceName: 'name-of-service-to-invoke', serviceVersion: '1', serviceTarget: 'command-name-to-invoke', } const inputPayload = { my: 'input' } const inputParameter = { search: 'for_me' } const result = await invoke<MyResultType>(address, inputPayload inputParameter ) ")],-1),oN=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),sN={style:{"text-align":"left"}},lN=e("code",null,"Readonly",-1),dN=e("code",null,"EBMessage",-1),aN=e("td",{style:{"text-align":"left"}},"the original message",-1),iN=e("h4",{id:"defined-in-150",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-150","aria-hidden":"true"},"#"),t(" Defined in")],-1),cN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionFunctionContext.ts#L16",target:"_blank",rel:"noopener noreferrer"},rN=e("hr",null,null,-1),uN=e("h3",{id:"subscriptiontransformfunctioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformfunctioncontext","aria-hidden":"true"},"#"),t(" SubscriptionTransformFunctionContext")],-1),hN=e("strong",null,"SubscriptionTransformFunctionContext",-1),_N=e("code",null,"Prettify",-1),pN=e("code",null,"ContextBase",-1),fN=e("code",null,"message",-1),gN=e("code",null,"Readonly",-1),mN=e("code",null,"EBMessage",-1),yN=e("h4",{id:"defined-in-151",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-151","aria-hidden":"true"},"#"),t(" Defined in")],-1),bN={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformFunctionContext.ts#L8",target:"_blank",rel:"noopener noreferrer"},xN=e("hr",null,null,-1),vN=e("h3",{id:"subscriptiontransforminputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransforminputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformInputHook")],-1),SN=e("strong",null,"SubscriptionTransformInputHook",-1),TN=e("code",null,"ServiceClassType",-1),kN=e("code",null,"PayloadOutput",-1),CN=e("code",null,"ParamsOutput",-1),PN=e("code",null,"PayloadInput",-1),wN=e("code",null,"ParamsInput",-1),IN=e("code",null,"this",-1),MN=e("code",null,"ServiceClassType",-1),EN=e("code",null,"context",-1),FN=e("code",null,"SubscriptionTransformFunctionContext",-1),DN=e("code",null,"payload",-1),RN=e("code",null,"Readonly",-1),BN=e("code",null,"PayloadInput",-1),NN=e("code",null,"parameter",-1),LN=e("code",null,"Readonly",-1),ON=e("code",null,"ParamsInput",-1),AN=e("code",null,"Promise",-1),HN=e("code",null,"parameter",-1),jN=e("code",null,"Readonly",-1),GN=e("code",null,"ParamsOutput",-1),qN=e("code",null,"payload",-1),VN=e("code",null,"Readonly",-1),zN=e("code",null,"PayloadOutput",-1),ZN=d('<h4 id="type-parameters-42" tabindex="-1"><a class="header-anchor" href="#type-parameters-42" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>PayloadOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>PayloadInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ParamsInput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-47" tabindex="-1"><a class="header-anchor" href="#type-declaration-47" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h5 id="parameters-47" tabindex="-1"><a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a> Parameters</h5>',5),UN=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),QN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),KN=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),WN={style:{"text-align":"left"}},$N=e("code",null,"SubscriptionTransformFunctionContext",-1),YN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"PayloadInput"),t(">")])],-1),JN=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"ParamsInput"),t(">")])],-1),XN=d('<h5 id="returns-54" tabindex="-1"><a class="header-anchor" href="#returns-54" aria-hidden="true">#</a> Returns</h5><p><code>Promise</code>&lt;{ <code>parameter</code>: <code>Readonly</code>&lt;<code>ParamsOutput</code>&gt; ; <code>payload</code>: <code>Readonly</code>&lt;<code>PayloadOutput</code>&gt; }&gt;</p><h4 id="defined-in-152" tabindex="-1"><a class="header-anchor" href="#defined-in-152" aria-hidden="true">#</a> Defined in</h4>',3),eL={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformInputHook.ts#L6",target:"_blank",rel:"noopener noreferrer"},tL=e("hr",null,null,-1),nL=e("h3",{id:"subscriptiontransformoutputhook",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subscriptiontransformoutputhook","aria-hidden":"true"},"#"),t(" SubscriptionTransformOutputHook")],-1),oL=e("strong",null,"SubscriptionTransformOutputHook",-1),sL=e("code",null,"ServiceClassType",-1),lL=e("code",null,"MessageResultType",-1),dL=e("code",null,"MessageParamsType",-1),aL=e("code",null,"ResponseOutput",-1),iL=e("code",null,"this",-1),cL=e("code",null,"ServiceClassType",-1),rL=e("code",null,"context",-1),uL=e("code",null,"SubscriptionTransformFunctionContext",-1),hL=e("code",null,"payload",-1),_L=e("code",null,"Readonly",-1),pL=e("code",null,"MessageResultType",-1),fL=e("code",null,"parameter",-1),gL=e("code",null,"Readonly",-1),mL=e("code",null,"MessageParamsType",-1),yL=e("code",null,"Promise",-1),bL=e("code",null,"ResponseOutput",-1),xL=d('<h4 id="type-parameters-43" tabindex="-1"><a class="header-anchor" href="#type-parameters-43" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ServiceClassType</code></td><td style="text-align:left;"><code>ServiceClassType</code></td></tr><tr><td style="text-align:left;"><code>MessageResultType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>ResponseOutput</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration-48" tabindex="-1"><a class="header-anchor" href="#type-declaration-48" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>this</code>, <code>context</code>, <code>payload</code>, <code>parameter</code>): <code>Promise</code>&lt;<code>ResponseOutput</code>&gt;</p><p>This transform hook is executed after function output validation and AfterGuardHooks.</p><h5 id="parameters-48" tabindex="-1"><a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a> Parameters</h5>',6),vL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),SL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"this")]),e("td",{style:{"text-align":"left"}},[e("code",null,"ServiceClassType")])],-1),TL=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),kL={style:{"text-align":"left"}},CL=e("code",null,"SubscriptionTransformFunctionContext",-1),PL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageResultType"),t(">")])],-1),wL=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<"),e("code",null,"MessageParamsType"),t(">")])],-1),IL=e("h5",{id:"returns-55",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-55","aria-hidden":"true"},"#"),t(" Returns")],-1),ML=e("p",null,[e("code",null,"Promise"),t("<"),e("code",null,"ResponseOutput"),t(">")],-1),EL=e("h4",{id:"defined-in-153",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-153","aria-hidden":"true"},"#"),t(" Defined in")],-1),FL={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/core/types/subscription/SubscriptionTransformOutputHook.ts#L8",target:"_blank",rel:"noopener noreferrer"},DL=d('<h2 id="unit-test-helper-1" tabindex="-1"><a class="header-anchor" href="#unit-test-helper-1" aria-hidden="true">#</a> Unit test helper</h2><h3 id="getcommandcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandcontextmock" aria-hidden="true">#</a> getCommandContextMock</h3><p>▸ <strong>getCommandContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command function context</p><h4 id="type-parameters-44" tabindex="-1"><a class="header-anchor" href="#type-parameters-44" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-49" tabindex="-1"><a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-56" tabindex="-1"><a class="header-anchor" href="#returns-56" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),RL=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),BL=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),NL={style:{"text-align":"left"}},LL=e("code",null,"configs",-1),OL=e("code",null,"getConfig",-1),AL=e("code",null,"ConfigGetterFunction",-1),HL=e("code",null,"removeConfig",-1),jL=e("code",null,"ConfigDeleteFunction",-1),GL=e("code",null,"setConfig",-1),qL=e("code",null,"ConfigSetterFunction",-1),VL=e("code",null,"emit",-1),zL=e("code",null,"EmitCustomMessageFunction",-1),ZL=e("code",null,"invoke",-1),UL=e("code",null,"InvokeFunction",-1),QL=e("code",null,"logger",-1),KL=e("code",null,"Logger",-1),WL=e("code",null,"message",-1),$L=e("code",null,"Readonly",-1),YL=e("code",null,"secrets",-1),JL=e("code",null,"getSecret",-1),XL=e("code",null,"SecretGetterFunction",-1),eO=e("code",null,"removeSecret",-1),tO=e("code",null,"SecretDeleteFunction",-1),nO=e("code",null,"setSecret",-1),oO=e("code",null,"SecretSetterFunction",-1),sO=e("code",null,"startActiveSpan",-1),lO=e("code",null,"name",-1),dO=e("code",null,"string",-1),aO=e("code",null,"opts",-1),iO=e("code",null,"SpanOptions",-1),cO=e("code",null,"context",-1),rO=e("code",null,"undefined",-1),uO=e("code",null,"Context",-1),hO=e("code",null,"fn",-1),_O=e("code",null,"span",-1),pO=e("code",null,"Span",-1),fO=e("code",null,"Promise",-1),gO=e("code",null,"F",-1),mO=e("code",null,"Promise",-1),yO=e("code",null,"F",-1),bO=e("code",null,"states",-1),xO=e("code",null,"getState",-1),vO=e("code",null,"StateGetterFunction",-1),SO=e("code",null,"removeState",-1),TO=e("code",null,"StateDeleteFunction",-1),kO=e("code",null,"setState",-1),CO=e("code",null,"StateSetterFunction",-1),PO=e("code",null,"wrapInSpan",-1),wO=e("code",null,"name",-1),IO=e("code",null,"string",-1),MO=e("code",null,"opts",-1),EO=e("code",null,"SpanOptions",-1),FO=e("code",null,"fn",-1),DO=e("code",null,"span",-1),RO=e("code",null,"Span",-1),BO=e("code",null,"Promise",-1),NO=e("code",null,"F",-1),LO=e("code",null,"context?",-1),OO=e("code",null,"Context",-1),AO=e("code",null,"Promise",-1),HO=e("code",null,"F",-1),jO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),GO={style:{"text-align":"left"}},qO=e("code",null,"getConfig",-1),VO=e("code",null,"ConfigGetterFunction",-1),zO=e("code",null,"removeConfig",-1),ZO=e("code",null,"ConfigDeleteFunction",-1),UO=e("code",null,"setConfig",-1),QO=e("code",null,"ConfigSetterFunction",-1),KO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),WO={style:{"text-align":"left"}},$O=e("code",null,"ConfigGetterFunction",-1),YO=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),JO={style:{"text-align":"left"}},XO=e("code",null,"ConfigDeleteFunction",-1),eA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),tA={style:{"text-align":"left"}},nA=e("code",null,"ConfigSetterFunction",-1),oA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),sA={style:{"text-align":"left"}},lA=e("code",null,"EmitCustomMessageFunction",-1),dA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),aA={style:{"text-align":"left"}},iA=e("code",null,"InvokeFunction",-1),cA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),rA={style:{"text-align":"left"}},uA=e("code",null,"Logger",-1),hA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }>")])],-1),_A=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),pA={style:{"text-align":"left"}},fA=e("code",null,"getSecret",-1),gA=e("code",null,"SecretGetterFunction",-1),mA=e("code",null,"removeSecret",-1),yA=e("code",null,"SecretDeleteFunction",-1),bA=e("code",null,"setSecret",-1),xA=e("code",null,"SecretSetterFunction",-1),vA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),SA={style:{"text-align":"left"}},TA=e("code",null,"SecretGetterFunction",-1),kA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),CA={style:{"text-align":"left"}},PA=e("code",null,"SecretDeleteFunction",-1),wA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),IA={style:{"text-align":"left"}},MA=e("code",null,"SecretSetterFunction",-1),EA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),FA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),DA={style:{"text-align":"left"}},RA=e("code",null,"getState",-1),BA=e("code",null,"StateGetterFunction",-1),NA=e("code",null,"removeState",-1),LA=e("code",null,"StateDeleteFunction",-1),OA=e("code",null,"setState",-1),AA=e("code",null,"StateSetterFunction",-1),HA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),jA={style:{"text-align":"left"}},GA=e("code",null,"StateGetterFunction",-1),qA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),VA={style:{"text-align":"left"}},zA=e("code",null,"StateDeleteFunction",-1),ZA=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),UA={style:{"text-align":"left"}},QA=e("code",null,"StateSetterFunction",-1),KA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),WA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),$A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),JA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),XA=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),eH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),tH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),nH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),oH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),sH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),lH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),dH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),aH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),iH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),cH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),rH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),uH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),hH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),_H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),pH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),fH=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),gH=e("h4",{id:"defined-in-154",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-154","aria-hidden":"true"},"#"),t(" Defined in")],-1),mH={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},yH=e("hr",null,null,-1),bH=e("h3",{id:"getcommanderrormessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommanderrormessagemock","aria-hidden":"true"},"#"),t(" getCommandErrorMessageMock")],-1),xH=e("strong",null,"getCommandErrorMessageMock",-1),vH=e("code",null,"error?",-1),SH=e("code",null,"input?",-1),TH=e("code",null,"commandMessage?",-1),kH=e("code",null,"Readonly",-1),CH=e("code",null,"contentEncoding",-1),PH=e("code",null,'"utf-8"',-1),wH=e("code",null,"contentType",-1),IH=e("code",null,'"application/json"',-1),MH=e("code",null,"correlationId",-1),EH=e("code",null,"string",-1),FH=e("code",null,"eventName?",-1),DH=e("code",null,"string",-1),RH=e("code",null,"id",-1),BH=e("code",null,"string",-1),NH=e("code",null,"isHandledError",-1),LH=e("code",null,"boolean",-1),OH=e("code",null,"messageType",-1),AH=e("code",null,"CommandErrorResponse",-1),HH=e("code",null,"otp?",-1),jH=e("code",null,"string",-1),GH=e("code",null,"payload",-1),qH=e("code",null,"data?",-1),VH=e("code",null,"unknown",-1),zH=e("code",null,"message",-1),ZH=e("code",null,"string",-1),UH=e("code",null,"status",-1),QH=e("code",null,"StatusCode",-1),KH=e("code",null,"principalId?",-1),WH=e("code",null,"string",-1),$H=e("code",null,"receiver",-1),YH=e("code",null,"sender",-1),JH=e("code",null,"tenantId?",-1),XH=e("code",null,"string",-1),ej=e("code",null,"timestamp",-1),tj=e("code",null,"number",-1),nj=e("code",null,"traceId?",-1),oj=e("code",null,"string",-1),sj=e("p",null,"A function that returns a mocked command error response message",-1),lj=e("h4",{id:"parameters-50",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-50","aria-hidden":"true"},"#"),t(" Parameters")],-1),dj=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),aj=e("td",{style:{"text-align":"left"}},[e("code",null,"error?")],-1),ij={style:{"text-align":"left"}},cj=e("code",null,"HandledError",-1),rj=e("code",null,"UnhandledError",-1),uj=e("td",{style:{"text-align":"left"}},"-",-1),hj=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),_j={style:{"text-align":"left"}},pj=e("code",null,"Partial",-1),fj=e("code",null,"contentEncoding",-1),gj=e("code",null,'"utf-8"',-1),mj=e("code",null,"contentType",-1),yj=e("code",null,'"application/json"',-1),bj=e("code",null,"correlationId",-1),xj=e("code",null,"string",-1),vj=e("code",null,"eventName?",-1),Sj=e("code",null,"string",-1),Tj=e("code",null,"id",-1),kj=e("code",null,"string",-1),Cj=e("code",null,"isHandledError",-1),Pj=e("code",null,"boolean",-1),wj=e("code",null,"messageType",-1),Ij=e("code",null,"CommandErrorResponse",-1),Mj=e("code",null,"otp?",-1),Ej=e("code",null,"string",-1),Fj=e("code",null,"payload",-1),Dj=e("code",null,"data?",-1),Rj=e("code",null,"unknown",-1),Bj=e("code",null,"message",-1),Nj=e("code",null,"string",-1),Lj=e("code",null,"status",-1),Oj=e("code",null,"StatusCode",-1),Aj=e("code",null,"principalId?",-1),Hj=e("code",null,"string",-1),jj=e("code",null,"receiver",-1),Gj=e("code",null,"sender",-1),qj=e("code",null,"tenantId?",-1),Vj=e("code",null,"string",-1),zj=e("code",null,"timestamp",-1),Zj=e("code",null,"number",-1),Uj=e("code",null,"traceId?",-1),Qj=e("code",null,"string",-1),Kj=e("td",{style:{"text-align":"left"}},"-",-1),Wj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),$j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),Yj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),Jj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),Xj=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),eG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),tG=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),nG={style:{"text-align":"left"}},oG=e("code",null,"Command",-1),sG=e("td",{style:{"text-align":"left"}},"-",-1),lG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),dG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),aG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),iG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),cG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),rG=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),uG={style:{"text-align":"left"}},hG=e("code",null,"EBMessageAddress",-1),_G=e("td",{style:{"text-align":"left"}},"-",-1),pG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),fG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.tenantId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),gG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),mG=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),yG=e("h4",{id:"returns-57",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-57","aria-hidden":"true"},"#"),t(" Returns")],-1),bG=e("code",null,"Readonly",-1),xG=e("code",null,"contentEncoding",-1),vG=e("code",null,'"utf-8"',-1),SG=e("code",null,"contentType",-1),TG=e("code",null,'"application/json"',-1),kG=e("code",null,"correlationId",-1),CG=e("code",null,"string",-1),PG=e("code",null,"eventName?",-1),wG=e("code",null,"string",-1),IG=e("code",null,"id",-1),MG=e("code",null,"string",-1),EG=e("code",null,"isHandledError",-1),FG=e("code",null,"boolean",-1),DG=e("code",null,"messageType",-1),RG=e("code",null,"CommandErrorResponse",-1),BG=e("code",null,"otp?",-1),NG=e("code",null,"string",-1),LG=e("code",null,"payload",-1),OG=e("code",null,"data?",-1),AG=e("code",null,"unknown",-1),HG=e("code",null,"message",-1),jG=e("code",null,"string",-1),GG=e("code",null,"status",-1),qG=e("code",null,"StatusCode",-1),VG=e("code",null,"principalId?",-1),zG=e("code",null,"string",-1),ZG=e("code",null,"receiver",-1),UG=e("code",null,"sender",-1),QG=e("code",null,"tenantId?",-1),KG=e("code",null,"string",-1),WG=e("code",null,"timestamp",-1),$G=e("code",null,"number",-1),YG=e("code",null,"traceId?",-1),JG=e("code",null,"string",-1),XG=e("h4",{id:"defined-in-155",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-155","aria-hidden":"true"},"#"),t(" Defined in")],-1),eq={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandErrorMessage.mock.ts#L16",target:"_blank",rel:"noopener noreferrer"},tq=e("hr",null,null,-1),nq=e("h3",{id:"getcommandmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandmessagemock","aria-hidden":"true"},"#"),t(" getCommandMessageMock")],-1),oq=e("strong",null,"getCommandMessageMock",-1),sq=e("code",null,"Payload",-1),lq=e("code",null,"Parameter",-1),dq=e("code",null,"input?",-1),aq=e("code",null,"Readonly",-1),iq=e("code",null,"contentEncoding",-1),cq=e("code",null,"string",-1),rq=e("code",null,"contentType",-1),uq=e("code",null,"string",-1),hq=e("code",null,"correlationId",-1),_q=e("code",null,"string",-1),pq=e("code",null,"eventName?",-1),fq=e("code",null,"string",-1),gq=e("code",null,"id",-1),mq=e("code",null,"string",-1),yq=e("code",null,"messageType",-1),bq=e("code",null,"Command",-1),xq=e("code",null,"otp?",-1),vq=e("code",null,"string",-1),Sq=e("code",null,"payload",-1),Tq=e("code",null,"parameter",-1),kq=e("code",null,"Parameter",-1),Cq=e("code",null,"payload",-1),Pq=e("code",null,"Payload",-1),wq=e("code",null,"principalId?",-1),Iq=e("code",null,"string",-1),Mq=e("code",null,"receiver",-1),Eq=e("code",null,"EBMessageAddress",-1),Fq=e("code",null,"sender",-1),Dq=e("code",null,"tenantId?",-1),Rq=e("code",null,"string",-1),Bq=e("code",null,"timestamp",-1),Nq=e("code",null,"number",-1),Lq=e("code",null,"traceId?",-1),Oq=e("code",null,"string",-1),Aq=d('<p>A function that returns a mocked command message.</p><h4 id="type-parameters-45" tabindex="-1"><a class="header-anchor" href="#type-parameters-45" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Payload</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>Parameter</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-51" tabindex="-1"><a class="header-anchor" href="#parameters-51" aria-hidden="true">#</a> Parameters</h4>',4),Hq=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),jq=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),Gq={style:{"text-align":"left"}},qq=e("code",null,"Partial",-1),Vq=e("code",null,"contentEncoding",-1),zq=e("code",null,"string",-1),Zq=e("code",null,"contentType",-1),Uq=e("code",null,"string",-1),Qq=e("code",null,"correlationId",-1),Kq=e("code",null,"string",-1),Wq=e("code",null,"eventName?",-1),$q=e("code",null,"string",-1),Yq=e("code",null,"id",-1),Jq=e("code",null,"string",-1),Xq=e("code",null,"messageType",-1),eV=e("code",null,"Command",-1),tV=e("code",null,"otp?",-1),nV=e("code",null,"string",-1),oV=e("code",null,"payload",-1),sV=e("code",null,"parameter",-1),lV=e("code",null,"Parameter",-1),dV=e("code",null,"payload",-1),aV=e("code",null,"Payload",-1),iV=e("code",null,"principalId?",-1),cV=e("code",null,"string",-1),rV=e("code",null,"receiver",-1),uV=e("code",null,"EBMessageAddress",-1),hV=e("code",null,"sender",-1),_V=e("code",null,"tenantId?",-1),pV=e("code",null,"string",-1),fV=e("code",null,"timestamp",-1),gV=e("code",null,"number",-1),mV=e("code",null,"traceId?",-1),yV=e("code",null,"string",-1),bV=e("code",null,"payload?",-1),xV=e("code",null,"parameter?",-1),vV=e("code",null,"Parameter",-1),SV=e("code",null,"payload?",-1),TV=e("code",null,"Payload",-1),kV=e("h4",{id:"returns-58",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-58","aria-hidden":"true"},"#"),t(" Returns")],-1),CV=e("code",null,"Readonly",-1),PV=e("code",null,"contentEncoding",-1),wV=e("code",null,"string",-1),IV=e("code",null,"contentType",-1),MV=e("code",null,"string",-1),EV=e("code",null,"correlationId",-1),FV=e("code",null,"string",-1),DV=e("code",null,"eventName?",-1),RV=e("code",null,"string",-1),BV=e("code",null,"id",-1),NV=e("code",null,"string",-1),LV=e("code",null,"messageType",-1),OV=e("code",null,"Command",-1),AV=e("code",null,"otp?",-1),HV=e("code",null,"string",-1),jV=e("code",null,"payload",-1),GV=e("code",null,"parameter",-1),qV=e("code",null,"Parameter",-1),VV=e("code",null,"payload",-1),zV=e("code",null,"Payload",-1),ZV=e("code",null,"principalId?",-1),UV=e("code",null,"string",-1),QV=e("code",null,"receiver",-1),KV=e("code",null,"EBMessageAddress",-1),WV=e("code",null,"sender",-1),$V=e("code",null,"tenantId?",-1),YV=e("code",null,"string",-1),JV=e("code",null,"timestamp",-1),XV=e("code",null,"number",-1),ez=e("code",null,"traceId?",-1),tz=e("code",null,"string",-1),nz=e("h4",{id:"defined-in-156",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-156","aria-hidden":"true"},"#"),t(" Defined in")],-1),oz={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},sz=e("hr",null,null,-1),lz=e("h3",{id:"getcommandsuccessmessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcommandsuccessmessagemock","aria-hidden":"true"},"#"),t(" getCommandSuccessMessageMock")],-1),dz=e("strong",null,"getCommandSuccessMessageMock",-1),az=e("code",null,"PayloadType",-1),iz=e("code",null,"payload",-1),cz=e("code",null,"input?",-1),rz=e("code",null,"commandMessage?",-1),uz=e("code",null,"Readonly",-1),hz=e("code",null,"contentEncoding",-1),_z=e("code",null,"string",-1),pz=e("code",null,"contentType",-1),fz=e("code",null,"string",-1),gz=e("code",null,"correlationId",-1),mz=e("code",null,"string",-1),yz=e("code",null,"eventName?",-1),bz=e("code",null,"string",-1),xz=e("code",null,"id",-1),vz=e("code",null,"string",-1),Sz=e("code",null,"messageType",-1),Tz=e("code",null,"CommandSuccessResponse",-1),kz=e("code",null,"otp?",-1),Cz=e("code",null,"string",-1),Pz=e("code",null,"payload",-1),wz=e("code",null,"PayloadType",-1),Iz=e("code",null,"principalId?",-1),Mz=e("code",null,"string",-1),Ez=e("code",null,"receiver",-1),Fz=e("code",null,"sender",-1),Dz=e("code",null,"tenantId?",-1),Rz=e("code",null,"string",-1),Bz=e("code",null,"timestamp",-1),Nz=e("code",null,"number",-1),Lz=e("code",null,"traceId?",-1),Oz=e("code",null,"string",-1),Az=d('<p>A function that returns a mocked command success response message.</p><h4 id="type-parameters-46" tabindex="-1"><a class="header-anchor" href="#type-parameters-46" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-52" tabindex="-1"><a class="header-anchor" href="#parameters-52" aria-hidden="true">#</a> Parameters</h4>',4),Hz=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),jz=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")]),e("td",{style:{"text-align":"left"}},"-")],-1),Gz=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),qz={style:{"text-align":"left"}},Vz=e("code",null,"Partial",-1),zz=e("code",null,"contentEncoding",-1),Zz=e("code",null,"string",-1),Uz=e("code",null,"contentType",-1),Qz=e("code",null,"string",-1),Kz=e("code",null,"correlationId",-1),Wz=e("code",null,"string",-1),$z=e("code",null,"eventName?",-1),Yz=e("code",null,"string",-1),Jz=e("code",null,"id",-1),Xz=e("code",null,"string",-1),eZ=e("code",null,"messageType",-1),tZ=e("code",null,"CommandSuccessResponse",-1),nZ=e("code",null,"otp?",-1),oZ=e("code",null,"string",-1),sZ=e("code",null,"payload",-1),lZ=e("code",null,"PayloadType",-1),dZ=e("code",null,"principalId?",-1),aZ=e("code",null,"string",-1),iZ=e("code",null,"receiver",-1),cZ=e("code",null,"sender",-1),rZ=e("code",null,"tenantId?",-1),uZ=e("code",null,"string",-1),hZ=e("code",null,"timestamp",-1),_Z=e("code",null,"number",-1),pZ=e("code",null,"traceId?",-1),fZ=e("code",null,"string",-1),gZ=e("td",{style:{"text-align":"left"}},"-",-1),mZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),yZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentEncoding")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content encoding of message payload")],-1),bZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.contentType")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"content type of message payload")],-1),xZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.correlationId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"correlation id to know which command response referrs to which command")],-1),vZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.eventName?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"event name for this message")],-1),SZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.id")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"global unique id of message")],-1),TZ=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.messageType")],-1),kZ={style:{"text-align":"left"}},CZ=e("code",null,"Command",-1),PZ=e("td",{style:{"text-align":"left"}},"-",-1),wZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.otp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"stringified Opentelemetry parent trace id")],-1),IZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")]),e("td",{style:{"text-align":"left"}},"-")],-1),MZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.parameter")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),EZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.payload.payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"unknown")]),e("td",{style:{"text-align":"left"}},"-")],-1),FZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.principalId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),DZ=e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.receiver")],-1),RZ={style:{"text-align":"left"}},BZ=e("code",null,"EBMessageAddress",-1),NZ=e("td",{style:{"text-align":"left"}},"-",-1),LZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.sender")]),e("td",{style:{"text-align":"left"}},"{ serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; }"),e("td",{style:{"text-align":"left"}},"-")],-1),OZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.tenantId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"principal id")],-1),AZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.timestamp")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"timestamp of message creation time")],-1),HZ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"commandMessage.traceId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"trace id of message")],-1),jZ=e("h4",{id:"returns-59",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-59","aria-hidden":"true"},"#"),t(" Returns")],-1),GZ=e("code",null,"Readonly",-1),qZ=e("code",null,"contentEncoding",-1),VZ=e("code",null,"string",-1),zZ=e("code",null,"contentType",-1),ZZ=e("code",null,"string",-1),UZ=e("code",null,"correlationId",-1),QZ=e("code",null,"string",-1),KZ=e("code",null,"eventName?",-1),WZ=e("code",null,"string",-1),$Z=e("code",null,"id",-1),YZ=e("code",null,"string",-1),JZ=e("code",null,"messageType",-1),XZ=e("code",null,"CommandSuccessResponse",-1),eU=e("code",null,"otp?",-1),tU=e("code",null,"string",-1),nU=e("code",null,"payload",-1),oU=e("code",null,"PayloadType",-1),sU=e("code",null,"principalId?",-1),lU=e("code",null,"string",-1),dU=e("code",null,"receiver",-1),aU=e("code",null,"sender",-1),iU=e("code",null,"tenantId?",-1),cU=e("code",null,"string",-1),rU=e("code",null,"timestamp",-1),uU=e("code",null,"number",-1),hU=e("code",null,"traceId?",-1),_U=e("code",null,"string",-1),pU=e("h4",{id:"defined-in-157",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-157","aria-hidden":"true"},"#"),t(" Defined in")],-1),fU={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCommandSuccessMessage.mock.ts#L9",target:"_blank",rel:"noopener noreferrer"},gU=d('<hr><h3 id="getcommandtransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getcommandtransformcontextmock" aria-hidden="true">#</a> getCommandTransformContextMock</h3><p>▸ <strong>getCommandTransformContextMock</strong>&lt;<code>MessagePayloadType</code>, <code>MessageParamsType</code>&gt;(<code>payload</code>, <code>parameter</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for command transform function context</p><h4 id="type-parameters-47" tabindex="-1"><a class="header-anchor" href="#type-parameters-47" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MessagePayloadType</code></td><td style="text-align:left;"><code>unknown</code></td></tr><tr><td style="text-align:left;"><code>MessageParamsType</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="parameters-53" tabindex="-1"><a class="header-anchor" href="#parameters-53" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>payload</code></td><td style="text-align:left;"><code>MessagePayloadType</code></td></tr><tr><td style="text-align:left;"><code>parameter</code></td><td style="text-align:left;"><code>MessageParamsType</code></td></tr><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-60" tabindex="-1"><a class="header-anchor" href="#returns-60" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p>',10),mU=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),yU=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),bU={style:{"text-align":"left"}},xU=e("code",null,"configs",-1),vU=e("code",null,"getConfig",-1),SU=e("code",null,"ConfigGetterFunction",-1),TU=e("code",null,"removeConfig",-1),kU=e("code",null,"ConfigDeleteFunction",-1),CU=e("code",null,"setConfig",-1),PU=e("code",null,"ConfigSetterFunction",-1),wU=e("code",null,"logger",-1),IU=e("code",null,"Logger",-1),MU=e("code",null,"message",-1),EU=e("code",null,"Readonly",-1),FU=e("code",null,"secrets",-1),DU=e("code",null,"getSecret",-1),RU=e("code",null,"SecretGetterFunction",-1),BU=e("code",null,"removeSecret",-1),NU=e("code",null,"SecretDeleteFunction",-1),LU=e("code",null,"setSecret",-1),OU=e("code",null,"SecretSetterFunction",-1),AU=e("code",null,"startActiveSpan",-1),HU=e("code",null,"name",-1),jU=e("code",null,"string",-1),GU=e("code",null,"opts",-1),qU=e("code",null,"SpanOptions",-1),VU=e("code",null,"context",-1),zU=e("code",null,"undefined",-1),ZU=e("code",null,"Context",-1),UU=e("code",null,"fn",-1),QU=e("code",null,"span",-1),KU=e("code",null,"Span",-1),WU=e("code",null,"Promise",-1),$U=e("code",null,"F",-1),YU=e("code",null,"Promise",-1),JU=e("code",null,"F",-1),XU=e("code",null,"states",-1),eQ=e("code",null,"getState",-1),tQ=e("code",null,"StateGetterFunction",-1),nQ=e("code",null,"removeState",-1),oQ=e("code",null,"StateDeleteFunction",-1),sQ=e("code",null,"setState",-1),lQ=e("code",null,"StateSetterFunction",-1),dQ=e("code",null,"wrapInSpan",-1),aQ=e("code",null,"name",-1),iQ=e("code",null,"string",-1),cQ=e("code",null,"opts",-1),rQ=e("code",null,"SpanOptions",-1),uQ=e("code",null,"fn",-1),hQ=e("code",null,"span",-1),_Q=e("code",null,"Span",-1),pQ=e("code",null,"Promise",-1),fQ=e("code",null,"F",-1),gQ=e("code",null,"context?",-1),mQ=e("code",null,"Context",-1),yQ=e("code",null,"Promise",-1),bQ=e("code",null,"F",-1),xQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),vQ={style:{"text-align":"left"}},SQ=e("code",null,"getConfig",-1),TQ=e("code",null,"ConfigGetterFunction",-1),kQ=e("code",null,"removeConfig",-1),CQ=e("code",null,"ConfigDeleteFunction",-1),PQ=e("code",null,"setConfig",-1),wQ=e("code",null,"ConfigSetterFunction",-1),IQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),MQ={style:{"text-align":"left"}},EQ=e("code",null,"ConfigGetterFunction",-1),FQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),DQ={style:{"text-align":"left"}},RQ=e("code",null,"ConfigDeleteFunction",-1),BQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),NQ={style:{"text-align":"left"}},LQ=e("code",null,"ConfigSetterFunction",-1),OQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),AQ={style:{"text-align":"left"}},HQ=e("code",null,"Logger",-1),jQ=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Readonly"),t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }>")])],-1),GQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),qQ={style:{"text-align":"left"}},VQ=e("code",null,"getSecret",-1),zQ=e("code",null,"SecretGetterFunction",-1),ZQ=e("code",null,"removeSecret",-1),UQ=e("code",null,"SecretDeleteFunction",-1),QQ=e("code",null,"setSecret",-1),KQ=e("code",null,"SecretSetterFunction",-1),WQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),$Q={style:{"text-align":"left"}},YQ=e("code",null,"SecretGetterFunction",-1),JQ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),XQ={style:{"text-align":"left"}},eK=e("code",null,"SecretDeleteFunction",-1),tK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),nK={style:{"text-align":"left"}},oK=e("code",null,"SecretSetterFunction",-1),sK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),lK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),dK={style:{"text-align":"left"}},aK=e("code",null,"getState",-1),iK=e("code",null,"StateGetterFunction",-1),cK=e("code",null,"removeState",-1),rK=e("code",null,"StateDeleteFunction",-1),uK=e("code",null,"setState",-1),hK=e("code",null,"StateSetterFunction",-1),_K=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),pK={style:{"text-align":"left"}},fK=e("code",null,"StateGetterFunction",-1),gK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),mK={style:{"text-align":"left"}},yK=e("code",null,"StateDeleteFunction",-1),bK=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),xK={style:{"text-align":"left"}},vK=e("code",null,"StateSetterFunction",-1),SK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),TK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),kK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),CK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),PK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),wK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),IK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),MK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),EK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),FK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),DK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),RK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),HK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GK=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qK=e("h4",{id:"defined-in-158",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-158","aria-hidden":"true"},"#"),t(" Defined in")],-1),VK={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getCommandTransformContext.mock.ts#L12",target:"_blank",rel:"noopener noreferrer"},zK=e("hr",null,null,-1),ZK=e("h3",{id:"getcustommessagemessagemock",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcustommessagemessagemock","aria-hidden":"true"},"#"),t(" getCustomMessageMessageMock")],-1),UK=e("strong",null,"getCustomMessageMessageMock",-1),QK=e("code",null,"PayloadType",-1),KK=e("code",null,"eventName",-1),WK=e("code",null,"payload",-1),$K=e("code",null,"input?",-1),YK=e("code",null,"Readonly",-1),JK=e("code",null,"contentEncoding",-1),XK=e("code",null,"string",-1),eW=e("code",null,"contentType",-1),tW=e("code",null,"string",-1),nW=e("code",null,"correlationId?",-1),oW=e("code",null,"string",-1),sW=e("code",null,"eventName",-1),lW=e("code",null,"string",-1),dW=e("code",null,"id",-1),aW=e("code",null,"string",-1),iW=e("code",null,"messageType",-1),cW=e("code",null,"CustomMessage",-1),rW=e("code",null,"otp?",-1),uW=e("code",null,"string",-1),hW=e("code",null,"payload?",-1),_W=e("code",null,"PayloadType",-1),pW=e("code",null,"principalId?",-1),fW=e("code",null,"string",-1),gW=e("code",null,"receiver?",-1),mW=e("code",null,"EBMessageAddress",-1),yW=e("code",null,"sender",-1),bW=e("code",null,"tenantId?",-1),xW=e("code",null,"string",-1),vW=e("code",null,"timestamp",-1),SW=e("code",null,"number",-1),TW=e("code",null,"traceId?",-1),kW=e("code",null,"string",-1),CW=d('<p>A function that returns a mocked custom message.</p><h4 id="type-parameters-48" tabindex="-1"><a class="header-anchor" href="#type-parameters-48" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PayloadType</code></td></tr></tbody></table><h4 id="parameters-54" tabindex="-1"><a class="header-anchor" href="#parameters-54" aria-hidden="true">#</a> Parameters</h4>',4),PW=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),wW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"eventName")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),IW=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"payload")]),e("td",{style:{"text-align":"left"}},[e("code",null,"PayloadType")])],-1),MW=e("td",{style:{"text-align":"left"}},[e("code",null,"input?")],-1),EW={style:{"text-align":"left"}},FW=e("code",null,"Partial",-1),DW=e("code",null,"contentEncoding",-1),RW=e("code",null,"string",-1),BW=e("code",null,"contentType",-1),NW=e("code",null,"string",-1),LW=e("code",null,"correlationId?",-1),OW=e("code",null,"string",-1),AW=e("code",null,"eventName",-1),HW=e("code",null,"string",-1),jW=e("code",null,"id",-1),GW=e("code",null,"string",-1),qW=e("code",null,"messageType",-1),VW=e("code",null,"CustomMessage",-1),zW=e("code",null,"otp?",-1),ZW=e("code",null,"string",-1),UW=e("code",null,"payload?",-1),QW=e("code",null,"PayloadType",-1),KW=e("code",null,"principalId?",-1),WW=e("code",null,"string",-1),$W=e("code",null,"receiver?",-1),YW=e("code",null,"EBMessageAddress",-1),JW=e("code",null,"sender",-1),XW=e("code",null,"tenantId?",-1),e$=e("code",null,"string",-1),t$=e("code",null,"timestamp",-1),n$=e("code",null,"number",-1),o$=e("code",null,"traceId?",-1),s$=e("code",null,"string",-1),l$=e("h4",{id:"returns-61",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-61","aria-hidden":"true"},"#"),t(" Returns")],-1),d$=e("code",null,"Readonly",-1),a$=e("code",null,"contentEncoding",-1),i$=e("code",null,"string",-1),c$=e("code",null,"contentType",-1),r$=e("code",null,"string",-1),u$=e("code",null,"correlationId?",-1),h$=e("code",null,"string",-1),_$=e("code",null,"eventName",-1),p$=e("code",null,"string",-1),f$=e("code",null,"id",-1),g$=e("code",null,"string",-1),m$=e("code",null,"messageType",-1),y$=e("code",null,"CustomMessage",-1),b$=e("code",null,"otp?",-1),x$=e("code",null,"string",-1),v$=e("code",null,"payload?",-1),S$=e("code",null,"PayloadType",-1),T$=e("code",null,"principalId?",-1),k$=e("code",null,"string",-1),C$=e("code",null,"receiver?",-1),P$=e("code",null,"EBMessageAddress",-1),w$=e("code",null,"sender",-1),I$=e("code",null,"tenantId?",-1),M$=e("code",null,"string",-1),E$=e("code",null,"timestamp",-1),F$=e("code",null,"number",-1),D$=e("code",null,"traceId?",-1),R$=e("code",null,"string",-1),B$=e("h4",{id:"defined-in-159",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-159","aria-hidden":"true"},"#"),t(" Defined in")],-1),N$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/messages/getCustomMessage.mock.ts#L15",target:"_blank",rel:"noopener noreferrer"},L$=d('<hr><h3 id="geteventbridgemock" tabindex="-1"><a class="header-anchor" href="#geteventbridgemock" aria-hidden="true">#</a> getEventBridgeMock</h3><p>▸ <strong>getEventBridgeMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the eventBridge and stubs the methods</p><h4 id="parameters-55" tabindex="-1"><a class="header-anchor" href="#parameters-55" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-62" tabindex="-1"><a class="header-anchor" href="#returns-62" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>EventBridge mocked</p>',9),O$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),A$=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),H$={style:{"text-align":"left"}},j$=e("code",null,"EventBridge",-1),G$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"string"),t(", "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">>")])],-1),q$=e("h4",{id:"defined-in-160",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-160","aria-hidden":"true"},"#"),t(" Defined in")],-1),V$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getEventBridge.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},z$=d('<hr><h3 id="getloggermock" tabindex="-1"><a class="header-anchor" href="#getloggermock" aria-hidden="true">#</a> getLoggerMock</h3><p>▸ <strong>getLoggerMock</strong>(<code>sandbox?</code>): <code>Object</code></p><p>Mocks the logger and methods are stubs</p><h4 id="parameters-56" tabindex="-1"><a class="header-anchor" href="#parameters-56" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sandbox?</code></td><td style="text-align:left;"><code>SinonSandbox</code></td></tr></tbody></table><h4 id="returns-63" tabindex="-1"><a class="header-anchor" href="#returns-63" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><p>logger mocked</p>',9),Z$=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),U$=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),Q$={style:{"text-align":"left"}},K$=e("code",null,"Logger",-1),W$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),$$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Y$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),J$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),X$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),eY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),tY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),nY=e("h4",{id:"defined-in-161",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-161","aria-hidden":"true"},"#"),t(" Defined in")],-1),oY={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getLogger.mock.ts#L10",target:"_blank",rel:"noopener noreferrer"},sY=d('<hr><h3 id="getsubscriptioncontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptioncontextmock" aria-hidden="true">#</a> getSubscriptionContextMock</h3><p>▸ <strong>getSubscriptionContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription function context</p><h4 id="parameters-57" tabindex="-1"><a class="header-anchor" href="#parameters-57" aria-hidden="true">#</a> Parameters</h4>',5),lY=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),dY=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),aY={style:{"text-align":"left"}},iY=e("code",null,"EBMessage",-1),cY=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),rY=e("h4",{id:"returns-64",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-64","aria-hidden":"true"},"#"),t(" Returns")],-1),uY=e("p",null,[e("code",null,"Object")],-1),hY=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),_Y=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),pY={style:{"text-align":"left"}},fY=e("code",null,"configs",-1),gY=e("code",null,"getConfig",-1),mY=e("code",null,"ConfigGetterFunction",-1),yY=e("code",null,"removeConfig",-1),bY=e("code",null,"ConfigDeleteFunction",-1),xY=e("code",null,"setConfig",-1),vY=e("code",null,"ConfigSetterFunction",-1),SY=e("code",null,"emit",-1),TY=e("code",null,"EmitCustomMessageFunction",-1),kY=e("code",null,"invoke",-1),CY=e("code",null,"InvokeFunction",-1),PY=e("code",null,"logger",-1),wY=e("code",null,"Logger",-1),IY=e("code",null,"message",-1),MY=e("code",null,"Readonly",-1),EY=e("code",null,"EBMessage",-1),FY=e("code",null,"secrets",-1),DY=e("code",null,"getSecret",-1),RY=e("code",null,"SecretGetterFunction",-1),BY=e("code",null,"removeSecret",-1),NY=e("code",null,"SecretDeleteFunction",-1),LY=e("code",null,"setSecret",-1),OY=e("code",null,"SecretSetterFunction",-1),AY=e("code",null,"startActiveSpan",-1),HY=e("code",null,"name",-1),jY=e("code",null,"string",-1),GY=e("code",null,"opts",-1),qY=e("code",null,"SpanOptions",-1),VY=e("code",null,"context",-1),zY=e("code",null,"undefined",-1),ZY=e("code",null,"Context",-1),UY=e("code",null,"fn",-1),QY=e("code",null,"span",-1),KY=e("code",null,"Span",-1),WY=e("code",null,"Promise",-1),$Y=e("code",null,"F",-1),YY=e("code",null,"Promise",-1),JY=e("code",null,"F",-1),XY=e("code",null,"states",-1),eJ=e("code",null,"getState",-1),tJ=e("code",null,"StateGetterFunction",-1),nJ=e("code",null,"removeState",-1),oJ=e("code",null,"StateDeleteFunction",-1),sJ=e("code",null,"setState",-1),lJ=e("code",null,"StateSetterFunction",-1),dJ=e("code",null,"wrapInSpan",-1),aJ=e("code",null,"name",-1),iJ=e("code",null,"string",-1),cJ=e("code",null,"opts",-1),rJ=e("code",null,"SpanOptions",-1),uJ=e("code",null,"fn",-1),hJ=e("code",null,"span",-1),_J=e("code",null,"Span",-1),pJ=e("code",null,"Promise",-1),fJ=e("code",null,"F",-1),gJ=e("code",null,"context?",-1),mJ=e("code",null,"Context",-1),yJ=e("code",null,"Promise",-1),bJ=e("code",null,"F",-1),xJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),vJ={style:{"text-align":"left"}},SJ=e("code",null,"getConfig",-1),TJ=e("code",null,"ConfigGetterFunction",-1),kJ=e("code",null,"removeConfig",-1),CJ=e("code",null,"ConfigDeleteFunction",-1),PJ=e("code",null,"setConfig",-1),wJ=e("code",null,"ConfigSetterFunction",-1),IJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),MJ={style:{"text-align":"left"}},EJ=e("code",null,"ConfigGetterFunction",-1),FJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),DJ={style:{"text-align":"left"}},RJ=e("code",null,"ConfigDeleteFunction",-1),BJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),NJ={style:{"text-align":"left"}},LJ=e("code",null,"ConfigSetterFunction",-1),OJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.emit")],-1),AJ={style:{"text-align":"left"}},HJ=e("code",null,"EmitCustomMessageFunction",-1),jJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.invoke")],-1),GJ={style:{"text-align":"left"}},qJ=e("code",null,"InvokeFunction",-1),VJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),zJ={style:{"text-align":"left"}},ZJ=e("code",null,"Logger",-1),UJ=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),QJ={style:{"text-align":"left"}},KJ=e("code",null,"Readonly",-1),WJ=e("code",null,"EBMessage",-1),$J=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),YJ={style:{"text-align":"left"}},JJ=e("code",null,"getSecret",-1),XJ=e("code",null,"SecretGetterFunction",-1),eX=e("code",null,"removeSecret",-1),tX=e("code",null,"SecretDeleteFunction",-1),nX=e("code",null,"setSecret",-1),oX=e("code",null,"SecretSetterFunction",-1),sX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),lX={style:{"text-align":"left"}},dX=e("code",null,"SecretGetterFunction",-1),aX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),iX={style:{"text-align":"left"}},cX=e("code",null,"SecretDeleteFunction",-1),rX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),uX={style:{"text-align":"left"}},hX=e("code",null,"SecretSetterFunction",-1),_X=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),pX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),fX={style:{"text-align":"left"}},gX=e("code",null,"getState",-1),mX=e("code",null,"StateGetterFunction",-1),yX=e("code",null,"removeState",-1),bX=e("code",null,"StateDeleteFunction",-1),xX=e("code",null,"setState",-1),vX=e("code",null,"StateSetterFunction",-1),SX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),TX={style:{"text-align":"left"}},kX=e("code",null,"StateGetterFunction",-1),CX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),PX={style:{"text-align":"left"}},wX=e("code",null,"StateDeleteFunction",-1),IX=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),MX={style:{"text-align":"left"}},EX=e("code",null,"StateSetterFunction",-1),FX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),DX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"emit"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"invoke"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),RX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.emit")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),BX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),NX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),LX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),OX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.invoke")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),AX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),HX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),jX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),GX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),qX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),VX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),zX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),ZX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),UX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),QX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),KX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),WX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),$X=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),YX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),JX=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),XX=e("h4",{id:"defined-in-162",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-162","aria-hidden":"true"},"#"),t(" Defined in")],-1),eee={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"},tee=d('<hr><h3 id="getsubscriptiontransformcontextmock" tabindex="-1"><a class="header-anchor" href="#getsubscriptiontransformcontextmock" aria-hidden="true">#</a> getSubscriptionTransformContextMock</h3><p>▸ <strong>getSubscriptionTransformContextMock</strong>(<code>message</code>, <code>sandbox?</code>): <code>Object</code></p><p>A function that returns a mock object for subscription transform function context</p><h4 id="parameters-58" tabindex="-1"><a class="header-anchor" href="#parameters-58" aria-hidden="true">#</a> Parameters</h4>',5),nee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),oee=e("td",{style:{"text-align":"left"}},[e("code",null,"message")],-1),see={style:{"text-align":"left"}},lee=e("code",null,"EBMessage",-1),dee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"sandbox?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonSandbox")])],-1),aee=e("h4",{id:"returns-65",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-65","aria-hidden":"true"},"#"),t(" Returns")],-1),iee=e("p",null,[e("code",null,"Object")],-1),cee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ree=e("td",{style:{"text-align":"left"}},[e("code",null,"mock")],-1),uee={style:{"text-align":"left"}},hee=e("code",null,"configs",-1),_ee=e("code",null,"getConfig",-1),pee=e("code",null,"ConfigGetterFunction",-1),fee=e("code",null,"removeConfig",-1),gee=e("code",null,"ConfigDeleteFunction",-1),mee=e("code",null,"setConfig",-1),yee=e("code",null,"ConfigSetterFunction",-1),bee=e("code",null,"logger",-1),xee=e("code",null,"Logger",-1),vee=e("code",null,"message",-1),See=e("code",null,"Readonly",-1),Tee=e("code",null,"EBMessage",-1),kee=e("code",null,"secrets",-1),Cee=e("code",null,"getSecret",-1),Pee=e("code",null,"SecretGetterFunction",-1),wee=e("code",null,"removeSecret",-1),Iee=e("code",null,"SecretDeleteFunction",-1),Mee=e("code",null,"setSecret",-1),Eee=e("code",null,"SecretSetterFunction",-1),Fee=e("code",null,"startActiveSpan",-1),Dee=e("code",null,"name",-1),Ree=e("code",null,"string",-1),Bee=e("code",null,"opts",-1),Nee=e("code",null,"SpanOptions",-1),Lee=e("code",null,"context",-1),Oee=e("code",null,"undefined",-1),Aee=e("code",null,"Context",-1),Hee=e("code",null,"fn",-1),jee=e("code",null,"span",-1),Gee=e("code",null,"Span",-1),qee=e("code",null,"Promise",-1),Vee=e("code",null,"F",-1),zee=e("code",null,"Promise",-1),Zee=e("code",null,"F",-1),Uee=e("code",null,"states",-1),Qee=e("code",null,"getState",-1),Kee=e("code",null,"StateGetterFunction",-1),Wee=e("code",null,"removeState",-1),$ee=e("code",null,"StateDeleteFunction",-1),Yee=e("code",null,"setState",-1),Jee=e("code",null,"StateSetterFunction",-1),Xee=e("code",null,"wrapInSpan",-1),ete=e("code",null,"name",-1),tte=e("code",null,"string",-1),nte=e("code",null,"opts",-1),ote=e("code",null,"SpanOptions",-1),ste=e("code",null,"fn",-1),lte=e("code",null,"span",-1),dte=e("code",null,"Span",-1),ate=e("code",null,"Promise",-1),ite=e("code",null,"F",-1),cte=e("code",null,"context?",-1),rte=e("code",null,"Context",-1),ute=e("code",null,"Promise",-1),hte=e("code",null,"F",-1),_te=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs")],-1),pte={style:{"text-align":"left"}},fte=e("code",null,"getConfig",-1),gte=e("code",null,"ConfigGetterFunction",-1),mte=e("code",null,"removeConfig",-1),yte=e("code",null,"ConfigDeleteFunction",-1),bte=e("code",null,"setConfig",-1),xte=e("code",null,"ConfigSetterFunction",-1),vte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.getConfig")],-1),Ste={style:{"text-align":"left"}},Tte=e("code",null,"ConfigGetterFunction",-1),kte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.removeConfig")],-1),Cte={style:{"text-align":"left"}},Pte=e("code",null,"ConfigDeleteFunction",-1),wte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.configs.setConfig")],-1),Ite={style:{"text-align":"left"}},Mte=e("code",null,"ConfigSetterFunction",-1),Ete=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.logger")],-1),Fte={style:{"text-align":"left"}},Dte=e("code",null,"Logger",-1),Rte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.message")],-1),Bte={style:{"text-align":"left"}},Nte=e("code",null,"Readonly",-1),Lte=e("code",null,"EBMessage",-1),Ote=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets")],-1),Ate={style:{"text-align":"left"}},Hte=e("code",null,"getSecret",-1),jte=e("code",null,"SecretGetterFunction",-1),Gte=e("code",null,"removeSecret",-1),qte=e("code",null,"SecretDeleteFunction",-1),Vte=e("code",null,"setSecret",-1),zte=e("code",null,"SecretSetterFunction",-1),Zte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.getSecret")],-1),Ute={style:{"text-align":"left"}},Qte=e("code",null,"SecretGetterFunction",-1),Kte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.removeSecret")],-1),Wte={style:{"text-align":"left"}},$te=e("code",null,"SecretDeleteFunction",-1),Yte=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.secrets.setSecret")],-1),Jte={style:{"text-align":"left"}},Xte=e("code",null,"SecretSetterFunction",-1),ene=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"context"),t(": "),e("code",null,"undefined"),t(" | "),e("code",null,"Context"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">) => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),tne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states")],-1),nne={style:{"text-align":"left"}},one=e("code",null,"getState",-1),sne=e("code",null,"StateGetterFunction",-1),lne=e("code",null,"removeState",-1),dne=e("code",null,"StateDeleteFunction",-1),ane=e("code",null,"setState",-1),ine=e("code",null,"StateSetterFunction",-1),cne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.getState")],-1),rne={style:{"text-align":"left"}},une=e("code",null,"StateGetterFunction",-1),hne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.removeState")],-1),_ne={style:{"text-align":"left"}},pne=e("code",null,"StateDeleteFunction",-1),fne=e("td",{style:{"text-align":"left"}},[e("code",null,"mock.states.setState")],-1),gne={style:{"text-align":"left"}},mne=e("code",null,"StateSetterFunction",-1),yne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"mock.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[t("<F>("),e("code",null,"name"),t(": "),e("code",null,"string"),t(", "),e("code",null,"opts"),t(": "),e("code",null,"SpanOptions"),t(", "),e("code",null,"fn"),t(": ("),e("code",null,"span"),t(": "),e("code",null,"Span"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">, "),e("code",null,"context?"),t(": "),e("code",null,"Context"),t(") => "),e("code",null,"Promise"),t("<"),e("code",null,"F"),t(">")])],-1),bne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"getConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"getState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"logger"),t(": { "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> } = logger.stubs; "),e("code",null,"removeConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"removeState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setConfig"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setSecret"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"setState"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"startActiveSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"wrapInSpan"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),xne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),vne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Sne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.getState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Tne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger")]),e("td",{style:{"text-align":"left"}},[t("{ "),e("code",null,"debug"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"error"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"fatal"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"info"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"trace"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> ; "),e("code",null,"warn"),t(": "),e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t("> }")])],-1),kne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.debug")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Cne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Pne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.fatal")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),wne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.info")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ine=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.trace")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Mne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.logger.warn")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ene=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Fne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Dne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.removeState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Rne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setConfig")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Bne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setSecret")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Nne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.setState")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Lne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.startActiveSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),One=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"stubs.wrapInSpan")]),e("td",{style:{"text-align":"left"}},[e("code",null,"SinonStub"),t("<"),e("code",null,"any"),t("[], "),e("code",null,"any"),t(">")])],-1),Ane=e("h4",{id:"defined-in-163",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-163","aria-hidden":"true"},"#"),t(" Defined in")],-1),Hne={href:"https://github.com/sebastianwessel/purista/blob/master/packages/core/src/mocks/getSubscriptionTransformContext.mock.ts#L11",target:"_blank",rel:"noopener noreferrer"};function jne(Gne,qne){const o=a("RouterLink"),l=a("ExternalLinkIcon");return c(),r("div",null,[e("p",null,[n(o,{to:"/api/"},{default:s(()=>[t("PURISTA API")]),_:1}),t(" / "),n(o,{to:"/api/modules.html"},{default:s(()=>[t("Modules")]),_:1}),t(" / @purista/core")]),h,_,p,f,g,e("p",null,[t("It contains the builders, classes & types and some helper functions. For easier testing of commands and subscriptions, the package contains different mock creation helper based on "),e("a",m,[t("jest"),n(l)]),t(" and "),e("a",y,[t("sinon"),n(l)])]),e("p",null,[t("Learn PURIST at "),e("a",b,[t("purista.dev"),n(l)])]),x,v,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[t("EBMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.EventBridgeEventNames.html"},{default:s(()=>[t("EventBridgeEventNames")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanName.html"},{default:s(()=>[t("PuristaSpanName")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.PuristaSpanTag.html"},{default:s(()=>[t("PuristaSpanTag")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[t("StatusCode")]),_:1})]),e("li",null,[n(o,{to:"/api/enums/purista_core.StoreType.html"},{default:s(()=>[t("StoreType")]),_:1})])]),S,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultLogger.html"},{default:s(()=>[t("DefaultLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.GenericEventEmitter.html"},{default:s(()=>[t("GenericEventEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[t("HandledError")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.HttpClient.html"},{default:s(()=>[t("HttpClient")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[t("Logger")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[t("UnhandledError")]),_:1})])]),T,e("ul",null,[e("li",null,[n(o,{to:"/api/interfaces/purista_core.IEmitter.html"},{default:s(()=>[t("IEmitter")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ILogger.html"},{default:s(()=>[t("ILogger")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.OpenApiZodAny.html"},{default:s(()=>[t("OpenApiZodAny")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.RestClient.html"},{default:s(()=>[t("RestClient")]),_:1})])]),k,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#authcredentials"},{default:s(()=>[t("AuthCredentials")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[t("BrokerHeaderCommandMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercommandresponsemsg"},{default:s(()=>[t("BrokerHeaderCommandResponseMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[t("BrokerHeaderCustomMsg")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[t("Command")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[t("CommandDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[t("CommandDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#complete"},{default:s(()=>[t("Complete")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#compressionmethod"},{default:s(()=>[t("CompressionMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[t("ContentType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[t("ContextBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[t("CorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[t("CustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultconfigstoreconfig"},{default:s(()=>[t("DefaultConfigStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaulteventbridgeconfig"},{default:s(()=>[t("DefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultsecretstoreconfig"},{default:s(()=>[t("DefaultSecretStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#defaultstatestoreconfig"},{default:s(()=>[t("DefaultStateStoreConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[t("DefinitionEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[t("EBMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[t("EBMessageAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[t("EBMessageBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[t("EBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[t("EBMessageSenderAddress")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[t("EmitCustomMessageFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#errorresponsepayload"},{default:s(()=>[t("ErrorResponsePayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[t("EventBridgeAdapterEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeconfig"},{default:s(()=>[t("EventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[t("EventBridgeCustomEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeevents"},{default:s(()=>[t("EventBridgeEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventkey"},{default:s(()=>[t("EventKey")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[t("EventMap")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientconfig"},{default:s(()=>[t("HttpClientConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpclientrequestoptions"},{default:s(()=>[t("HttpClientRequestOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#httpexposedservicemeta"},{default:s(()=>[t("HttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[t("InfoInvokeTimeout")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoinvoketimeoutpayload"},{default:s(()=>[t("InfoInvokeTimeoutPayload")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[t("InfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[t("InfoMessageType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[t("InfoServiceBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[t("InfoServiceDrain")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[t("InfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[t("InfoServiceInit")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[t("InfoServiceNotReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[t("InfoServiceReady")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[t("InfoServiceShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[t("InfoSubscriptionError")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[t("InstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[t("InvokeFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#logfnparamtype"},{default:s(()=>[t("LogFnParamType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[t("LogLevelName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggeroptions"},{default:s(()=>[t("LoggerOptions")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#loggerstubs"},{default:s(()=>[t("LoggerStubs")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#newable"},{default:s(()=>[t("Newable")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#pendiginvocation"},{default:s(()=>[t("PendigInvocation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[t("Prettify")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[t("PrincipalId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[t("QueryParameter")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceevents"},{default:s(()=>[t("ServiceEvents")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[t("ServiceInfoType")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[t("ShutdownEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#storebaseconfig"},{default:s(()=>[t("StoreBaseConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[t("SubscriptionDefinitionList")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[t("SubscriptionDefinitionMetadataBase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[t("SubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#supportedhttpmethod"},{default:s(()=>[t("SupportedHttpMethod")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[t("TenantId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[t("TraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[t("addPrefixToObject")]),_:1})])]),C,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#min_content_size_for_compression"},{default:s(()=>[t("MIN_CONTENT_SIZE_FOR_COMPRESSION")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceinfovalidator"},{default:s(()=>[t("ServiceInfoValidator")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#infomessagetypes"},{default:s(()=>[t("infoMessageTypes")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#puristaversion"},{default:s(()=>[t("puristaVersion")]),_:1})])]),P,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#extendapi"},{default:s(()=>[t("extendApi")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#generateschema"},{default:s(()=>[t("generateSchema")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandfunctionwithvalidation"},{default:s(()=>[t("getCommandFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaulteventbridgeconfig"},{default:s(()=>[t("getDefaultEventBridgeConfig")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getdefaultloglevel"},{default:s(()=>[t("getDefaultLogLevel")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewsubscriptionstorageentry"},{default:s(()=>[t("getNewSubscriptionStorageEntry")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionfunctionwithvalidation"},{default:s(()=>[t("getSubscriptionFunctionWithValidation")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gettimeoutpromise"},{default:s(()=>[t("getTimeoutPromise")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultconfigstore"},{default:s(()=>[t("initDefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultsecretstore"},{default:s(()=>[t("initDefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initdefaultstatestore"},{default:s(()=>[t("initDefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#initlogger"},{default:s(()=>[t("initLogger")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscustommessage"},{default:s(()=>[t("isCustomMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ishttpexposedservicemeta"},{default:s(()=>[t("isHttpExposedServiceMeta")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfomessage"},{default:s(()=>[t("isInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isinfoservicefunctionadded"},{default:s(()=>[t("isInfoServiceFunctionAdded")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#ismessagematchingsubscription"},{default:s(()=>[t("isMessageMatchingSubscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#throwifnotvalidmessage"},{default:s(()=>[t("throwIfNotValidMessage")]),_:1})])]),w,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.CommandDefinitionBuilder.html"},{default:s(()=>[t("CommandDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[t("CommandAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[t("CommandBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[t("CommandDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[t("CommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[t("CommandFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[t("CommandFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[t("CommandFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[t("CommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[t("CommandSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[t("CommandTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[t("CommandTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[t("CommandTransformOutputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommand"},{default:s(()=>[t("isCommand")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommanderrorresponse"},{default:s(()=>[t("isCommandErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandresponse"},{default:s(()=>[t("isCommandResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#iscommandsuccessresponse"},{default:s(()=>[t("isCommandSuccessResponse")]),_:1})])]),I,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultEventBridge.html"},{default:s(()=>[t("DefaultEventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.EventBridgeBaseClass.html"},{default:s(()=>[t("EventBridgeBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[t("EventBridge")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[t("EventBridgeEventsBasic")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandqueuename"},{default:s(()=>[t("getCommandQueueName")]),_:1})])]),M,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttocamelcase"},{default:s(()=>[t("convertToCamelCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttokebabcase"},{default:s(()=>[t("convertToKebabCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttopascalcase"},{default:s(()=>[t("convertToPascalCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#converttosnakecase"},{default:s(()=>[t("convertToSnakeCase")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createerrorresponse"},{default:s(()=>[t("createErrorResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createinfomessage"},{default:s(()=>[t("createInfoMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#createsuccessresponse"},{default:s(()=>[t("createSuccessResponse")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#deserializeotp"},{default:s(()=>[t("deserializeOtp")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcleanedmessage"},{default:s(()=>[t("getCleanedMessage")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geterrormessageforcode"},{default:s(()=>[t("getErrorMessageForCode")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewcorrelationid"},{default:s(()=>[t("getNewCorrelationId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewebmessageid"},{default:s(()=>[t("getNewEBMessageId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewinstanceid"},{default:s(()=>[t("getNewInstanceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getnewtraceid"},{default:s(()=>[t("getNewTraceId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptionqueuename"},{default:s(()=>[t("getSubscriptionQueueName")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getuniqueid"},{default:s(()=>[t("getUniqueId")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#gracefulshutdown"},{default:s(()=>[t("gracefulShutdown")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#isdevelop"},{default:s(()=>[t("isDevelop")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serializeotp"},{default:s(()=>[t("serializeOtp")]),_:1})])]),E,e("ul",null,[e("li",null,[n(o,{to:"/api/enums/purista_core.ServiceEventsNames.html"},{default:s(()=>[t("ServiceEventsNames")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[t("Service")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.ServiceBuilder.html"},{default:s(()=>[t("ServiceBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[t("ServiceClass")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[t("ServiceConstructorInput")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[t("ServiceEventsInternal")]),_:1})])]),F,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.ConfigStoreBaseClass.html"},{default:s(()=>[t("ConfigStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[t("DefaultConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[t("DefaultSecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[t("DefaultStateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.SecretStoreBaseClass.html"},{default:s(()=>[t("SecretStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/purista_core.StateStoreBaseClass.html"},{default:s(()=>[t("StateStoreBaseClass")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[t("ConfigStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[t("SecretStore")]),_:1})]),e("li",null,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[t("StateStore")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[t("ConfigDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[t("ConfigGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[t("ConfigSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[t("SecretDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[t("SecretGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[t("SecretSetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[t("StateDeleteFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[t("StateGetterFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[t("StateSetterFunction")]),_:1})])]),D,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/purista_core.SubscriptionDefinitionBuilder.html"},{default:s(()=>[t("SubscriptionDefinitionBuilder")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscription"},{default:s(()=>[t("Subscription")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[t("SubscriptionAfterGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[t("SubscriptionBeforeGuardHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[t("SubscriptionDefinition")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[t("SubscriptionFunction")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[t("SubscriptionFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[t("SubscriptionFunctionContextEnhancements")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[t("SubscriptionTransformFunctionContext")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[t("SubscriptionTransformInputHook")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[t("SubscriptionTransformOutputHook")]),_:1})])]),R,e("ul",null,[e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandcontextmock"},{default:s(()=>[t("getCommandContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommanderrormessagemock"},{default:s(()=>[t("getCommandErrorMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandmessagemock"},{default:s(()=>[t("getCommandMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandsuccessmessagemock"},{default:s(()=>[t("getCommandSuccessMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcommandtransformcontextmock"},{default:s(()=>[t("getCommandTransformContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getcustommessagemessagemock"},{default:s(()=>[t("getCustomMessageMessageMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#geteventbridgemock"},{default:s(()=>[t("getEventBridgeMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getloggermock"},{default:s(()=>[t("getLoggerMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptioncontextmock"},{default:s(()=>[t("getSubscriptionContextMock")]),_:1})]),e("li",null,[n(o,{to:"/api/modules/purista_core.html#getsubscriptiontransformcontextmock"},{default:s(()=>[t("getSubscriptionTransformContextMock")]),_:1})])]),B,e("p",null,[e("a",N,[t("HttpClient/types/AuthCredentials.ts:4"),n(l)])]),L,O,e("p",null,[t("Ƭ "),A,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[H]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercustommsg"},{default:s(()=>[j]),_:1}),t(" & { "),G,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[q]),_:1}),t(" ; "),V,t(": "),z,t(" ; "),Z,t(": "),U,t(" ; "),Q,t(": "),K,t(" }>")]),W,e("p",null,[e("a",$,[t("core/types/BrokerHeaderCommandMsg.ts:5"),n(l)])]),Y,J,e("p",null,[t("Ƭ "),X,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ee]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#brokerheadercommandmsg"},{default:s(()=>[te]),_:1}),t(" & { "),ne,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[oe]),_:1}),t(" }>")]),se,e("p",null,[e("a",le,[t("core/types/BrokerHeaderCommandResponseMsg.ts:5"),n(l)])]),de,ae,ie,ce,e("table",null,[re,e("tbody",null,[ue,e("tr",null,[he,e("td",_e,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[pe]),_:1})])]),e("tr",null,[fe,e("td",ge,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[me]),_:1})])]),e("tr",null,[ye,e("td",be,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[xe]),_:1})])]),ve,Se,Te,e("tr",null,[ke,e("td",Ce,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[Pe]),_:1})])])])]),we,e("p",null,[e("a",Ie,[t("core/types/BrokerHeaderCustomMsg.ts:6"),n(l)])]),Me,Ee,e("p",null,[t("Ƭ "),Fe,t("<"),De,t(", "),Re,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Be]),_:1}),t("<{ "),Ne,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Le]),_:1}),t(" ; "),Oe,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Ae]),_:1}),t(" ; "),He,t(": { "),je,t(": "),Ge,t(" ; "),qe,t(": "),Ve,t(" } ; "),ze,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Ze]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ue]),_:1}),t(">")]),Qe,e("p",null,[e("a",Ke,[t("core/types/commandType/Command.ts:18"),n(l)])]),We,$e,e("p",null,[t("Ƭ "),Ye,t("<"),Je,t(">: "),n(o,{to:"/api/modules/purista_core.html#commanddefinition"},{default:s(()=>[Xe]),_:1}),t("<"),et,t(", "),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[tt]),_:1}),t(", "),nt,t(", "),ot,t(", "),st,t(", "),lt,t(", "),dt,t(", "),at,t(">[]")]),it,e("table",null,[ct,e("tbody",null,[e("tr",null,[rt,e("td",ut,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[ht]),_:1})])])])]),_t,e("p",null,[e("a",pt,[t("core/types/commandType/CommandDefinitionList.ts:12"),n(l)])]),ft,gt,mt,yt,e("table",null,[bt,e("tbody",null,[e("tr",null,[xt,e("td",vt,[t("{ "),St,t(": "),Tt,t(" ; "),kt,t(": "),Ct,t(" ; "),Pt,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[wt]),_:1}),t(" ; "),It,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Mt]),_:1}),t(" ; "),Et,t(": "),Ft,t(" ; "),Dt,t(": "),Rt,t(" ; "),Bt,t(": "),Nt,t(" ; "),Lt,t(": "),Ot,t(" }")])]),At,Ht,e("tr",null,[jt,e("td",Gt,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[qt]),_:1})])]),e("tr",null,[Vt,e("td",zt,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Zt]),_:1})])]),Ut,Qt,Kt,Wt])]),$t,e("p",null,[e("a",Yt,[t("core/types/commandType/CommandDefinitionMetadataBase.ts:5"),n(l)])]),Jt,e("p",null,[e("a",Xt,[t("core/types/Complete.ts:20"),n(l)])]),en,e("p",null,[e("a",tn,[t("core/HttpServer/types/CompressionMethod.ts:1"),n(l)])]),nn,e("p",null,[e("a",on,[t("core/types/ContentType.ts:6"),n(l)])]),sn,ln,dn,an,cn,e("table",null,[rn,e("tbody",null,[e("tr",null,[un,e("td",hn,[t("{ "),_n,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[pn]),_:1}),t(" ; "),fn,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[gn]),_:1}),t(" ; "),mn,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[yn]),_:1}),t(" }")]),bn]),e("tr",null,[xn,e("td",vn,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Sn]),_:1})]),Tn]),e("tr",null,[kn,e("td",Cn,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[Pn]),_:1})]),wn]),e("tr",null,[In,e("td",Mn,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[En]),_:1})]),Fn]),e("tr",null,[Dn,e("td",Rn,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Bn]),_:1})]),Nn]),e("tr",null,[Ln,e("td",On,[t("{ "),An,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Hn]),_:1}),t(" ; "),jn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Gn]),_:1}),t(" ; "),qn,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Vn]),_:1}),t(" }")]),zn]),e("tr",null,[Zn,e("td",Un,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Qn]),_:1})]),Kn]),e("tr",null,[Wn,e("td",$n,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Yn]),_:1})]),Jn]),e("tr",null,[Xn,e("td",eo,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[to]),_:1})]),no]),oo,e("tr",null,[so,e("td",lo,[t("{ "),ao,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[io]),_:1}),t(" ; "),co,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[ro]),_:1}),t(" ; "),uo,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ho]),_:1}),t(" }")]),_o]),e("tr",null,[po,e("td",fo,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[go]),_:1})]),mo]),e("tr",null,[yo,e("td",bo,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[xo]),_:1})]),vo]),e("tr",null,[So,e("td",To,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ko]),_:1})]),Co]),Po])]),wo,e("p",null,[e("a",Io,[t("core/types/ContextBase.ts:12"),n(l)])]),Mo,Eo,Fo,Do,Ro,e("p",null,[e("a",Bo,[t("core/types/CorrelationId.ts:2"),n(l)])]),No,Lo,e("p",null,[t("Ƭ "),Oo,t("<"),Ao,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Ho]),_:1}),t("<{ "),jo,t(": "),Go,t(" ; "),qo,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[Vo]),_:1}),t(" ; "),zo,t(": "),Zo,t(" ; "),Uo,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Qo]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[Ko]),_:1}),t(">")]),Wo,e("p",null,[e("a",$o,[t("core/types/CustomMessage.ts:11"),n(l)])]),Yo,e("p",null,[e("a",Jo,[t("DefaultConfigStore/types/DefaultConfigStoreConfig.ts:1"),n(l)])]),Xo,e("p",null,[e("a",es,[t("DefaultEventBridge/types/DefaultEventBridgeConfig.ts:4"),n(l)])]),ts,e("p",null,[e("a",ns,[t("DefaultSecretStore/types/DefaultSecretStoreConfig.ts:1"),n(l)])]),os,e("p",null,[e("a",ss,[t("DefaultStateStore/types/DefaultStateStoreConfig.ts:1"),n(l)])]),ls,e("p",null,[e("a",ds,[t("core/types/DefinitionEventBridgeConfig.ts:6"),n(l)])]),as,is,e("p",null,[t("Ƭ "),cs,t(": "),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[rs]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#commandresponse"},{default:s(()=>[us]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[hs]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[_s]),_:1})]),ps,fs,e("p",null,[e("a",gs,[t("core/types/EBMessage.ts:8"),n(l)])]),ms,ys,bs,xs,vs,e("table",null,[Ss,e("tbody",null,[e("tr",null,[Ts,e("td",ks,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[Cs]),_:1})]),Ps]),ws,Is,Ms])]),Es,e("p",null,[e("a",Fs,[t("core/types/EBMessageAddress.ts:6"),n(l)])]),Ds,Rs,Bs,Ns,Ls,e("table",null,[Os,e("tbody",null,[As,e("tr",null,[Hs,e("td",js,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Gs]),_:1})]),qs]),e("tr",null,[Vs,e("td",zs,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Zs]),_:1})]),Us]),Qs,e("tr",null,[Ks,e("td",Ws,[n(o,{to:"/api/modules/purista_core.html#ebmessageid"},{default:s(()=>[$s]),_:1})]),Ys]),Js,e("tr",null,[Xs,e("td",el,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[tl]),_:1})]),nl]),e("tr",null,[ol,e("td",sl,[n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[ll]),_:1})]),dl]),e("tr",null,[al,e("td",il,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[cl]),_:1})]),rl]),ul,e("tr",null,[hl,e("td",_l,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[pl]),_:1})]),fl])])]),gl,e("p",null,[e("a",ml,[t("core/types/EBMessageBase.ts:12"),n(l)])]),yl,bl,xl,vl,Sl,e("p",null,[e("a",Tl,[t("core/types/EBMessageId.ts:4"),n(l)])]),kl,Cl,e("p",null,[t("Ƭ "),Pl,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[wl]),_:1}),t("<"),Il,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Ml]),_:1}),t(", "),El,t("> & "),Fl,t("<"),Dl,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Rl]),_:1}),t(", "),Bl,t(">>>")]),Nl,Ll,e("p",null,[e("a",Ol,[t("core/types/EBMessageSenderAddress.ts:7"),n(l)])]),Al,Hl,e("p",null,[t("Ƭ "),jl,t(": <Payload>("),Gl,t(": "),ql,t(", "),Vl,t(": "),zl,t(", "),Zl,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[Ul]),_:1}),t(", "),Ql,t(": "),Kl,t(") => "),Wl,t("<"),$l,t(">")]),Yl,e("table",null,[Jl,e("tbody",null,[Xl,ed,e("tr",null,[td,e("td",nd,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[od]),_:1})])]),sd])]),ld,e("p",null,[e("a",dd,[t("core/types/EmitCustomMessageFunction.ts:10"),n(l)])]),ad,id,cd,rd,ud,e("table",null,[hd,e("tbody",null,[_d,pd,e("tr",null,[fd,e("td",gd,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[md]),_:1})]),yd]),e("tr",null,[bd,e("td",xd,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[vd]),_:1})]),Sd])])]),Td,e("p",null,[e("a",kd,[t("core/types/ErrorResponsePayload.ts:7"),n(l)])]),Cd,e("p",null,[e("a",Pd,[t("core/EventBridge/types/EventBridgeEvents.ts:42"),n(l)])]),wd,Id,e("p",null,[t("Ƭ "),Md,t("<"),Ed,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Fd]),_:1}),t("<{ "),Dd,t(": "),Rd,t(" ; "),Bd,t(": "),Nd,t(" ; "),Ld,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Od]),_:1}),t(" ; "),Ad,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Hd]),_:1}),t(" ; "),jd,t(": "),Gd,t(" } & "),qd,t(">")]),Vd,e("p",null,[e("a",zd,[t("core/EventBridge/types/EventBridgeConfig.ts:10"),n(l)])]),Zd,e("p",null,[e("a",Ud,[t("core/EventBridge/types/EventBridgeEvents.ts:37"),n(l)])]),Qd,Kd,e("p",null,[t("Ƭ "),Wd,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$d]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeeventsbasic"},{default:s(()=>[Yd]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Jd]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgeadapterevents"},{default:s(()=>[Xd]),_:1}),t(", "),ea,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[ta]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#eventbridgecustomevents"},{default:s(()=>[na]),_:1}),t(", "),oa,t(">>")]),sa,e("p",null,[e("a",la,[t("core/EventBridge/types/EventBridgeEvents.ts:47"),n(l)])]),da,e("table",null,[aa,e("tbody",null,[e("tr",null,[ia,e("td",ca,[t("extends "),n(o,{to:"/api/modules/purista_core.html#eventmap"},{default:s(()=>[ra]),_:1})])])])]),ua,e("p",null,[e("a",ha,[t("core/types/GenericEventEmitter.ts:5"),n(l)])]),_a,e("p",null,[e("a",pa,[t("core/types/GenericEventEmitter.ts:3"),n(l)])]),fa,ga,e("p",null,[t("Ƭ "),ma,t("<"),ya,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ba]),_:1}),t("<{ "),xa,t(": "),va,t(" ; "),Sa,t(": { "),Ta,t(": "),ka,t(" ; "),Ca,t(": "),Pa,t(" } ; "),wa,t(": "),Ia,t(" ; "),Ma,t(": "),Ea,t("<"),Fa,t(", "),Da,t("> ; "),Ra,t(": "),Ba,t(" ; "),Na,t(": "),La,t(" ; "),Oa,t(": "),Aa,t(" ; "),Ha,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[ja]),_:1}),t(" ; "),Ga,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[qa]),_:1}),t(" ; "),Va,t(": "),za,t(" ; "),Za,t(": "),Ua,t(" } & "),Qa,t(">")]),Ka,e("p",null,[e("a",Wa,[t("HttpClient/types/HttpClientConfig.ts:9"),n(l)])]),$a,e("p",null,[e("a",Ya,[t("HttpClient/types/HttpClientRequestOptions.ts:4"),n(l)])]),Ja,Xa,e("p",null,[t("Ƭ "),ei,t("<"),ti,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[ni]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[oi]),_:1}),t(" & { "),si,t(": { "),li,t(": { "),di,t(": "),ai,t(" | "),ii,t(" | "),ci,t(" | "),ri,t(" | "),ui,t(" ; "),hi,t(": { "),_i,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[pi]),_:1}),t("[] ; "),fi,t(": "),gi,t(" ; "),mi,t(": "),yi,t(" ; "),bi,t(": "),xi,t(" ; "),vi,t(": "),n(o,{to:"/api/modules/purista_core.html#queryparameter"},{default:s(()=>[Si]),_:1}),t("<"),Ti,t(">[] ; "),ki,t(": "),Ci,t(" ; "),Pi,t(": "),wi,t("[] } ; "),Ii,t(": "),Mi,t(" } } }>")]),Ei,e("p",null,[e("a",Fi,[t("core/HttpServer/types/HttpExposedServiceMeta.ts:4"),n(l)])]),Di,Ri,e("p",null,[t("Ƭ "),Bi,t(": { "),Ni,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Li]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Oi]),_:1})]),Ai,e("p",null,[e("a",Hi,[t("core/types/infoType/InfoInvokeTimeout.ts:22"),n(l)])]),ji,Gi,qi,Vi,e("table",null,[zi,e("tbody",null,[e("tr",null,[Zi,e("td",Ui,[n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[Qi]),_:1})])]),Ki,Wi,$i,Yi,Ji,Xi,ec,tc,nc,e("tr",null,[oc,e("td",sc,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[lc]),_:1})])])])]),dc,e("p",null,[e("a",ac,[t("core/types/infoType/InfoInvokeTimeout.ts:6"),n(l)])]),ic,cc,e("p",null,[t("Ƭ "),rc,t(": "),n(o,{to:"/api/modules/purista_core.html#infoservicedrain"},{default:s(()=>[uc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicefunctionadded"},{default:s(()=>[hc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceinit"},{default:s(()=>[_c]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoservicenotready"},{default:s(()=>[pc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceready"},{default:s(()=>[fc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoserviceshutdown"},{default:s(()=>[gc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infoinvoketimeout"},{default:s(()=>[mc]),_:1}),t(" | "),n(o,{to:"/api/modules/purista_core.html#infosubscriptionerror"},{default:s(()=>[yc]),_:1})]),bc,e("p",null,[e("a",xc,[t("core/types/infoType/InfoMessage.ts:11"),n(l)])]),vc,Sc,e("p",null,[t("Ƭ "),Tc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[kc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[Cc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[Pc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[wc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[Ic]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Mc]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoinvoketimeout"},{default:s(()=>[Ec]),_:1}),t(" | "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Fc]),_:1})]),Dc,e("p",null,[e("a",Rc,[t("core/types/infoType/InfoMessage.ts:21"),n(l)])]),Bc,Nc,e("p",null,[t("Ƭ "),Lc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Oc]),_:1}),t("<{ "),Ac,t(": "),Hc,t(" ; "),jc,t(": "),Gc,t(" ; "),qc,t(": "),Vc,t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[zc]),_:1}),t(">")]),Zc,e("p",null,[e("a",Uc,[t("core/types/infoType/InfoServiceBase.ts:4"),n(l)])]),Qc,Kc,e("p",null,[t("Ƭ "),Wc,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$c]),_:1}),t("<{ "),Yc,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicedrain"},{default:s(()=>[Jc]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Xc]),_:1}),t(">")]),er,e("p",null,[e("a",tr,[t("core/types/infoType/InfoServiceDrain.ts:5"),n(l)])]),nr,or,e("p",null,[t("Ƭ "),sr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[lr]),_:1}),t("<{ "),dr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicefunctionadded"},{default:s(()=>[ar]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[ir]),_:1}),t(">")]),cr,e("p",null,[e("a",rr,[t("core/types/infoType/InfoServiceFunctionAdded.ts:5"),n(l)])]),ur,hr,e("p",null,[t("Ƭ "),_r,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[pr]),_:1}),t("<{ "),fr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceinit"},{default:s(()=>[gr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[mr]),_:1}),t(">")]),yr,e("p",null,[e("a",br,[t("core/types/infoType/InfoServiceInit.ts:5"),n(l)])]),xr,vr,e("p",null,[t("Ƭ "),Sr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Tr]),_:1}),t("<{ "),kr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoservicenotready"},{default:s(()=>[Cr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Pr]),_:1}),t(">")]),wr,e("p",null,[e("a",Ir,[t("core/types/infoType/InfoServiceNotReady.ts:5"),n(l)])]),Mr,Er,e("p",null,[t("Ƭ "),Fr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Dr]),_:1}),t("<{ "),Rr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceready"},{default:s(()=>[Br]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Nr]),_:1}),t(">")]),Lr,e("p",null,[e("a",Or,[t("core/types/infoType/InfoServiceReady.ts:5"),n(l)])]),Ar,Hr,e("p",null,[t("Ƭ "),jr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[Gr]),_:1}),t("<{ "),qr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infoserviceshutdown"},{default:s(()=>[Vr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[zr]),_:1}),t(">")]),Zr,e("p",null,[e("a",Ur,[t("core/types/infoType/InfoServiceShutdown.ts:5"),n(l)])]),Qr,Kr,e("p",null,[t("Ƭ "),Wr,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[$r]),_:1}),t("<{ "),Yr,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#infosubscriptionerror"},{default:s(()=>[Jr]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#infoservicebase"},{default:s(()=>[Xr]),_:1}),t(">")]),eu,e("p",null,[e("a",tu,[t("core/types/infoType/InfoSubscriptionError.ts:5"),n(l)])]),nu,ou,su,lu,du,e("p",null,[e("a",au,[t("core/types/InstanceId.ts:2"),n(l)])]),iu,cu,e("p",null,[t("Ƭ "),ru,t(": <InvokeResponseType, PayloadType, ParameterType>("),uu,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[hu]),_:1}),t(", "),_u,t(": "),pu,t(", "),fu,t(": "),gu,t(") => "),mu,t("<"),yu,t(">")]),bu,e("table",null,[xu,e("tbody",null,[e("tr",null,[vu,e("td",Su,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Tu]),_:1})])]),ku,Cu])]),Pu,e("p",null,[e("a",wu,[t("core/types/InvokeFunction.ts:21"),n(l)])]),Iu,e("p",null,[e("a",Mu,[t("core/types/Logger.ts:19"),n(l)])]),Eu,e("p",null,[e("a",Fu,[t("core/types/LogLevelName.ts:1"),n(l)])]),Du,Ru,Bu,Nu,e("table",null,[Lu,e("tbody",null,[Ou,e("tr",null,[Au,e("td",Hu,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[ju]),_:1})])]),Gu,e("tr",null,[qu,e("td",Vu,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[zu]),_:1})])]),Zu,Uu,Qu,Ku,e("tr",null,[Wu,e("td",$u,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[Yu]),_:1})])]),e("tr",null,[Ju,e("td",Xu,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[eh]),_:1})])])])]),th,e("p",null,[e("a",nh,[t("core/types/Logger.ts:6"),n(l)])]),oh,e("p",null,[e("a",sh,[t("mocks/getLogger.mock.ts:41"),n(l)])]),lh,dh,e("p",null,[t("Ƭ "),ah,t("<"),ih,t(", "),ch,t(">: ("),rh,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[uh]),_:1}),t("<"),hh,t(">) => "),_h]),ph,e("table",null,[fh,e("tbody",null,[e("tr",null,[gh,e("td",mh,[n(o,{to:"/api/modules/purista_core.html#serviceconstructorinput"},{default:s(()=>[yh]),_:1}),t("<"),bh,t(">")])])])]),xh,vh,Sh,e("p",null,[e("a",Th,[t("ServiceBuilder/ServiceBuilder.impl.ts:28"),n(l)])]),kh,Ch,Ph,wh,e("table",null,[Ih,e("tbody",null,[e("tr",null,[Mh,e("td",Eh,[t("("),Fh,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[Dh]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[Rh]),_:1}),t(") => "),Bh])]),Nh])]),Lh,e("p",null,[e("a",Oh,[t("DefaultEventBridge/types/PendingInvocations.ts:3"),n(l)])]),Ah,e("p",null,[e("a",Hh,[t("core/types/Prettify.ts:1"),n(l)])]),jh,Gh,qh,Vh,zh,e("p",null,[e("a",Zh,[t("core/types/PrincipalId.ts:2"),n(l)])]),Uh,e("p",null,[e("a",Qh,[t("core/HttpServer/types/QueryParameter.ts:1"),n(l)])]),Kh,Wh,e("p",null,[t("Ƭ "),$h,t(": "),n(o,{to:"/api/modules/purista_core.html#serviceeventsinternal"},{default:s(()=>[Yh]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[Jh]),_:1}),t("<"),Xh,t(", "),e_,t("> & "),n(o,{to:"/api/modules/purista_core.html#addprefixtoobject"},{default:s(()=>[t_]),_:1}),t("<"),n_,t(", "),o_,t(">")]),s_,l_,d_,e("p",null,[e("a",a_,[t("core/types/ServiceEvents.ts:98"),n(l)])]),i_,e("p",null,[e("a",c_,[t("core/types/infoType/ServiceInfoType.ts:4"),n(l)])]),r_,e("p",null,[e("a",u_,[t("helper/types/ShutdownEntry.ts:4"),n(l)])]),h_,__,e("p",null,[t("Ƭ "),p_,t("<"),f_,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[g_]),_:1}),t("<{ "),m_,t(": "),y_,t(" ; "),b_,t(": "),x_,t(" ; "),v_,t(": "),S_,t(" ; "),T_,t(": "),n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[k_]),_:1}),t(" ; "),C_,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[P_]),_:1}),t(" } & "),w_,t(">")]),I_,e("p",null,[e("a",M_,[t("core/types/StoreBaseConfig.ts:8"),n(l)])]),E_,F_,e("p",null,[t("Ƭ "),D_,t("<"),R_,t(">: "),n(o,{to:"/api/modules/purista_core.html#subscriptiondefinition"},{default:s(()=>[B_]),_:1}),t("<"),N_,t(", "),L_,t(", "),O_,t(", "),A_,t(", "),H_,t(">[]")]),j_,e("table",null,[G_,e("tbody",null,[e("tr",null,[q_,e("td",V_,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[z_]),_:1})])])])]),Z_,e("p",null,[e("a",U_,[t("core/types/subscription/SubscriptionDefinitionList.ts:11"),n(l)])]),Q_,K_,W_,$_,e("table",null,[Y_,e("tbody",null,[e("tr",null,[J_,e("td",X_,[t("{ "),ep,t(": "),tp,t(" ; "),np,t(": "),op,t(" ; "),sp,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[lp]),_:1}),t(" ; "),dp,t(": "),n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[ap]),_:1}),t(" ; "),ip,t(": "),cp,t(" ; "),rp,t(": "),up,t(" ; "),hp,t(": "),_p,t(" }")])]),pp,fp,e("tr",null,[gp,e("td",mp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[yp]),_:1})])]),e("tr",null,[bp,e("td",xp,[n(o,{to:"/api/modules/purista_core.html#contenttype"},{default:s(()=>[vp]),_:1})])]),Sp,Tp,kp])]),Cp,e("p",null,[e("a",Pp,[t("core/types/subscription/SubscriptionDefinitionMetadataBase.ts:5"),n(l)])]),wp,Ip,Mp,Ep,e("table",null,[Fp,e("tbody",null,[e("tr",null,[Dp,e("td",Rp,[t("("),Bp,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Np]),_:1}),t(") => "),Lp,t("<"),Op,t("<"),n(o,{to:"/api/modules/purista_core.html#custommessage"},{default:s(()=>[Ap]),_:1}),t(", "),Hp,t(" | "),jp,t("> | "),Gp,t(">")])]),qp,Vp,e("tr",null,[zp,e("td",Zp,[t("("),Up,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[Qp]),_:1}),t(") => "),Kp])]),Wp,$p,Yp,Jp,Xp,e1,t1,n1,o1,s1])]),l1,e("p",null,[e("a",d1,[t("DefaultEventBridge/types/SubscriptionStorageEntry.ts:3"),n(l)])]),a1,e("p",null,[e("a",i1,[t("core/HttpServer/types/SupportedHttpMethod.ts:2"),n(l)])]),c1,r1,u1,h1,_1,e("p",null,[e("a",p1,[t("core/types/TenantId.ts:2"),n(l)])]),f1,g1,m1,y1,b1,e("p",null,[e("a",x1,[t("core/types/TraceId.ts:4"),n(l)])]),v1,e("p",null,[e("a",S1,[t("helper/getTimeoutPromise.impl.ts:9"),n(l)])]),T1,k1,e("p",null,[t("▸ "),C1,t("("),P1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[w1]),_:1})]),I1,e("table",null,[M1,e("tbody",null,[E1,e("tr",null,[F1,e("td",D1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[R1]),_:1})])])])]),B1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultConfigStore.html"},{default:s(()=>[N1]),_:1})]),L1,e("p",null,[e("a",O1,[t("DefaultConfigStore/initDefaultConfigStore.impl.ts:4"),n(l)])]),A1,H1,e("p",null,[t("▸ "),j1,t("("),G1,t("): "),n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[q1]),_:1})]),V1,e("table",null,[z1,e("tbody",null,[Z1,e("tr",null,[U1,e("td",Q1,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[K1]),_:1})])])])]),W1,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultSecretStore.html"},{default:s(()=>[$1]),_:1})]),Y1,e("p",null,[e("a",J1,[t("DefaultSecretStore/initDefaultSecretStore.impl.ts:4"),n(l)])]),X1,ef,e("p",null,[t("▸ "),tf,t("("),nf,t("): "),n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[of]),_:1})]),sf,e("table",null,[lf,e("tbody",null,[df,e("tr",null,[af,e("td",cf,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[rf]),_:1})])])])]),uf,e("p",null,[n(o,{to:"/api/classes/purista_core.DefaultStateStore.html"},{default:s(()=>[hf]),_:1})]),_f,e("p",null,[e("a",pf,[t("DefaultStateStore/initDefaultStateStore.impl.ts:4"),n(l)])]),ff,gf,e("p",null,[t("▸ "),mf,t("("),yf,t(", "),bf,t("): "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[xf]),_:1})]),vf,Sf,e("table",null,[Tf,e("tbody",null,[e("tr",null,[kf,e("td",Cf,[n(o,{to:"/api/modules/purista_core.html#loglevelname"},{default:s(()=>[Pf]),_:1})])]),wf])]),If,e("p",null,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Mf]),_:1})]),Ef,e("p",null,[e("a",Ff,[t("DefaultLogger/initLogger.impl.ts:13"),n(l)])]),Df,Rf,Bf,Nf,Lf,e("table",null,[Of,e("tbody",null,[e("tr",null,[Af,e("td",Hf,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[jf]),_:1})]),Gf])])]),qf,Vf,zf,Zf,e("p",null,[e("a",Uf,[t("core/types/isCustomMessage.impl.ts:10"),n(l)])]),Qf,e("p",null,[e("a",Kf,[t("core/HttpServer/types/isHttpExposedServiceMeta.impl.ts:8"),n(l)])]),Wf,$f,Yf,Jf,e("table",null,[Xf,e("tbody",null,[e("tr",null,[eg,e("td",tg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[ng]),_:1})])])])]),og,sg,lg,e("p",null,[e("a",dg,[t("core/types/infoType/isInfoMessage.impl.ts:4"),n(l)])]),ag,ig,cg,rg,e("table",null,[ug,e("tbody",null,[e("tr",null,[hg,e("td",_g,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[pg]),_:1})])])])]),fg,gg,mg,e("p",null,[e("a",yg,[t("core/types/infoType/isInfoServiceFunctionAdded.impl.ts:5"),n(l)])]),bg,e("table",null,[xg,e("tbody",null,[e("tr",null,[vg,e("td",Sg,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Tg]),_:1})])]),e("tr",null,[kg,e("td",Cg,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Pg]),_:1})])]),e("tr",null,[wg,e("td",Ig,[n(o,{to:"/api/modules/purista_core.html#subscriptionstorageentry"},{default:s(()=>[Mg]),_:1})])])])]),Eg,Fg,Dg,e("p",null,[e("a",Rg,[t("DefaultEventBridge/isMessageMatchingSubscription.impl.ts:4"),n(l)])]),Bg,e("p",null,[e("a",Ng,[t("helper/throwIfNotValidMessage.impl.ts:10"),n(l)])]),Lg,e("table",null,[Og,e("tbody",null,[e("tr",null,[Ag,e("td",Hg,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[jg]),_:1})])]),Gg,qg,Vg,zg,Zg,Ug])]),Qg,e("p",null,[e("a",Kg,[t("CommandDefinitionBuilder/CommandDefinitionBuilder.impl.ts:31"),n(l)])]),Wg,e("p",null,[t("Ƭ "),$g,t("<"),Yg,t(", "),Jg,t(", "),Xg,t(", "),em,t(", "),tm,t(", "),nm,t(">: ("),om,t(": "),sm,t(", "),lm,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[dm]),_:1}),t("<"),am,t(", "),im,t(">, "),cm,t(": "),rm,t("<"),um,t(">, "),hm,t(": "),_m,t("<"),pm,t(">, "),fm,t(": "),gm,t("<"),mm,t(">) => "),ym,t("<"),bm,t(">")]),xm,e("table",null,[vm,e("tbody",null,[e("tr",null,[Sm,e("td",Tm,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[km]),_:1})])]),Cm,Pm,wm,Im,Mm])]),Em,e("table",null,[Fm,e("tbody",null,[Dm,e("tr",null,[Rm,e("td",Bm,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Nm]),_:1}),t("<"),Lm,t(", "),Om,t(">")])]),Am,Hm,jm])]),Gm,qm,Vm,e("p",null,[e("a",zm,[t("core/types/commandType/CommandAfterGuardHook.ts:10"),n(l)])]),Zm,Um,e("p",null,[t("Ƭ "),Qm,t("<"),Km,t(", "),Wm,t(", "),$m,t(", "),Ym,t(", "),Jm,t(">: ("),Xm,t(": "),ey,t(", "),ty,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[ny]),_:1}),t("<"),oy,t(", "),sy,t(">, "),ly,t(": "),dy,t("<"),ay,t(">, "),iy,t(": "),cy,t("<"),ry,t(">) => "),uy,t("<"),hy,t(">")]),_y,e("table",null,[py,e("tbody",null,[e("tr",null,[fy,e("td",gy,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[my]),_:1})])]),yy,by,xy,vy])]),Sy,e("table",null,[Ty,e("tbody",null,[ky,e("tr",null,[Cy,e("td",Py,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[wy]),_:1}),t("<"),Iy,t(", "),My,t(">")])]),Ey,Fy])]),Dy,Ry,By,e("p",null,[e("a",Ny,[t("core/types/commandType/CommandBeforeGuardHook.ts:11"),n(l)])]),Ly,e("table",null,[Oy,e("tbody",null,[e("tr",null,[Ay,e("td",Hy,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[jy]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Gy]),_:1})])]),e("tr",null,[qy,e("td",Vy,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionmetadatabase"},{default:s(()=>[zy]),_:1})])]),Zy,Uy,Qy,Ky,Wy,$y])]),Yy,e("table",null,[Jy,e("tbody",null,[e("tr",null,[Xy,e("td",eb,[n(o,{to:"/api/modules/purista_core.html#commandfunction"},{default:s(()=>[tb]),_:1}),t("<"),nb,t(", "),ob,t(", "),sb,t(", "),lb,t(", "),db,t(", "),ab,t(">")]),ib]),cb,rb,e("tr",null,[ub,e("td",hb,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[_b]),_:1})]),pb]),fb,e("tr",null,[gb,e("td",mb,[t("{ "),yb,t(": "),bb,t("<"),xb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[vb]),_:1}),t("<"),Sb,t(", "),Tb,t(", "),kb,t(", "),Cb,t(", "),Pb,t(", "),wb,t(">> ; "),Ib,t(": "),Mb,t("<"),Eb,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[Fb]),_:1}),t("<"),Db,t(", "),Rb,t(", "),Bb,t(", "),Nb,t(", "),Lb,t(">> ; "),Ob,t(": { "),Ab,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Hb]),_:1}),t("<"),jb,t(", "),Gb,t(", "),qb,t("> ; "),Vb,t(": "),zb,t(" ; "),Zb,t(": "),Ub,t(" } ; "),Qb,t(": { "),Kb,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Wb]),_:1}),t("<"),$b,t(", "),Yb,t(", "),Jb,t(", "),Xb,t(", "),ex,t("> ; "),tx,t(": "),nx,t(" } }")]),ox]),e("tr",null,[sx,e("td",lx,[dx,t("<"),ax,t(", "),n(o,{to:"/api/modules/purista_core.html#commandafterguardhook"},{default:s(()=>[ix]),_:1}),t("<"),cx,t(", "),rx,t(", "),ux,t(", "),hx,t(", "),_x,t(", "),px,t(">>")]),fx]),e("tr",null,[gx,e("td",mx,[yx,t("<"),bx,t(", "),n(o,{to:"/api/modules/purista_core.html#commandbeforeguardhook"},{default:s(()=>[xx]),_:1}),t("<"),vx,t(", "),Sx,t(", "),Tx,t(", "),kx,t(", "),Cx,t(">>")]),Px]),e("tr",null,[wx,e("td",Ix,[t("{ "),Mx,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Ex]),_:1}),t("<"),Fx,t(", "),Dx,t(", "),Rx,t("> ; "),Bx,t(": "),Nx,t(" ; "),Lx,t(": "),Ox,t(" }")]),Ax]),e("tr",null,[Hx,e("td",jx,[n(o,{to:"/api/modules/purista_core.html#commandtransforminputhook"},{default:s(()=>[Gx]),_:1}),t("<"),qx,t(", "),Vx,t(", "),zx,t(">")]),Zx]),Ux,Qx,e("tr",null,[Kx,e("td",Wx,[t("{ "),$x,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[Yx]),_:1}),t("<"),Jx,t(", "),Xx,t(", "),e3,t(", "),t3,t(", "),n3,t("> ; "),o3,t(": "),s3,t(" }")]),l3]),e("tr",null,[d3,e("td",a3,[n(o,{to:"/api/modules/purista_core.html#commandtransformoutputhook"},{default:s(()=>[i3]),_:1}),t("<"),c3,t(", "),r3,t(", "),u3,t(", "),h3,t(", "),_3,t(">")]),p3]),f3,g3])]),m3,e("p",null,[e("a",y3,[t("core/types/commandType/CommandDefinition.ts:17"),n(l)])]),b3,x3,e("p",null,[t("Ƭ "),v3,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[S3]),_:1}),t("<{ "),T3,t(": "),k3,t(" ; "),C3,t(": "),P3,t(" ; "),w3,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[I3]),_:1}),t(" ; "),M3,t(": "),E3,t(" ; "),F3,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[D3]),_:1}),t(" ; "),R3,t(": { "),B3,t(": "),N3,t(" ; "),L3,t(": "),O3,t(" ; "),A3,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[H3]),_:1}),t(" } ; "),j3,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[G3]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[q3]),_:1}),t(">")]),V3,z3,e("p",null,[e("a",Z3,[t("core/types/commandType/CommandErrorResponse.ts:13"),n(l)])]),U3,Q3,e("p",null,[t("Ƭ "),K3,t("<"),W3,t(", "),$3,t(", "),Y3,t(", "),J3,t(", "),X3,t(", "),ev,t(">: ("),tv,t(": "),nv,t(", "),ov,t(": "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[sv]),_:1}),t("<"),lv,t(", "),dv,t(">, "),av,t(": "),iv,t("<"),cv,t(">, "),rv,t(": "),uv,t("<"),hv,t(">) => "),_v,t("<"),pv,t(">")]),fv,e("table",null,[gv,e("tbody",null,[e("tr",null,[mv,e("td",yv,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[bv]),_:1})])]),xv,vv,Sv,Tv,kv])]),Cv,e("table",null,[Pv,e("tbody",null,[wv,e("tr",null,[Iv,e("td",Mv,[n(o,{to:"/api/modules/purista_core.html#commandfunctioncontext"},{default:s(()=>[Ev]),_:1}),t("<"),Fv,t(", "),Dv,t(">")])]),Rv,Bv])]),Nv,Lv,Ov,e("p",null,[e("a",Av,[t("core/types/commandType/CommandFunction.ts:9"),n(l)])]),Hv,jv,e("p",null,[t("Ƭ "),Gv,t("<"),qv,t(", "),Vv,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[zv]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[Zv]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#commandfunctioncontextenhancements"},{default:s(()=>[Uv]),_:1}),t("<"),Qv,t(", "),Kv,t(">>")]),Wv,e("p",null,[e("a",$v,[t("core/types/commandType/CommandFunctionContext.ts:47"),n(l)])]),Yv,e("table",null,[Jv,e("tbody",null,[e("tr",null,[Xv,e("td",e2,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[t2]),_:1})]),n2]),e("tr",null,[o2,e("td",s2,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[l2]),_:1})]),d2]),e("tr",null,[a2,e("td",i2,[c2,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[r2]),_:1}),t("<"),u2,t(", "),h2,t(">>")]),_2])])]),p2,e("p",null,[e("a",f2,[t("core/types/commandType/CommandFunctionContext.ts:16"),n(l)])]),g2,m2,e("p",null,[t("Ƭ "),y2,t("<"),b2,t(">: "),n(o,{to:"/api/modules/purista_core.html#commandsuccessresponse"},{default:s(()=>[x2]),_:1}),t("<"),v2,t("> | "),n(o,{to:"/api/modules/purista_core.html#commanderrorresponse"},{default:s(()=>[S2]),_:1})]),T2,e("p",null,[e("a",k2,[t("core/types/commandType/CommandResponse.ts:9"),n(l)])]),C2,P2,e("p",null,[t("Ƭ "),w2,t("<"),I2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[M2]),_:1}),t("<{ "),E2,t(": "),n(o,{to:"/api/modules/purista_core.html#correlationid"},{default:s(()=>[F2]),_:1}),t(" ; "),D2,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[R2]),_:1}),t(" ; "),B2,t(": "),N2,t(" ; "),L2,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessagesenderaddress"},{default:s(()=>[O2]),_:1}),t(" } & "),n(o,{to:"/api/modules/purista_core.html#ebmessagebase"},{default:s(()=>[A2]),_:1}),t(">")]),H2,e("p",null,[e("a",j2,[t("core/types/commandType/CommandSuccessResponse.ts:13"),n(l)])]),G2,q2,e("p",null,[t("Ƭ "),V2,t("<"),z2,t(", "),Z2,t(">: "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[U2]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[Q2]),_:1}),t(" & { "),K2,t(": "),W2,t("<"),n(o,{to:"/api/modules/purista_core.html#command"},{default:s(()=>[$2]),_:1}),t("<"),Y2,t(", "),J2,t(">> }>")]),X2,e("p",null,[e("a",e4,[t("core/types/commandType/CommandTransformFunctionContext.ts:8"),n(l)])]),t4,n4,e("p",null,[t("Ƭ "),o4,t("<"),s4,t(", "),l4,t(", "),d4,t(", "),a4,t(", "),i4,t(">: ("),c4,t(": "),r4,t(", "),u4,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[h4]),_:1}),t("<"),_4,t(", "),p4,t(">, "),f4,t(": "),g4,t("<"),m4,t(">, "),y4,t(": "),b4,t("<"),x4,t(">) => "),v4,t("<{ "),S4,t(": "),T4,t("<"),k4,t("> ; "),C4,t(": "),P4,t("<"),w4,t("> }>")]),I4,e("table",null,[M4,e("tbody",null,[E4,e("tr",null,[F4,e("td",D4,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[R4]),_:1}),t("<"),B4,t(", "),N4,t(">")])]),L4,O4])]),A4,e("p",null,[e("a",H4,[t("core/types/commandType/CommandTransformInputHook.ts:12"),n(l)])]),j4,G4,e("p",null,[t("Ƭ "),q4,t("<"),V4,t(", "),z4,t(", "),Z4,t(", "),U4,t(", "),Q4,t(">: ("),K4,t(": "),W4,t(", "),$4,t(": "),n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[Y4]),_:1}),t("<"),J4,t(", "),X4,t(">, "),eS,t(": "),tS,t("<"),nS,t(">, "),oS,t(": "),sS,t("<"),lS,t(">) => "),dS,t("<"),aS,t(">")]),iS,e("table",null,[cS,e("tbody",null,[rS,e("tr",null,[uS,e("td",hS,[n(o,{to:"/api/modules/purista_core.html#commandtransformfunctioncontext"},{default:s(()=>[_S]),_:1}),t("<"),pS,t(", "),fS,t(">")])]),gS,mS])]),yS,bS,xS,e("p",null,[e("a",vS,[t("core/types/commandType/CommandTransformOutputHook.ts:7"),n(l)])]),SS,TS,kS,CS,PS,e("table",null,[wS,e("tbody",null,[e("tr",null,[IS,e("td",MS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[ES]),_:1})])])])]),FS,DS,RS,BS,e("p",null,[e("a",NS,[t("core/types/commandType/isCommand.impl.ts:12"),n(l)])]),LS,e("p",null,[e("a",OS,[t("core/types/commandType/isCommandErrorResponse.impl.ts:12"),n(l)])]),AS,HS,jS,GS,qS,e("table",null,[VS,e("tbody",null,[e("tr",null,[zS,e("td",ZS,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[US]),_:1})])])])]),QS,KS,WS,$S,e("p",null,[e("a",YS,[t("core/types/commandType/isCommandResponse.impl.ts:12"),n(l)])]),JS,XS,eT,tT,nT,e("table",null,[oT,e("tbody",null,[e("tr",null,[sT,e("td",lT,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[dT]),_:1})])])])]),aT,iT,cT,rT,e("p",null,[e("a",uT,[t("core/types/commandType/isCommandSuccessResponse.impl.ts:12"),n(l)])]),hT,e("p",null,[e("a",_T,[t("DefaultEventBridge/DefaultEventBridge.impl.ts:61"),n(l)])]),pT,e("p",null,[e("a",fT,[t("core/EventBridge/EventBridgeBaseClass.impl.ts:17"),n(l)])]),gT,mT,yT,e("p",null,[e("a",bT,[t("core/EventBridge/types/EventBridge.ts:19"),n(l)])]),xT,vT,ST,TT,e("table",null,[kT,e("tbody",null,[CT,PT,wT,e("tr",null,[IT,e("td",MT,[n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[ET]),_:1}),t(" | "),FT]),DT]),RT])]),BT,e("p",null,[e("a",NT,[t("core/EventBridge/types/EventBridgeEvents.ts:20"),n(l)])]),LT,OT,AT,HT,e("table",null,[jT,e("tbody",null,[e("tr",null,[GT,e("td",qT,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[VT]),_:1})])])])]),zT,ZT,UT,e("p",null,[e("a",QT,[t("core/helper/getCommandQueueName.impl.ts:10"),n(l)])]),KT,e("p",null,[e("a",WT,[t("helper/string/convertToCamelCase.impl.ts:9"),n(l)])]),$T,e("p",null,[e("a",YT,[t("helper/string/convertToKebabCase.impl.ts:9"),n(l)])]),JT,e("p",null,[e("a",XT,[t("helper/string/convertToPascalCase.impl.ts:9"),n(l)])]),e5,e("p",null,[e("a",t5,[t("helper/string/convertToSnakeCase.impl.ts:9"),n(l)])]),n5,o5,e("p",null,[t("▸ "),s5,t("("),l5,t(", "),d5,t(", "),a5,t(", "),i5,t("): "),c5,t("<"),r5,t("<{ "),u5,t(": "),h5,t(" ; "),_5,t(": "),p5,t(" ; "),f5,t(": "),g5,t(" ; "),m5,t(": "),y5,t(" ; "),b5,t(": "),x5,t(" ; "),v5,t(": "),S5,t(" ; "),T5,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[k5]),_:1}),t(" ; "),C5,t(": "),P5,t(" ; "),w5,t(": { "),I5,t(": "),M5,t(" ; "),E5,t(": "),F5,t(" ; "),D5,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[R5]),_:1}),t(" } ; "),B5,t(": "),N5,t(" ; "),L5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),O5,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),A5,t(": "),H5,t(" ; "),j5,t(": "),G5,t(" ; "),q5,t(": "),V5,t(" }, "),z5,t(">>")]),Z5,U5,e("table",null,[Q5,e("tbody",null,[K5,e("tr",null,[W5,e("td",$5,[Y5,t("<{ "),J5,t(": "),X5,t(" ; "),ek,t(": "),tk,t(" ; "),nk,t(": "),ok,t(" ; "),sk,t(": "),lk,t(" ; "),dk,t(": "),ak,t(" ; "),ik,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[ck]),_:1}),t(" ; "),rk,t(": "),uk,t(" ; "),hk,t(": { "),_k,t(": "),pk,t(" ; "),fk,t(": "),gk,t(" } ; "),mk,t(": "),yk,t(" ; "),bk,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[xk]),_:1}),t(" ; "),vk,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Sk,t(": "),Tk,t(" ; "),kk,t(": "),Ck,t(" ; "),Pk,t(": "),wk,t(" }>")]),Ik]),e("tr",null,[Mk,e("td",Ek,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Fk]),_:1})]),Dk]),Rk])]),Bk,e("p",null,[Nk,t("<"),Lk,t("<{ "),Ok,t(": "),Ak,t(" ; "),Hk,t(": "),jk,t(" ; "),Gk,t(": "),qk,t(" ; "),Vk,t(": "),zk,t(" ; "),Zk,t(": "),Uk,t(" ; "),Qk,t(": "),Kk,t(" ; "),Wk,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[$k]),_:1}),t(" ; "),Yk,t(": "),Jk,t(" ; "),Xk,t(": { "),e9,t(": "),t9,t(" ; "),n9,t(": "),o9,t(" ; "),s9,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[l9]),_:1}),t(" } ; "),d9,t(": "),a9,t(" ; "),i9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),c9,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),r9,t(": "),u9,t(" ; "),h9,t(": "),_9,t(" ; "),p9,t(": "),f9,t(" }, "),g9,t(">>")]),m9,y9,e("p",null,[e("a",b9,[t("core/helper/createErrorResponse.impl.ts:18"),n(l)])]),x9,v9,e("p",null,[t("▸ "),S9,t("("),T9,t(", "),k9,t(", "),C9,t("): "),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[P9]),_:1})]),w9,e("table",null,[I9,e("tbody",null,[e("tr",null,[M9,e("td",E9,[n(o,{to:"/api/modules/purista_core.html#infomessagetype"},{default:s(()=>[F9]),_:1})]),D9]),R9,B9,N9,L9,O9,e("tr",null,[A9,e("td",H9,[j9,t("<"),n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[G9]),_:1}),t(">")]),q9])])]),V9,e("p",null,[n(o,{to:"/api/modules/purista_core.html#infomessage"},{default:s(()=>[z9]),_:1})]),Z9,e("p",null,[e("a",U9,[t("core/helper/createInfoMessage.impl.ts:14"),n(l)])]),Q9,K9,e("p",null,[t("▸ "),W9,t("<"),$9,t(">("),Y9,t(", "),J9,t(", "),X9,t(", "),e6,t(", "),t6,t(", "),n6,t("): "),o6,t("<{ "),s6,t(": "),l6,t(" ; "),d6,t(": "),a6,t(" ; "),i6,t(": "),c6,t(" ; "),r6,t(": "),u6,t(" ; "),h6,t(": "),_6,t(" ; "),p6,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[f6]),_:1}),t(" ; "),g6,t(": "),m6,t(" ; "),y6,t(": "),b6,t(" ; "),x6,t(": "),v6,t(" ; "),S6,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),T6,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),k6,t(": "),C6,t(" ; "),P6,t(": "),w6,t(" ; "),I6,t(": "),M6,t(" }>")]),E6,e("table",null,[F6,e("tbody",null,[D6,e("tr",null,[R6,e("td",B6,[N6,t("<{ "),L6,t(": "),O6,t(" ; "),A6,t(": "),H6,t(" ; "),j6,t(": "),G6,t(" ; "),q6,t(": "),V6,t(" ; "),z6,t(": "),Z6,t(" ; "),U6,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[Q6]),_:1}),t(" ; "),K6,t(": "),W6,t(" ; "),$6,t(": { "),Y6,t(": "),J6,t(" ; "),X6,t(": "),e0,t(" } ; "),t0,t(": "),n0,t(" ; "),o0,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[s0]),_:1}),t(" ; "),l0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),d0,t(": "),a0,t(" ; "),i0,t(": "),c0,t(" ; "),r0,t(": "),u0,t(" }>")]),h0]),_0,p0,f0,g0])]),m0,e("p",null,[y0,t("<{ "),b0,t(": "),x0,t(" ; "),v0,t(": "),S0,t(" ; "),T0,t(": "),k0,t(" ; "),C0,t(": "),P0,t(" ; "),w0,t(": "),I0,t(" ; "),M0,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[E0]),_:1}),t(" ; "),F0,t(": "),D0,t(" ; "),R0,t(": "),B0,t(" ; "),N0,t(": "),L0,t(" ; "),O0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),A0,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),H0,t(": "),j0,t(" ; "),G0,t(": "),q0,t(" ; "),V0,t(": "),z0,t(" }>")]),Z0,e("p",null,[e("a",U0,[t("core/helper/createSuccessResponse.impl.ts:15"),n(l)])]),Q0,e("table",null,[K0,e("tbody",null,[e("tr",null,[W0,e("td",$0,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Y0]),_:1})])]),J0])]),X0,e7,t7,e("p",null,[e("a",n7,[t("core/helper/serializeOtp.impl.ts:26"),n(l)])]),o7,e("table",null,[s7,e("tbody",null,[e("tr",null,[l7,e("td",d7,[a7,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[i7]),_:1}),t(">")]),c7]),r7])]),u7,h7,_7,e("p",null,[e("a",p7,[t("core/helper/getCleanedMessage.impl.ts:15"),n(l)])]),f7,g7,m7,y7,e("table",null,[b7,e("tbody",null,[e("tr",null,[x7,e("td",v7,[n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[S7]),_:1})])])])]),T7,k7,C7,e("p",null,[e("a",P7,[t("core/helper/getErrorMessageForCode.impl.ts:10"),n(l)])]),w7,e("p",null,[e("a",I7,[t("core/helper/getNewCorrelationId.impl.ts:10"),n(l)])]),M7,e("p",null,[e("a",E7,[t("core/helper/getNewEBMessageId.impl.ts:11"),n(l)])]),F7,e("p",null,[e("a",D7,[t("core/helper/getNewInstanceId.impl.ts:9"),n(l)])]),R7,e("p",null,[e("a",B7,[t("core/helper/getNewTraceId.impl.ts:9"),n(l)])]),N7,L7,O7,A7,e("table",null,[H7,e("tbody",null,[e("tr",null,[j7,e("td",G7,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[q7]),_:1})])])])]),V7,z7,Z7,e("p",null,[e("a",U7,[t("core/helper/getSubscriptionQueueName.impl.ts:10"),n(l)])]),Q7,e("p",null,[e("a",K7,[t("core/helper/getUniqueId.impl.ts:11"),n(l)])]),W7,e("table",null,[$7,e("tbody",null,[e("tr",null,[Y7,e("td",J7,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[X7]),_:1})]),e8,t8]),e("tr",null,[n8,e("td",o8,[n(o,{to:"/api/modules/purista_core.html#shutdownentry"},{default:s(()=>[s8]),_:1}),t("[]")]),l8,d8]),a8])]),i8,e("p",null,[e("a",c8,[t("helper/gracefulShutdown.impl.ts:36"),n(l)])]),r8,e("p",null,[e("a",u8,[t("core/helper/isDevelop.impl.ts:6"),n(l)])]),h8,e("p",null,[e("a",_8,[t("core/helper/serializeOtp.impl.ts:11"),n(l)])]),p8,f8,g8,m8,e("p",null,[e("a",y8,[t("core/types/ServiceEvents.ts:11"),n(l)])]),b8,e("p",null,[e("a",x8,[t("core/Service/Service.impl.ts:76"),n(l)])]),v8,e("table",null,[S8,e("tbody",null,[T8,k8,e("tr",null,[C8,e("td",P8,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[w8]),_:1}),t(" = "),n(o,{to:"/api/classes/purista_core.Service.html"},{default:s(()=>[I8]),_:1}),t("<"),M8,t(">")])])])]),E8,e("p",null,[e("a",F8,[t("ServiceBuilder/ServiceBuilder.impl.ts:38"),n(l)])]),D8,e("p",null,[e("a",R8,[t("core/types/ServiceClass.ts:11"),n(l)])]),B8,e("table",null,[N8,e("tbody",null,[e("tr",null,[L8,e("td",O8,[n(o,{to:"/api/modules/purista_core.html#commanddefinitionlist"},{default:s(()=>[A8]),_:1}),t("<"),H8,t(">")]),j8]),G8,e("tr",null,[q8,e("td",V8,[n(o,{to:"/api/interfaces/purista_core.ConfigStore.html"},{default:s(()=>[z8]),_:1})]),Z8]),e("tr",null,[U8,e("td",Q8,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[K8]),_:1})]),W8]),e("tr",null,[$8,e("td",Y8,[n(o,{to:"/api/modules/purista_core.html#serviceinfotype"},{default:s(()=>[J8]),_:1})]),X8]),e("tr",null,[eC,e("td",tC,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[nC]),_:1})]),oC]),e("tr",null,[sC,e("td",lC,[n(o,{to:"/api/interfaces/purista_core.SecretStore.html"},{default:s(()=>[dC]),_:1})]),aC]),iC,e("tr",null,[cC,e("td",rC,[n(o,{to:"/api/interfaces/purista_core.StateStore.html"},{default:s(()=>[uC]),_:1})]),hC]),e("tr",null,[_C,e("td",pC,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionlist"},{default:s(()=>[fC]),_:1}),t("<"),gC,t(">")]),mC])])]),yC,e("p",null,[e("a",bC,[t("core/types/ServiceConstructorInput.ts:15"),n(l)])]),xC,e("table",null,[vC,e("tbody",null,[SC,TC,e("tr",null,[kC,e("td",CC,[t("{ "),PC,t(": "),wC,t(" ; "),IC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[MC]),_:1}),t(" ; "),EC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[FC]),_:1}),t(" }")]),DC]),RC,e("tr",null,[BC,e("td",NC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[LC]),_:1})]),OC]),e("tr",null,[AC,e("td",HC,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[jC]),_:1})]),GC]),e("tr",null,[qC,e("td",VC,[t("{ "),zC,t(": "),n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[ZC]),_:1}),t(" ; "),UC,t(": "),QC,t(" ; "),KC,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[WC]),_:1}),t(" }")]),$C]),e("tr",null,[YC,e("td",JC,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[XC]),_:1})]),eP]),tP,e("tr",null,[nP,e("td",oP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[sP]),_:1})]),lP]),dP,aP,iP,e("tr",null,[cP,e("td",rP,[t("{ "),uP,t(": "),hP,t(" ; "),_P,t(": "),pP,t(" ; "),fP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[gP]),_:1}),t(" }")]),mP]),yP,bP,e("tr",null,[xP,e("td",vP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[SP]),_:1})]),TP]),e("tr",null,[kP,e("td",CP,[t("{ "),PP,t(": "),wP,t(" ; "),IP,t(": "),MP,t(" ; "),EP,t(": "),n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[FP]),_:1}),t(" }")]),DP]),RP,BP,e("tr",null,[NP,e("td",LP,[n(o,{to:"/api/modules/purista_core.html#traceid"},{default:s(()=>[OP]),_:1})]),AP])])]),HP,e("p",null,[e("a",jP,[t("core/types/ServiceEvents.ts:54"),n(l)])]),GP,e("p",null,[e("a",qP,[t("core/ConfigStore/ConfigStoreBaseClass.impl.ts:11"),n(l)])]),VP,e("p",null,[e("a",zP,[t("DefaultConfigStore/DefaultConfigStore.impl.ts:25"),n(l)])]),ZP,e("p",null,[e("a",UP,[t("DefaultSecretStore/DefaultSecretStore.impl.ts:33"),n(l)])]),QP,KP,WP,e("p",null,[e("a",$P,[t("DefaultStateStore/DefaultStateStore.impl.ts:11"),n(l)])]),YP,e("p",null,[e("a",JP,[t("core/SecretStore/SecretStoreBaseClass.impl.ts:11"),n(l)])]),XP,e("p",null,[e("a",ew,[t("core/StateStore/StateStoreBaseClass.impl.ts:11"),n(l)])]),tw,nw,ow,e("p",null,[e("a",sw,[t("core/ConfigStore/types/ConfigStore.ts:10"),n(l)])]),lw,dw,aw,e("p",null,[e("a",iw,[t("core/SecretStore/types/SecretStore.ts:9"),n(l)])]),cw,rw,uw,e("p",null,[e("a",hw,[t("core/StateStore/types/StateStore.ts:10"),n(l)])]),_w,e("p",null,[e("a",pw,[t("core/ConfigStore/types/ConfigDeleteFunction.ts:2"),n(l)])]),fw,e("p",null,[e("a",gw,[t("core/ConfigStore/types/ConfigGetterFunction.ts:2"),n(l)])]),mw,e("p",null,[e("a",yw,[t("core/ConfigStore/types/ConfigSetterFunction.ts:2"),n(l)])]),bw,e("p",null,[e("a",xw,[t("core/SecretStore/types/SecretDeleteFunction.ts:2"),n(l)])]),vw,e("p",null,[e("a",Sw,[t("core/SecretStore/types/SecretGetterFunction.ts:2"),n(l)])]),Tw,e("p",null,[e("a",kw,[t("core/SecretStore/types/SecretSetterFunction.ts:2"),n(l)])]),Cw,e("p",null,[e("a",Pw,[t("core/StateStore/types/StateDeleteFunction.ts:2"),n(l)])]),ww,e("p",null,[e("a",Iw,[t("core/StateStore/types/StateGetterFunction.ts:2"),n(l)])]),Mw,e("p",null,[e("a",Ew,[t("core/StateStore/types/StateSetterFunction.ts:2"),n(l)])]),Fw,e("table",null,[Dw,e("tbody",null,[e("tr",null,[Rw,e("td",Bw,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Nw]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[Lw]),_:1})])]),Ow,Aw,Hw,jw,Gw,qw])]),Vw,e("p",null,[e("a",zw,[t("SubscriptionDefinitionBuilder/SubscriptionDefinitionBuilder.impl.ts:31"),n(l)])]),Zw,e("table",null,[Uw,e("tbody",null,[Qw,e("tr",null,[Kw,e("td",Ww,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[$w]),_:1})]),Yw]),Jw,e("tr",null,[Xw,e("td",eI,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[tI]),_:1})]),nI]),oI,sI,lI,e("tr",null,[dI,e("td",aI,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[iI]),_:1})]),cI]),e("tr",null,[rI,e("td",uI,[t("{ "),hI,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[_I]),_:1}),t(" ; "),pI,t(": "),fI,t(" ; "),gI,t(": "),mI,t(" ; "),yI,t(": "),bI,t(" }")]),xI]),e("tr",null,[vI,e("td",SI,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[TI]),_:1})]),kI]),CI,PI,wI,e("tr",null,[II,e("td",MI,[t("{ "),EI,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[FI]),_:1}),t(" ; "),DI,t(": "),RI,t(" ; "),BI,t(": "),NI,t(" ; "),LI,t(": "),OI,t(" }")]),AI]),e("tr",null,[HI,e("td",jI,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[GI]),_:1})]),qI]),VI,zI,ZI,e("tr",null,[UI,e("td",QI,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[KI]),_:1})]),WI]),e("tr",null,[$I,e("td",YI,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[JI]),_:1})]),XI])])]),eM,e("p",null,[e("a",tM,[t("core/types/subscription/Subscription.ts:13"),n(l)])]),nM,oM,e("p",null,[t("Ƭ "),sM,t("<"),lM,t(", "),dM,t(", "),aM,t(", "),iM,t(">: ("),cM,t(": "),rM,t(", "),uM,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[hM]),_:1}),t(", "),_M,t(": "),pM,t("<"),fM,t(">, "),gM,t(": "),mM,t("<"),yM,t(">, "),bM,t(": "),xM,t("<"),vM,t(">) => "),SM,t("<"),TM,t(">")]),kM,e("table",null,[CM,e("tbody",null,[e("tr",null,[PM,e("td",wM,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[IM]),_:1})])]),MM,EM,FM])]),DM,e("table",null,[RM,e("tbody",null,[BM,e("tr",null,[NM,e("td",LM,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[OM]),_:1})])]),AM,HM,jM])]),GM,qM,VM,e("p",null,[e("a",zM,[t("core/types/subscription/SubscriptionAfterGuardHook.ts:10"),n(l)])]),ZM,UM,e("p",null,[t("Ƭ "),QM,t("<"),KM,t(", "),WM,t(", "),$M,t(">: ("),YM,t(": "),JM,t(", "),XM,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[eE]),_:1}),t(", "),tE,t(": "),nE,t("<"),oE,t(">, "),sE,t(": "),lE,t("<"),dE,t(">) => "),aE,t("<"),iE,t(">")]),cE,e("table",null,[rE,e("tbody",null,[e("tr",null,[uE,e("td",hE,[n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[_E]),_:1})])]),pE,fE])]),gE,e("table",null,[mE,e("tbody",null,[yE,e("tr",null,[bE,e("td",xE,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[vE]),_:1})])]),SE,TE])]),kE,CE,PE,e("p",null,[e("a",wE,[t("core/types/subscription/SubscriptionBeforeGuardHook.ts:11"),n(l)])]),IE,e("table",null,[ME,e("tbody",null,[e("tr",null,[EE,e("td",FE,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[DE]),_:1}),t(" = "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[RE]),_:1})])]),e("tr",null,[BE,e("td",NE,[n(o,{to:"/api/modules/purista_core.html#subscriptiondefinitionmetadatabase"},{default:s(()=>[LE]),_:1})])]),OE,AE,HE,jE,GE,qE])]),VE,e("table",null,[zE,e("tbody",null,[e("tr",null,[ZE,e("td",UE,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunction"},{default:s(()=>[QE]),_:1}),t("<"),KE,t(", "),WE,t(", "),$E,t(", "),YE,t(", "),JE,t(", "),XE,t(">")]),eF]),tF,e("tr",null,[nF,e("td",oF,[n(o,{to:"/api/modules/purista_core.html#definitioneventbridgeconfig"},{default:s(()=>[sF]),_:1})]),lF]),dF,e("tr",null,[aF,e("td",iF,[t("{ "),cF,t(": "),rF,t("<"),uF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[hF]),_:1}),t("<"),_F,t(", "),pF,t(", "),fF,t(", "),gF,t(">> ; "),mF,t(": "),yF,t("<"),bF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[xF]),_:1}),t("<"),vF,t(", "),SF,t(", "),TF,t(">> ; "),kF,t(": { "),CF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[PF]),_:1}),t("<"),wF,t(", "),IF,t(", "),MF,t("> ; "),EF,t(": "),FF,t(" ; "),DF,t(": "),RF,t(" } ; "),BF,t(": { "),NF,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[LF]),_:1}),t("<"),OF,t(", "),AF,t(", "),HF,t(", "),jF,t("> ; "),GF,t(": "),qF,t(" } }")]),VF]),e("tr",null,[zF,e("td",ZF,[UF,t("<"),QF,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionafterguardhook"},{default:s(()=>[KF]),_:1}),t("<"),WF,t(", "),$F,t(", "),YF,t(", "),JF,t(">>")]),XF]),e("tr",null,[eD,e("td",tD,[nD,t("<"),oD,t(", "),n(o,{to:"/api/modules/purista_core.html#subscriptionbeforeguardhook"},{default:s(()=>[sD]),_:1}),t("<"),lD,t(", "),dD,t(", "),aD,t(">>")]),iD]),e("tr",null,[cD,e("td",rD,[t("{ "),uD,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[hD]),_:1}),t("<"),_D,t(", "),pD,t(", "),fD,t("> ; "),gD,t(": "),mD,t(" ; "),yD,t(": "),bD,t(" }")]),xD]),e("tr",null,[vD,e("td",SD,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransforminputhook"},{default:s(()=>[TD]),_:1}),t("<"),kD,t(", "),CD,t(", "),PD,t(">")]),wD]),ID,MD,e("tr",null,[ED,e("td",FD,[t("{ "),DD,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[RD]),_:1}),t("<"),BD,t(", "),ND,t(", "),LD,t(", "),OD,t("> ; "),AD,t(": "),HD,t(" }")]),jD]),e("tr",null,[GD,e("td",qD,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformoutputhook"},{default:s(()=>[VD]),_:1}),t("<"),zD,t(", "),ZD,t(", "),UD,t(", "),QD,t(">")]),KD]),WD,e("tr",null,[$D,e("td",YD,[n(o,{to:"/api/enums/purista_core.EBMessageType.html"},{default:s(()=>[JD]),_:1})]),XD]),eR,e("tr",null,[tR,e("td",nR,[n(o,{to:"/api/modules/purista_core.html#principalid"},{default:s(()=>[oR]),_:1})]),sR]),e("tr",null,[lR,e("td",dR,[t("{ "),aR,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[iR]),_:1}),t(" ; "),cR,t(": "),rR,t(" ; "),uR,t(": "),hR,t(" ; "),_R,t(": "),pR,t(" }")]),fR]),e("tr",null,[gR,e("td",mR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[yR]),_:1})]),bR]),xR,vR,SR,e("tr",null,[TR,e("td",kR,[t("{ "),CR,t(": "),n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[PR]),_:1}),t(" ; "),wR,t(": "),IR,t(" ; "),MR,t(": "),ER,t(" ; "),FR,t(": "),DR,t(" }")]),RR]),e("tr",null,[BR,e("td",NR,[n(o,{to:"/api/modules/purista_core.html#instanceid"},{default:s(()=>[LR]),_:1})]),OR]),AR,HR,jR,GR,qR,e("tr",null,[VR,e("td",zR,[n(o,{to:"/api/modules/purista_core.html#tenantid"},{default:s(()=>[ZR]),_:1})]),UR])])]),QR,e("p",null,[e("a",KR,[t("core/types/subscription/SubscriptionDefinition.ts:21"),n(l)])]),WR,$R,e("p",null,[t("Ƭ "),YR,t("<"),JR,t(", "),XR,t(", "),eB,t(", "),tB,t(", "),nB,t(", "),oB,t(">: ("),sB,t(": "),lB,t(", "),dB,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[aB]),_:1}),t(", "),iB,t(": "),cB,t("<"),rB,t(">, "),uB,t(": "),hB,t("<"),_B,t(">) => "),pB,t("<"),fB,t(">")]),gB,e("table",null,[mB,e("tbody",null,[e("tr",null,[yB,e("td",bB,[t("extends "),n(o,{to:"/api/interfaces/purista_core.ServiceClass.html"},{default:s(()=>[xB]),_:1})])]),vB,SB,TB,kB,CB])]),PB,e("table",null,[wB,e("tbody",null,[IB,e("tr",null,[MB,e("td",EB,[n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontext"},{default:s(()=>[FB]),_:1})])]),DB,RB])]),BB,NB,LB,e("p",null,[e("a",OB,[t("core/types/subscription/SubscriptionFunction.ts:8"),n(l)])]),AB,HB,e("p",null,[t("Ƭ "),jB,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[GB]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[qB]),_:1}),t(" & "),n(o,{to:"/api/modules/purista_core.html#subscriptionfunctioncontextenhancements"},{default:s(()=>[VB]),_:1}),t(">")]),zB,ZB,e("p",null,[e("a",UB,[t("core/types/subscription/SubscriptionFunctionContext.ts:47"),n(l)])]),QB,e("table",null,[KB,e("tbody",null,[e("tr",null,[WB,e("td",$B,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[YB]),_:1})]),JB]),e("tr",null,[XB,e("td",eN,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[tN]),_:1})]),nN]),e("tr",null,[oN,e("td",sN,[lN,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[dN]),_:1}),t(">")]),aN])])]),iN,e("p",null,[e("a",cN,[t("core/types/subscription/SubscriptionFunctionContext.ts:16"),n(l)])]),rN,uN,e("p",null,[t("Ƭ "),hN,t(": "),n(o,{to:"/api/modules/purista_core.html#prettify"},{default:s(()=>[_N]),_:1}),t("<"),n(o,{to:"/api/modules/purista_core.html#contextbase"},{default:s(()=>[pN]),_:1}),t(" & { "),fN,t(": "),gN,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[mN]),_:1}),t("> }>")]),yN,e("p",null,[e("a",bN,[t("core/types/subscription/SubscriptionTransformFunctionContext.ts:8"),n(l)])]),xN,vN,e("p",null,[t("Ƭ "),SN,t("<"),TN,t(", "),kN,t(", "),CN,t(", "),PN,t(", "),wN,t(">: ("),IN,t(": "),MN,t(", "),EN,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[FN]),_:1}),t(", "),DN,t(": "),RN,t("<"),BN,t(">, "),NN,t(": "),LN,t("<"),ON,t(">) => "),AN,t("<{ "),HN,t(": "),jN,t("<"),GN,t("> ; "),qN,t(": "),VN,t("<"),zN,t("> }>")]),ZN,e("table",null,[UN,e("tbody",null,[QN,e("tr",null,[KN,e("td",WN,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[$N]),_:1})])]),YN,JN])]),XN,e("p",null,[e("a",eL,[t("core/types/subscription/SubscriptionTransformInputHook.ts:6"),n(l)])]),tL,nL,e("p",null,[t("Ƭ "),oL,t("<"),sL,t(", "),lL,t(", "),dL,t(", "),aL,t(">: ("),iL,t(": "),cL,t(", "),rL,t(": "),n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[uL]),_:1}),t(", "),hL,t(": "),_L,t("<"),pL,t(">, "),fL,t(": "),gL,t("<"),mL,t(">) => "),yL,t("<"),bL,t(">")]),xL,e("table",null,[vL,e("tbody",null,[SL,e("tr",null,[TL,e("td",kL,[n(o,{to:"/api/modules/purista_core.html#subscriptiontransformfunctioncontext"},{default:s(()=>[CL]),_:1})])]),PL,wL])]),IL,ML,EL,e("p",null,[e("a",FL,[t("core/types/subscription/SubscriptionTransformOutputHook.ts:8"),n(l)])]),DL,e("table",null,[RL,e("tbody",null,[e("tr",null,[BL,e("td",NL,[t("{ "),LL,t(": { "),OL,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[AL]),_:1}),t(" ; "),HL,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[jL]),_:1}),t(" ; "),GL,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[qL]),_:1}),t(" } ; "),VL,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[zL]),_:1}),t(" ; "),ZL,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[UL]),_:1}),t(" ; "),QL,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[KL]),_:1}),t(" ; "),WL,t(": "),$L,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }> ; "),YL,t(": { "),JL,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[XL]),_:1}),t(" ; "),eO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[tO]),_:1}),t(" ; "),nO,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[oO]),_:1}),t(" } ; "),sO,t(": <F>("),lO,t(": "),dO,t(", "),aO,t(": "),iO,t(", "),cO,t(": "),rO,t(" | "),uO,t(", "),hO,t(": ("),_O,t(": "),pO,t(") => "),fO,t("<"),gO,t(">) => "),mO,t("<"),yO,t("> ; "),bO,t(": { "),xO,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[vO]),_:1}),t(" ; "),SO,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[TO]),_:1}),t(" ; "),kO,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[CO]),_:1}),t(" } ; "),PO,t(": <F>("),wO,t(": "),IO,t(", "),MO,t(": "),EO,t(", "),FO,t(": ("),DO,t(": "),RO,t(") => "),BO,t("<"),NO,t(">, "),LO,t(": "),OO,t(") => "),AO,t("<"),HO,t("> }")])]),e("tr",null,[jO,e("td",GO,[t("{ "),qO,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[VO]),_:1}),t(" ; "),zO,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[ZO]),_:1}),t(" ; "),UO,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[QO]),_:1}),t(" }")])]),e("tr",null,[KO,e("td",WO,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[$O]),_:1})])]),e("tr",null,[YO,e("td",JO,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[XO]),_:1})])]),e("tr",null,[eA,e("td",tA,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[nA]),_:1})])]),e("tr",null,[oA,e("td",sA,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[lA]),_:1})])]),e("tr",null,[dA,e("td",aA,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[iA]),_:1})])]),e("tr",null,[cA,e("td",rA,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[uA]),_:1})])]),hA,e("tr",null,[_A,e("td",pA,[t("{ "),fA,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[gA]),_:1}),t(" ; "),mA,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[yA]),_:1}),t(" ; "),bA,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[xA]),_:1}),t(" }")])]),e("tr",null,[vA,e("td",SA,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[TA]),_:1})])]),e("tr",null,[kA,e("td",CA,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[PA]),_:1})])]),e("tr",null,[wA,e("td",IA,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[MA]),_:1})])]),EA,e("tr",null,[FA,e("td",DA,[t("{ "),RA,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[BA]),_:1}),t(" ; "),NA,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[LA]),_:1}),t(" ; "),OA,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[AA]),_:1}),t(" }")])]),e("tr",null,[HA,e("td",jA,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[GA]),_:1})])]),e("tr",null,[qA,e("td",VA,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[zA]),_:1})])]),e("tr",null,[ZA,e("td",UA,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[QA]),_:1})])]),KA,WA,$A,YA,JA,XA,eH,tH,nH,oH,sH,lH,dH,aH,iH,cH,rH,uH,hH,_H,pH,fH])]),gH,e("p",null,[e("a",mH,[t("mocks/getCommandContext.mock.ts:12"),n(l)])]),yH,bH,e("p",null,[t("▸ "),xH,t("("),vH,t(", "),SH,t(", "),TH,t("): "),kH,t("<{ "),CH,t(": "),PH,t(" ; "),wH,t(": "),IH,t(" ; "),MH,t(": "),EH,t(" ; "),FH,t(": "),DH,t(" ; "),RH,t(": "),BH,t(" ; "),NH,t(": "),LH,t(" ; "),OH,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[AH]),_:1}),t(" ; "),HH,t(": "),jH,t(" ; "),GH,t(": { "),qH,t(": "),VH,t(" ; "),zH,t(": "),ZH,t(" ; "),UH,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[QH]),_:1}),t(" } ; "),KH,t(": "),WH,t(" ; "),$H,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),YH,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),JH,t(": "),XH,t(" ; "),ej,t(": "),tj,t(" ; "),nj,t(": "),oj,t(" }>")]),sj,lj,e("table",null,[dj,e("tbody",null,[e("tr",null,[aj,e("td",ij,[n(o,{to:"/api/classes/purista_core.HandledError.html"},{default:s(()=>[cj]),_:1}),t(" | "),n(o,{to:"/api/classes/purista_core.UnhandledError.html"},{default:s(()=>[rj]),_:1})]),uj]),e("tr",null,[hj,e("td",_j,[pj,t("<{ "),fj,t(": "),gj,t(" ; "),mj,t(": "),yj,t(" ; "),bj,t(": "),xj,t(" ; "),vj,t(": "),Sj,t(" ; "),Tj,t(": "),kj,t(" ; "),Cj,t(": "),Pj,t(" ; "),wj,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[Ij]),_:1}),t(" ; "),Mj,t(": "),Ej,t(" ; "),Fj,t(": { "),Dj,t(": "),Rj,t(" ; "),Bj,t(": "),Nj,t(" ; "),Lj,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[Oj]),_:1}),t(" } ; "),Aj,t(": "),Hj,t(" ; "),jj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Gj,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),qj,t(": "),Vj,t(" ; "),zj,t(": "),Zj,t(" ; "),Uj,t(": "),Qj,t(" }>")]),Kj]),Wj,$j,Yj,Jj,Xj,eG,e("tr",null,[tG,e("td",nG,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[oG]),_:1})]),sG]),lG,dG,aG,iG,cG,e("tr",null,[rG,e("td",uG,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[hG]),_:1})]),_G]),pG,fG,gG,mG])]),yG,e("p",null,[bG,t("<{ "),xG,t(": "),vG,t(" ; "),SG,t(": "),TG,t(" ; "),kG,t(": "),CG,t(" ; "),PG,t(": "),wG,t(" ; "),IG,t(": "),MG,t(" ; "),EG,t(": "),FG,t(" ; "),DG,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commanderrorresponse"},{default:s(()=>[RG]),_:1}),t(" ; "),BG,t(": "),NG,t(" ; "),LG,t(": { "),OG,t(": "),AG,t(" ; "),HG,t(": "),jG,t(" ; "),GG,t(": "),n(o,{to:"/api/enums/purista_core.StatusCode.html"},{default:s(()=>[qG]),_:1}),t(" } ; "),VG,t(": "),zG,t(" ; "),ZG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),UG,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),QG,t(": "),KG,t(" ; "),WG,t(": "),$G,t(" ; "),YG,t(": "),JG,t(" }>")]),XG,e("p",null,[e("a",eq,[t("mocks/messages/getCommandErrorMessage.mock.ts:16"),n(l)])]),tq,nq,e("p",null,[t("▸ "),oq,t("<"),sq,t(", "),lq,t(">("),dq,t("): "),aq,t("<{ "),iq,t(": "),cq,t(" ; "),rq,t(": "),uq,t(" ; "),hq,t(": "),_q,t(" ; "),pq,t(": "),fq,t(" ; "),gq,t(": "),mq,t(" ; "),yq,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[bq]),_:1}),t(" ; "),xq,t(": "),vq,t(" ; "),Sq,t(": { "),Tq,t(": "),kq,t(" ; "),Cq,t(": "),Pq,t(" } ; "),wq,t(": "),Iq,t(" ; "),Mq,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[Eq]),_:1}),t(" ; "),Fq,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Dq,t(": "),Rq,t(" ; "),Bq,t(": "),Nq,t(" ; "),Lq,t(": "),Oq,t(" }>")]),Aq,e("table",null,[Hq,e("tbody",null,[e("tr",null,[jq,e("td",Gq,[qq,t("<{ "),Vq,t(": "),zq,t(" ; "),Zq,t(": "),Uq,t(" ; "),Qq,t(": "),Kq,t(" ; "),Wq,t(": "),$q,t(" ; "),Yq,t(": "),Jq,t(" ; "),Xq,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[eV]),_:1}),t(" ; "),tV,t(": "),nV,t(" ; "),oV,t(": { "),sV,t(": "),lV,t(" ; "),dV,t(": "),aV,t(" } ; "),iV,t(": "),cV,t(" ; "),rV,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[uV]),_:1}),t(" ; "),hV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),_V,t(": "),pV,t(" ; "),fV,t(": "),gV,t(" ; "),mV,t(": "),yV,t(" }> & { "),bV,t(": { "),xV,t(": "),vV,t(" ; "),SV,t(": "),TV,t(" } }")])])])]),kV,e("p",null,[CV,t("<{ "),PV,t(": "),wV,t(" ; "),IV,t(": "),MV,t(" ; "),EV,t(": "),FV,t(" ; "),DV,t(": "),RV,t(" ; "),BV,t(": "),NV,t(" ; "),LV,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[OV]),_:1}),t(" ; "),AV,t(": "),HV,t(" ; "),jV,t(": { "),GV,t(": "),qV,t(" ; "),VV,t(": "),zV,t(" } ; "),ZV,t(": "),UV,t(" ; "),QV,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[KV]),_:1}),t(" ; "),WV,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),$V,t(": "),YV,t(" ; "),JV,t(": "),XV,t(" ; "),ez,t(": "),tz,t(" }>")]),nz,e("p",null,[e("a",oz,[t("mocks/messages/getCommandMessage.mock.ts:15"),n(l)])]),sz,lz,e("p",null,[t("▸ "),dz,t("<"),az,t(">("),iz,t(", "),cz,t(", "),rz,t("): "),uz,t("<{ "),hz,t(": "),_z,t(" ; "),pz,t(": "),fz,t(" ; "),gz,t(": "),mz,t(" ; "),yz,t(": "),bz,t(" ; "),xz,t(": "),vz,t(" ; "),Sz,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[Tz]),_:1}),t(" ; "),kz,t(": "),Cz,t(" ; "),Pz,t(": "),wz,t(" ; "),Iz,t(": "),Mz,t(" ; "),Ez,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Fz,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),Dz,t(": "),Rz,t(" ; "),Bz,t(": "),Nz,t(" ; "),Lz,t(": "),Oz,t(" }>")]),Az,e("table",null,[Hz,e("tbody",null,[jz,e("tr",null,[Gz,e("td",qz,[Vz,t("<{ "),zz,t(": "),Zz,t(" ; "),Uz,t(": "),Qz,t(" ; "),Kz,t(": "),Wz,t(" ; "),$z,t(": "),Yz,t(" ; "),Jz,t(": "),Xz,t(" ; "),eZ,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[tZ]),_:1}),t(" ; "),nZ,t(": "),oZ,t(" ; "),sZ,t(": "),lZ,t(" ; "),dZ,t(": "),aZ,t(" ; "),iZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),cZ,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),rZ,t(": "),uZ,t(" ; "),hZ,t(": "),_Z,t(" ; "),pZ,t(": "),fZ,t(" }>")]),gZ]),mZ,yZ,bZ,xZ,vZ,SZ,e("tr",null,[TZ,e("td",kZ,[n(o,{to:"/api/enums/purista_core.EBMessageType.html#command"},{default:s(()=>[CZ]),_:1})]),PZ]),wZ,IZ,MZ,EZ,FZ,e("tr",null,[DZ,e("td",RZ,[n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[BZ]),_:1})]),NZ]),LZ,OZ,AZ,HZ])]),jZ,e("p",null,[GZ,t("<{ "),qZ,t(": "),VZ,t(" ; "),zZ,t(": "),ZZ,t(" ; "),UZ,t(": "),QZ,t(" ; "),KZ,t(": "),WZ,t(" ; "),$Z,t(": "),YZ,t(" ; "),JZ,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#commandsuccessresponse"},{default:s(()=>[XZ]),_:1}),t(" ; "),eU,t(": "),tU,t(" ; "),nU,t(": "),oU,t(" ; "),sU,t(": "),lU,t(" ; "),dU,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),aU,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),iU,t(": "),cU,t(" ; "),rU,t(": "),uU,t(" ; "),hU,t(": "),_U,t(" }>")]),pU,e("p",null,[e("a",fU,[t("mocks/messages/getCommandSuccessMessage.mock.ts:9"),n(l)])]),gU,e("table",null,[mU,e("tbody",null,[e("tr",null,[yU,e("td",bU,[t("{ "),xU,t(": { "),vU,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[SU]),_:1}),t(" ; "),TU,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[kU]),_:1}),t(" ; "),CU,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[PU]),_:1}),t(" } ; "),wU,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[IU]),_:1}),t(" ; "),MU,t(": "),EU,t("<{ messageType: EBMessageType.Command; correlationId: string; receiver: EBMessageAddress; payload: { parameter: MessageParamsType; payload: MessagePayloadType; }; ... 9 more ...; sender: { ...; }; }> ; "),FU,t(": { "),DU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[RU]),_:1}),t(" ; "),BU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[NU]),_:1}),t(" ; "),LU,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[OU]),_:1}),t(" } ; "),AU,t(": <F>("),HU,t(": "),jU,t(", "),GU,t(": "),qU,t(", "),VU,t(": "),zU,t(" | "),ZU,t(", "),UU,t(": ("),QU,t(": "),KU,t(") => "),WU,t("<"),$U,t(">) => "),YU,t("<"),JU,t("> ; "),XU,t(": { "),eQ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[tQ]),_:1}),t(" ; "),nQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[oQ]),_:1}),t(" ; "),sQ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[lQ]),_:1}),t(" } ; "),dQ,t(": <F>("),aQ,t(": "),iQ,t(", "),cQ,t(": "),rQ,t(", "),uQ,t(": ("),hQ,t(": "),_Q,t(") => "),pQ,t("<"),fQ,t(">, "),gQ,t(": "),mQ,t(") => "),yQ,t("<"),bQ,t("> }")])]),e("tr",null,[xQ,e("td",vQ,[t("{ "),SQ,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[TQ]),_:1}),t(" ; "),kQ,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[CQ]),_:1}),t(" ; "),PQ,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[wQ]),_:1}),t(" }")])]),e("tr",null,[IQ,e("td",MQ,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[EQ]),_:1})])]),e("tr",null,[FQ,e("td",DQ,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[RQ]),_:1})])]),e("tr",null,[BQ,e("td",NQ,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[LQ]),_:1})])]),e("tr",null,[OQ,e("td",AQ,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[HQ]),_:1})])]),jQ,e("tr",null,[GQ,e("td",qQ,[t("{ "),VQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[zQ]),_:1}),t(" ; "),ZQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[UQ]),_:1}),t(" ; "),QQ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[KQ]),_:1}),t(" }")])]),e("tr",null,[WQ,e("td",$Q,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[YQ]),_:1})])]),e("tr",null,[JQ,e("td",XQ,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[eK]),_:1})])]),e("tr",null,[tK,e("td",nK,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[oK]),_:1})])]),sK,e("tr",null,[lK,e("td",dK,[t("{ "),aK,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[iK]),_:1}),t(" ; "),cK,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[rK]),_:1}),t(" ; "),uK,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[hK]),_:1}),t(" }")])]),e("tr",null,[_K,e("td",pK,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[fK]),_:1})])]),e("tr",null,[gK,e("td",mK,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[yK]),_:1})])]),e("tr",null,[bK,e("td",xK,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[vK]),_:1})])]),SK,TK,kK,CK,PK,wK,IK,MK,EK,FK,DK,RK,BK,NK,LK,OK,AK,HK,jK,GK])]),qK,e("p",null,[e("a",VK,[t("mocks/getCommandTransformContext.mock.ts:12"),n(l)])]),zK,ZK,e("p",null,[t("▸ "),UK,t("<"),QK,t(">("),KK,t(", "),WK,t(", "),$K,t("): "),YK,t("<{ "),JK,t(": "),XK,t(" ; "),eW,t(": "),tW,t(" ; "),nW,t(": "),oW,t(" ; "),sW,t(": "),lW,t(" ; "),dW,t(": "),aW,t(" ; "),iW,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[cW]),_:1}),t(" ; "),rW,t(": "),uW,t(" ; "),hW,t(": "),_W,t(" ; "),pW,t(": "),fW,t(" ; "),gW,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[mW]),_:1}),t(" ; "),yW,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),bW,t(": "),xW,t(" ; "),vW,t(": "),SW,t(" ; "),TW,t(": "),kW,t(" }>")]),CW,e("table",null,[PW,e("tbody",null,[wW,IW,e("tr",null,[MW,e("td",EW,[FW,t("<{ "),DW,t(": "),RW,t(" ; "),BW,t(": "),NW,t(" ; "),LW,t(": "),OW,t(" ; "),AW,t(": "),HW,t(" ; "),jW,t(": "),GW,t(" ; "),qW,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[VW]),_:1}),t(" ; "),zW,t(": "),ZW,t(" ; "),UW,t(": "),QW,t(" ; "),KW,t(": "),WW,t(" ; "),$W,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[YW]),_:1}),t(" ; "),JW,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),XW,t(": "),e$,t(" ; "),t$,t(": "),n$,t(" ; "),o$,t(": "),s$,t(" }>")])])])]),l$,e("p",null,[d$,t("<{ "),a$,t(": "),i$,t(" ; "),c$,t(": "),r$,t(" ; "),u$,t(": "),h$,t(" ; "),_$,t(": "),p$,t(" ; "),f$,t(": "),g$,t(" ; "),m$,t(": "),n(o,{to:"/api/enums/purista_core.EBMessageType.html#custommessage"},{default:s(()=>[y$]),_:1}),t(" ; "),b$,t(": "),x$,t(" ; "),v$,t(": "),S$,t(" ; "),T$,t(": "),k$,t(" ; "),C$,t(": "),n(o,{to:"/api/modules/purista_core.html#ebmessageaddress"},{default:s(()=>[P$]),_:1}),t(" ; "),w$,t(": { serviceName: string; serviceVersion: string; serviceTarget: string; instanceId: string; } ; "),I$,t(": "),M$,t(" ; "),E$,t(": "),F$,t(" ; "),D$,t(": "),R$,t(" }>")]),B$,e("p",null,[e("a",N$,[t("mocks/messages/getCustomMessage.mock.ts:15"),n(l)])]),L$,e("table",null,[O$,e("tbody",null,[e("tr",null,[A$,e("td",H$,[n(o,{to:"/api/interfaces/purista_core.EventBridge.html"},{default:s(()=>[j$]),_:1})])]),G$])]),q$,e("p",null,[e("a",V$,[t("mocks/getEventBridge.mock.ts:10"),n(l)])]),z$,e("table",null,[Z$,e("tbody",null,[e("tr",null,[U$,e("td",Q$,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[K$]),_:1})])]),W$,$$,Y$,J$,X$,eY,tY])]),nY,e("p",null,[e("a",oY,[t("mocks/getLogger.mock.ts:10"),n(l)])]),sY,e("table",null,[lY,e("tbody",null,[e("tr",null,[dY,e("td",aY,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[iY]),_:1})])]),cY])]),rY,uY,e("table",null,[hY,e("tbody",null,[e("tr",null,[_Y,e("td",pY,[t("{ "),fY,t(": { "),gY,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[mY]),_:1}),t(" ; "),yY,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[bY]),_:1}),t(" ; "),xY,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[vY]),_:1}),t(" } ; "),SY,t(": "),n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[TY]),_:1}),t(" ; "),kY,t(": "),n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[CY]),_:1}),t(" ; "),PY,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[wY]),_:1}),t(" ; "),IY,t(": "),MY,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[EY]),_:1}),t("> ; "),FY,t(": { "),DY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[RY]),_:1}),t(" ; "),BY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[NY]),_:1}),t(" ; "),LY,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[OY]),_:1}),t(" } ; "),AY,t(": <F>("),HY,t(": "),jY,t(", "),GY,t(": "),qY,t(", "),VY,t(": "),zY,t(" | "),ZY,t(", "),UY,t(": ("),QY,t(": "),KY,t(") => "),WY,t("<"),$Y,t(">) => "),YY,t("<"),JY,t("> ; "),XY,t(": { "),eJ,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[tJ]),_:1}),t(" ; "),nJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[oJ]),_:1}),t(" ; "),sJ,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[lJ]),_:1}),t(" } ; "),dJ,t(": <F>("),aJ,t(": "),iJ,t(", "),cJ,t(": "),rJ,t(", "),uJ,t(": ("),hJ,t(": "),_J,t(") => "),pJ,t("<"),fJ,t(">, "),gJ,t(": "),mJ,t(") => "),yJ,t("<"),bJ,t("> }")])]),e("tr",null,[xJ,e("td",vJ,[t("{ "),SJ,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[TJ]),_:1}),t(" ; "),kJ,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[CJ]),_:1}),t(" ; "),PJ,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[wJ]),_:1}),t(" }")])]),e("tr",null,[IJ,e("td",MJ,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[EJ]),_:1})])]),e("tr",null,[FJ,e("td",DJ,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[RJ]),_:1})])]),e("tr",null,[BJ,e("td",NJ,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[LJ]),_:1})])]),e("tr",null,[OJ,e("td",AJ,[n(o,{to:"/api/modules/purista_core.html#emitcustommessagefunction"},{default:s(()=>[HJ]),_:1})])]),e("tr",null,[jJ,e("td",GJ,[n(o,{to:"/api/modules/purista_core.html#invokefunction"},{default:s(()=>[qJ]),_:1})])]),e("tr",null,[VJ,e("td",zJ,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[ZJ]),_:1})])]),e("tr",null,[UJ,e("td",QJ,[KJ,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[WJ]),_:1}),t(">")])]),e("tr",null,[$J,e("td",YJ,[t("{ "),JJ,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[XJ]),_:1}),t(" ; "),eX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[tX]),_:1}),t(" ; "),nX,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[oX]),_:1}),t(" }")])]),e("tr",null,[sX,e("td",lX,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[dX]),_:1})])]),e("tr",null,[aX,e("td",iX,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[cX]),_:1})])]),e("tr",null,[rX,e("td",uX,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[hX]),_:1})])]),_X,e("tr",null,[pX,e("td",fX,[t("{ "),gX,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[mX]),_:1}),t(" ; "),yX,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[bX]),_:1}),t(" ; "),xX,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[vX]),_:1}),t(" }")])]),e("tr",null,[SX,e("td",TX,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[kX]),_:1})])]),e("tr",null,[CX,e("td",PX,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[wX]),_:1})])]),e("tr",null,[IX,e("td",MX,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[EX]),_:1})])]),FX,DX,RX,BX,NX,LX,OX,AX,HX,jX,GX,qX,VX,zX,ZX,UX,QX,KX,WX,$X,YX,JX])]),XX,e("p",null,[e("a",eee,[t("mocks/getSubscriptionContext.mock.ts:11"),n(l)])]),tee,e("table",null,[nee,e("tbody",null,[e("tr",null,[oee,e("td",see,[n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[lee]),_:1})])]),dee])]),aee,iee,e("table",null,[cee,e("tbody",null,[e("tr",null,[ree,e("td",uee,[t("{ "),hee,t(": { "),_ee,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[pee]),_:1}),t(" ; "),fee,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[gee]),_:1}),t(" ; "),mee,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[yee]),_:1}),t(" } ; "),bee,t(": "),n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[xee]),_:1}),t(" ; "),vee,t(": "),See,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Tee]),_:1}),t("> ; "),kee,t(": { "),Cee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Pee]),_:1}),t(" ; "),wee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[Iee]),_:1}),t(" ; "),Mee,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Eee]),_:1}),t(" } ; "),Fee,t(": <F>("),Dee,t(": "),Ree,t(", "),Bee,t(": "),Nee,t(", "),Lee,t(": "),Oee,t(" | "),Aee,t(", "),Hee,t(": ("),jee,t(": "),Gee,t(") => "),qee,t("<"),Vee,t(">) => "),zee,t("<"),Zee,t("> ; "),Uee,t(": { "),Qee,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[Kee]),_:1}),t(" ; "),Wee,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[$ee]),_:1}),t(" ; "),Yee,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[Jee]),_:1}),t(" } ; "),Xee,t(": <F>("),ete,t(": "),tte,t(", "),nte,t(": "),ote,t(", "),ste,t(": ("),lte,t(": "),dte,t(") => "),ate,t("<"),ite,t(">, "),cte,t(": "),rte,t(") => "),ute,t("<"),hte,t("> }")])]),e("tr",null,[_te,e("td",pte,[t("{ "),fte,t(": "),n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[gte]),_:1}),t(" ; "),mte,t(": "),n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[yte]),_:1}),t(" ; "),bte,t(": "),n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[xte]),_:1}),t(" }")])]),e("tr",null,[vte,e("td",Ste,[n(o,{to:"/api/modules/purista_core.html#configgetterfunction"},{default:s(()=>[Tte]),_:1})])]),e("tr",null,[kte,e("td",Cte,[n(o,{to:"/api/modules/purista_core.html#configdeletefunction"},{default:s(()=>[Pte]),_:1})])]),e("tr",null,[wte,e("td",Ite,[n(o,{to:"/api/modules/purista_core.html#configsetterfunction"},{default:s(()=>[Mte]),_:1})])]),e("tr",null,[Ete,e("td",Fte,[n(o,{to:"/api/classes/purista_core.Logger.html"},{default:s(()=>[Dte]),_:1})])]),e("tr",null,[Rte,e("td",Bte,[Nte,t("<"),n(o,{to:"/api/modules/purista_core.html#ebmessage"},{default:s(()=>[Lte]),_:1}),t(">")])]),e("tr",null,[Ote,e("td",Ate,[t("{ "),Hte,t(": "),n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[jte]),_:1}),t(" ; "),Gte,t(": "),n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[qte]),_:1}),t(" ; "),Vte,t(": "),n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[zte]),_:1}),t(" }")])]),e("tr",null,[Zte,e("td",Ute,[n(o,{to:"/api/modules/purista_core.html#secretgetterfunction"},{default:s(()=>[Qte]),_:1})])]),e("tr",null,[Kte,e("td",Wte,[n(o,{to:"/api/modules/purista_core.html#secretdeletefunction"},{default:s(()=>[$te]),_:1})])]),e("tr",null,[Yte,e("td",Jte,[n(o,{to:"/api/modules/purista_core.html#secretsetterfunction"},{default:s(()=>[Xte]),_:1})])]),ene,e("tr",null,[tne,e("td",nne,[t("{ "),one,t(": "),n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[sne]),_:1}),t(" ; "),lne,t(": "),n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[dne]),_:1}),t(" ; "),ane,t(": "),n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[ine]),_:1}),t(" }")])]),e("tr",null,[cne,e("td",rne,[n(o,{to:"/api/modules/purista_core.html#stategetterfunction"},{default:s(()=>[une]),_:1})])]),e("tr",null,[hne,e("td",_ne,[n(o,{to:"/api/modules/purista_core.html#statedeletefunction"},{default:s(()=>[pne]),_:1})])]),e("tr",null,[fne,e("td",gne,[n(o,{to:"/api/modules/purista_core.html#statesetterfunction"},{default:s(()=>[mne]),_:1})])]),yne,bne,xne,vne,Sne,Tne,kne,Cne,Pne,wne,Ine,Mne,Ene,Fne,Dne,Rne,Bne,Nne,Lne,One])]),Ane,e("p",null,[e("a",Hne,[t("mocks/getSubscriptionTransformContext.mock.ts:11"),n(l)])])])}const Zne=i(u,[["render",jne],["__file","purista_core.html.vue"]]);export{Zne as default};
