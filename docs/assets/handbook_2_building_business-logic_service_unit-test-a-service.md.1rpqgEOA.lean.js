import{_ as s,c as i,o as n,m as e,a as t}from"./chunks/framework.ITQiifkM.js";const f=JSON.parse('{"title":"Unit Test the Service","description":"How to unit test a PURISTA service","frontmatter":{"title":"Unit Test the Service","description":"How to unit test a PURISTA service","order":201030},"headers":[],"relativePath":"handbook/2_building_business-logic/service/unit-test-a-service.md","filePath":"handbook/2_building_business-logic/service/unit-test-a-service.md","lastUpdated":1707652430000}'),o={name:"handbook/2_building_business-logic/service/unit-test-a-service.md"},a=e("h1",{id:"unit-test-the-service",tabindex:"-1"},[t("Unit test the service "),e("a",{class:"header-anchor",href:"#unit-test-the-service","aria-label":'Permalink to "Unit test the service"'},"â€‹")],-1),c=e("p",null,"A service itself does not contain any logic which needs to be tested. It a container/group for commands and subscriptions.",-1),r=e("p",null,"If you use the CLI to generate a service, a simple unit test is generated. This test does not need any changes and only tests for valid configurations.",-1),d=e("p",null,[t("If you use an custom domain class, you might need to test this class. But be aware, that a service class "),e("strong",null,"should not"),t(" contain business logic."),e("br"),t(" Use custom classes to provide something like database connections.")],-1),l=[a,c,r,d];function u(h,_,v,p,m,b){return n(),i("div",null,l)}const U=s(o,[["render",u]]);export{f as __pageData,U as default};
