import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as l,c,b as e,e as a,w as n,d as t,a as d}from"./app-aQ4vLSXI.js";const h={},p=e("h1",{id:"class-redisstatestore-m-f-s",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-redisstatestore-m-f-s","aria-hidden":"true"},"#"),t(" Class: RedisStateStore<M, F, S>")],-1),u=d(`<p>A state store for using redis as storage. State values are stored as stringified JSON.</p><p>Per default, setting/changing and removal of values are enabled.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
 enableGet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 enableRemove<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 enableSet<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// optional, default is true</span>
 url<span class="token operator">:</span> <span class="token string">&#39;redis://alice:foobared@awesome.redis.server:6379&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisStateStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> config <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span> myState<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: { stateKey: { myState: &#39;value&#39; } }</span>

<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">removeState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>

value <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token string">&#39;stateKey&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// outputs: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>See documentation of underlaying redis lib package for detailed configuration options.</p><p><strong><code>See</code></strong></p>`,6),f={href:"https://redis.js.org",target:"_blank",rel:"noopener noreferrer"},g=d('<h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>M</code></td><td style="text-align:left;">extends <code>RedisModules</code> = <code>RedisModules</code></td></tr><tr><td style="text-align:left;"><code>F</code></td><td style="text-align:left;">extends <code>RedisFunctions</code> = <code>RedisFunctions</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <code>RedisScripts</code> = <code>RedisScripts</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',3),m=e("code",null,"StateStoreBaseClass",-1),_=e("code",null,"RedisStoreConfig",-1),b=e("code",null,"M",-1),y=e("code",null,"F",-1),x=e("code",null,"S",-1),S=e("p",null,[t("â†³ "),e("strong",null,[e("code",null,"RedisStateStore")])],-1),k=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),v=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),R=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),w=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),C=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),t(" Constructors")],-1),N=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),t(" constructor")],-1),L=e("strong",null,"new RedisStateStore",-1),M=e("code",null,"M",-1),P=e("code",null,"F",-1),T=e("code",null,"S",-1),B=e("code",null,"config?",-1),F=e("code",null,"RedisStateStore",-1),E=e("code",null,"M",-1),D=e("code",null,"F",-1),O=e("code",null,"S",-1),I=d('<h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>M</code></td><td style="text-align:left;">extends <code>RedisModules</code> = <code>RedisModules</code></td></tr><tr><td style="text-align:left;"><code>F</code></td><td style="text-align:left;">extends <code>RedisFunctions</code> = <code>RedisFunctions</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <code>RedisScripts</code> = <code>RedisScripts</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>config.cacheTtl?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Cache time to live in ms</td></tr><tr><td style="text-align:left;"><code>config.config?</code></td><td style="text-align:left;"><code>RedisClientOptions</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>config.enableCache?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable cache</td></tr><tr><td style="text-align:left;"><code>config.enableGet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally get method</td></tr><tr><td style="text-align:left;"><code>config.enableRemove?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally remove method</td></tr><tr><td style="text-align:left;"><code>config.enableSet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally set method</td></tr><tr><td style="text-align:left;"><code>config.logLevel?</code></td><td style="text-align:left;"><code>LogLevelName</code></td><td style="text-align:left;">A log level for new logger if logger is not set</td></tr><tr><td style="text-align:left;"><code>config.logger?</code></td><td style="text-align:left;"><code>Logger</code></td><td style="text-align:left;">A logger instance</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',5),A=e("code",null,"RedisStateStore",-1),V=e("code",null,"M",-1),K=e("code",null,"F",-1),j=e("code",null,"S",-1),G=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),H=e("p",null,"StateStoreBaseClass&lt;RedisStoreConfig&lt;M, F, S&gt;&gt;.constructor",-1),J=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),U={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-state-store/src/RedisStateStore.impl.ts#L45",target:"_blank",rel:"noopener noreferrer"},q=d('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="client" tabindex="-1"><a class="header-anchor" href="#client" aria-hidden="true">#</a> client</h3><p>â€¢ <strong>client</strong>: <code>RedisClientType</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',4),z={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-state-store/src/RedisStateStore.impl.ts#L43",target:"_blank",rel:"noopener noreferrer"},Q=d('<hr><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3><p>â€¢ <strong>config</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cacheTtl?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Cache time to live in ms</td></tr><tr><td style="text-align:left;"><code>config?</code></td><td style="text-align:left;"><code>RedisClientOptions</code>&lt;<code>M</code>, <code>F</code>, <code>S</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>enableCache?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable cache</td></tr><tr><td style="text-align:left;"><code>enableGet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally get method</td></tr><tr><td style="text-align:left;"><code>enableRemove?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally remove method</td></tr><tr><td style="text-align:left;"><code>enableSet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enable generally set method</td></tr><tr><td style="text-align:left;"><code>logLevel?</code></td><td style="text-align:left;"><code>LogLevelName</code></td><td style="text-align:left;">A log level for new logger if logger is not set</td></tr><tr><td style="text-align:left;"><code>logger?</code></td><td style="text-align:left;"><code>Logger</code></td><td style="text-align:left;">A logger instance</td></tr></tbody></table><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4><p>StateStoreBaseClass.config</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/StateStore/StateStoreBaseClass.impl.d.ts:10</p><hr><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>â€¢ <strong>logger</strong>: <code>Logger</code></p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4><p>StateStoreBaseClass.logger</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/StateStore/StateStoreBaseClass.impl.d.ts:9</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>â€¢ <strong>name</strong>: <code>string</code></p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4><p>StateStoreBaseClass.name</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>core/lib/types/core/StateStore/StateStoreBaseClass.impl.d.ts:11</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy" aria-hidden="true">#</a> destroy</h3><p>â–¸ <strong>destroy</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1" aria-hidden="true">#</a> Overrides</h4><p>StateStoreBaseClass.destroy</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',31),W={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-state-store/src/RedisStateStore.impl.ts#L109",target:"_blank",rel:"noopener noreferrer"},X=d('<hr><h3 id="getstate" tabindex="-1"><a class="header-anchor" href="#getstate" aria-hidden="true">#</a> getState</h3><p>â–¸ <strong>getState</strong>(<code>...stateNames</code>): <code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;&gt;</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...stateNames</code></td><td style="text-align:left;"><code>string</code>[]</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;&gt;</p><h4 id="overrides-2" tabindex="-1"><a class="header-anchor" href="#overrides-2" aria-hidden="true">#</a> Overrides</h4><p>StateStoreBaseClass.getState</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',10),Y={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-state-store/src/RedisStateStore.impl.ts#L51",target:"_blank",rel:"noopener noreferrer"},Z=d('<hr><h3 id="removestate" tabindex="-1"><a class="header-anchor" href="#removestate" aria-hidden="true">#</a> removeState</h3><p>â–¸ <strong>removeState</strong>(<code>stateName</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-3" tabindex="-1"><a class="header-anchor" href="#overrides-3" aria-hidden="true">#</a> Overrides</h4><p>StateStoreBaseClass.removeState</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',10),$={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-state-store/src/RedisStateStore.impl.ts#L74",target:"_blank",rel:"noopener noreferrer"},ee=d('<hr><h3 id="setstate" tabindex="-1"><a class="header-anchor" href="#setstate" aria-hidden="true">#</a> setState</h3><p>â–¸ <strong>setState</strong>(<code>stateName</code>, <code>stateValue</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>stateName</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>stateValue</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="overrides-4" tabindex="-1"><a class="header-anchor" href="#overrides-4" aria-hidden="true">#</a> Overrides</h4><p>StateStoreBaseClass.setState</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',10),te={href:"https://github.com/sebastianwessel/purista/blob/master/packages/redis-state-store/src/RedisStateStore.impl.ts#L92",target:"_blank",rel:"noopener noreferrer"};function ae(se,ne){const s=r("RouterLink"),o=r("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[a(s,{to:"/api/"},{default:n(()=>[t("PURISTA API")]),_:1}),t(" / "),a(s,{to:"/api/modules.html"},{default:n(()=>[t("Modules")]),_:1}),t(" / "),a(s,{to:"/api/modules/purista_redis_state_store.html"},{default:n(()=>[t("@purista/redis-state-store")]),_:1}),t(" / RedisStateStore")]),p,e("p",null,[a(s,{to:"/api/modules/purista_redis_state_store.html"},{default:n(()=>[t("@purista/redis-state-store")]),_:1}),t(".RedisStateStore")]),u,e("p",null,[e("a",f,[t("NODE-REDIS"),a(o)])]),g,e("ul",null,[e("li",null,[e("p",null,[m,t("<"),a(s,{to:"/api/modules/purista_redis_state_store.html#redisstoreconfig"},{default:n(()=>[_]),_:1}),t("<"),b,t(", "),y,t(", "),x,t(">>")]),S])]),k,v,e("ul",null,[e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),R,e("ul",null,[e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#client"},{default:n(()=>[t("client")]),_:1})]),e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#config"},{default:n(()=>[t("config")]),_:1})]),e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#logger"},{default:n(()=>[t("logger")]),_:1})]),e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#name"},{default:n(()=>[t("name")]),_:1})])]),w,e("ul",null,[e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#destroy"},{default:n(()=>[t("destroy")]),_:1})]),e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#getstate"},{default:n(()=>[t("getState")]),_:1})]),e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#removestate"},{default:n(()=>[t("removeState")]),_:1})]),e("li",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html#setstate"},{default:n(()=>[t("setState")]),_:1})])]),C,N,e("p",null,[t("â€¢ "),L,t("<"),M,t(", "),P,t(", "),T,t(">("),B,t("): "),a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html"},{default:n(()=>[F]),_:1}),t("<"),E,t(", "),D,t(", "),O,t(">")]),I,e("p",null,[a(s,{to:"/api/classes/purista_redis_state_store.RedisStateStore.html"},{default:n(()=>[A]),_:1}),t("<"),V,t(", "),K,t(", "),j,t(">")]),G,H,J,e("p",null,[e("a",U,[t("redis-state-store/src/RedisStateStore.impl.ts:45"),a(o)])]),q,e("p",null,[e("a",z,[t("redis-state-store/src/RedisStateStore.impl.ts:43"),a(o)])]),Q,e("p",null,[e("a",W,[t("redis-state-store/src/RedisStateStore.impl.ts:109"),a(o)])]),X,e("p",null,[e("a",Y,[t("redis-state-store/src/RedisStateStore.impl.ts:51"),a(o)])]),Z,e("p",null,[e("a",$,[t("redis-state-store/src/RedisStateStore.impl.ts:74"),a(o)])]),ee,e("p",null,[e("a",te,[t("redis-state-store/src/RedisStateStore.impl.ts:92"),a(o)])])])}const re=i(h,[["render",ae],["__file","purista_redis_state_store.RedisStateStore.html.vue"]]);export{re as default};
